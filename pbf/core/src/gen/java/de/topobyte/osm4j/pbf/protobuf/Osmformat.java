// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: res/proto/osmformat.proto

package de.topobyte.osm4j.pbf.protobuf;

public final class Osmformat {
  private Osmformat() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface HeaderBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:OSMPBF.HeaderBlock)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional .OSMPBF.HeaderBBox bbox = 1;</code>
     * @return Whether the bbox field is set.
     */
    boolean hasBbox();
    /**
     * <code>optional .OSMPBF.HeaderBBox bbox = 1;</code>
     * @return The bbox.
     */
    de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox getBbox();

    /**
     * <pre>
     * Additional tags to aid in parsing this dataset 
     * </pre>
     *
     * <code>repeated string required_features = 4;</code>
     * @return A list containing the requiredFeatures.
     */
    java.util.List<java.lang.String>
        getRequiredFeaturesList();
    /**
     * <pre>
     * Additional tags to aid in parsing this dataset 
     * </pre>
     *
     * <code>repeated string required_features = 4;</code>
     * @return The count of requiredFeatures.
     */
    int getRequiredFeaturesCount();
    /**
     * <pre>
     * Additional tags to aid in parsing this dataset 
     * </pre>
     *
     * <code>repeated string required_features = 4;</code>
     * @param index The index of the element to return.
     * @return The requiredFeatures at the given index.
     */
    java.lang.String getRequiredFeatures(int index);
    /**
     * <pre>
     * Additional tags to aid in parsing this dataset 
     * </pre>
     *
     * <code>repeated string required_features = 4;</code>
     * @param index The index of the element to return.
     * @return The requiredFeatures at the given index.
     */
    com.google.protobuf.ByteString
        getRequiredFeaturesBytes(int index);

    /**
     * <code>repeated string optional_features = 5;</code>
     * @return A list containing the optionalFeatures.
     */
    java.util.List<java.lang.String>
        getOptionalFeaturesList();
    /**
     * <code>repeated string optional_features = 5;</code>
     * @return The count of optionalFeatures.
     */
    int getOptionalFeaturesCount();
    /**
     * <code>repeated string optional_features = 5;</code>
     * @param index The index of the element to return.
     * @return The optionalFeatures at the given index.
     */
    java.lang.String getOptionalFeatures(int index);
    /**
     * <code>repeated string optional_features = 5;</code>
     * @param index The index of the element to return.
     * @return The optionalFeatures at the given index.
     */
    com.google.protobuf.ByteString
        getOptionalFeaturesBytes(int index);

    /**
     * <code>optional string writingprogram = 16;</code>
     * @return Whether the writingprogram field is set.
     */
    boolean hasWritingprogram();
    /**
     * <code>optional string writingprogram = 16;</code>
     * @return The writingprogram.
     */
    java.lang.String getWritingprogram();
    /**
     * <code>optional string writingprogram = 16;</code>
     * @return The bytes for writingprogram.
     */
    com.google.protobuf.ByteString
        getWritingprogramBytes();

    /**
     * <pre>
     * From the bbox field.
     * </pre>
     *
     * <code>optional string source = 17;</code>
     * @return Whether the source field is set.
     */
    boolean hasSource();
    /**
     * <pre>
     * From the bbox field.
     * </pre>
     *
     * <code>optional string source = 17;</code>
     * @return The source.
     */
    java.lang.String getSource();
    /**
     * <pre>
     * From the bbox field.
     * </pre>
     *
     * <code>optional string source = 17;</code>
     * @return The bytes for source.
     */
    com.google.protobuf.ByteString
        getSourceBytes();
  }
  /**
   * Protobuf type {@code OSMPBF.HeaderBlock}
   */
  public  static final class HeaderBlock extends
      com.google.protobuf.GeneratedMessageLite<
          HeaderBlock, HeaderBlock.Builder> implements
      // @@protoc_insertion_point(message_implements:OSMPBF.HeaderBlock)
      HeaderBlockOrBuilder {
    private HeaderBlock() {
      requiredFeatures_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      optionalFeatures_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
      writingprogram_ = "";
      source_ = "";
    }
    private int bitField0_;
    public static final int BBOX_FIELD_NUMBER = 1;
    private de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox bbox_;
    /**
     * <code>optional .OSMPBF.HeaderBBox bbox = 1;</code>
     */
    @java.lang.Override
    public boolean hasBbox() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .OSMPBF.HeaderBBox bbox = 1;</code>
     */
    @java.lang.Override
    public de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox getBbox() {
      return bbox_ == null ? de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox.getDefaultInstance() : bbox_;
    }
    /**
     * <code>optional .OSMPBF.HeaderBBox bbox = 1;</code>
     */
    private void setBbox(de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox value) {
      value.getClass();
  bbox_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>optional .OSMPBF.HeaderBBox bbox = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeBbox(de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox value) {
      value.getClass();
  if (bbox_ != null &&
          bbox_ != de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox.getDefaultInstance()) {
        bbox_ =
          de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox.newBuilder(bbox_).mergeFrom(value).buildPartial();
      } else {
        bbox_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>optional .OSMPBF.HeaderBBox bbox = 1;</code>
     */
    private void clearBbox() {  bbox_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int REQUIRED_FEATURES_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<java.lang.String> requiredFeatures_;
    /**
     * <pre>
     * Additional tags to aid in parsing this dataset 
     * </pre>
     *
     * <code>repeated string required_features = 4;</code>
     * @return A list containing the requiredFeatures.
     */
    @java.lang.Override
    public java.util.List<java.lang.String> getRequiredFeaturesList() {
      return requiredFeatures_;
    }
    /**
     * <pre>
     * Additional tags to aid in parsing this dataset 
     * </pre>
     *
     * <code>repeated string required_features = 4;</code>
     * @return The count of requiredFeatures.
     */
    @java.lang.Override
    public int getRequiredFeaturesCount() {
      return requiredFeatures_.size();
    }
    /**
     * <pre>
     * Additional tags to aid in parsing this dataset 
     * </pre>
     *
     * <code>repeated string required_features = 4;</code>
     * @param index The index of the element to return.
     * @return The requiredFeatures at the given index.
     */
    @java.lang.Override
    public java.lang.String getRequiredFeatures(int index) {
      return requiredFeatures_.get(index);
    }
    /**
     * <pre>
     * Additional tags to aid in parsing this dataset 
     * </pre>
     *
     * <code>repeated string required_features = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the requiredFeatures at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getRequiredFeaturesBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          requiredFeatures_.get(index));
    }
    private void ensureRequiredFeaturesIsMutable() {
      com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
          requiredFeatures_;  if (!tmp.isModifiable()) {
        requiredFeatures_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * Additional tags to aid in parsing this dataset 
     * </pre>
     *
     * <code>repeated string required_features = 4;</code>
     * @param index The index to set the value at.
     * @param value The requiredFeatures to set.
     */
    private void setRequiredFeatures(
        int index, java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  ensureRequiredFeaturesIsMutable();
      requiredFeatures_.set(index, value);
    }
    /**
     * <pre>
     * Additional tags to aid in parsing this dataset 
     * </pre>
     *
     * <code>repeated string required_features = 4;</code>
     * @param value The requiredFeatures to add.
     */
    private void addRequiredFeatures(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  ensureRequiredFeaturesIsMutable();
      requiredFeatures_.add(value);
    }
    /**
     * <pre>
     * Additional tags to aid in parsing this dataset 
     * </pre>
     *
     * <code>repeated string required_features = 4;</code>
     * @param values The requiredFeatures to add.
     */
    private void addAllRequiredFeatures(
        java.lang.Iterable<java.lang.String> values) {
      ensureRequiredFeaturesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, requiredFeatures_);
    }
    /**
     * <pre>
     * Additional tags to aid in parsing this dataset 
     * </pre>
     *
     * <code>repeated string required_features = 4;</code>
     */
    private void clearRequiredFeatures() {
      requiredFeatures_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <pre>
     * Additional tags to aid in parsing this dataset 
     * </pre>
     *
     * <code>repeated string required_features = 4;</code>
     * @param value The bytes of the requiredFeatures to add.
     */
    private void addRequiredFeaturesBytes(
        com.google.protobuf.ByteString value) {
      ensureRequiredFeaturesIsMutable();
      requiredFeatures_.add(value.toStringUtf8());
    }

    public static final int OPTIONAL_FEATURES_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.ProtobufList<java.lang.String> optionalFeatures_;
    /**
     * <code>repeated string optional_features = 5;</code>
     * @return A list containing the optionalFeatures.
     */
    @java.lang.Override
    public java.util.List<java.lang.String> getOptionalFeaturesList() {
      return optionalFeatures_;
    }
    /**
     * <code>repeated string optional_features = 5;</code>
     * @return The count of optionalFeatures.
     */
    @java.lang.Override
    public int getOptionalFeaturesCount() {
      return optionalFeatures_.size();
    }
    /**
     * <code>repeated string optional_features = 5;</code>
     * @param index The index of the element to return.
     * @return The optionalFeatures at the given index.
     */
    @java.lang.Override
    public java.lang.String getOptionalFeatures(int index) {
      return optionalFeatures_.get(index);
    }
    /**
     * <code>repeated string optional_features = 5;</code>
     * @param index The index of the value to return.
     * @return The bytes of the optionalFeatures at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getOptionalFeaturesBytes(int index) {
      return com.google.protobuf.ByteString.copyFromUtf8(
          optionalFeatures_.get(index));
    }
    private void ensureOptionalFeaturesIsMutable() {
      com.google.protobuf.Internal.ProtobufList<java.lang.String> tmp =
          optionalFeatures_;  if (!tmp.isModifiable()) {
        optionalFeatures_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <code>repeated string optional_features = 5;</code>
     * @param index The index to set the value at.
     * @param value The optionalFeatures to set.
     */
    private void setOptionalFeatures(
        int index, java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  ensureOptionalFeaturesIsMutable();
      optionalFeatures_.set(index, value);
    }
    /**
     * <code>repeated string optional_features = 5;</code>
     * @param value The optionalFeatures to add.
     */
    private void addOptionalFeatures(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  ensureOptionalFeaturesIsMutable();
      optionalFeatures_.add(value);
    }
    /**
     * <code>repeated string optional_features = 5;</code>
     * @param values The optionalFeatures to add.
     */
    private void addAllOptionalFeatures(
        java.lang.Iterable<java.lang.String> values) {
      ensureOptionalFeaturesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, optionalFeatures_);
    }
    /**
     * <code>repeated string optional_features = 5;</code>
     */
    private void clearOptionalFeatures() {
      optionalFeatures_ = com.google.protobuf.GeneratedMessageLite.emptyProtobufList();
    }
    /**
     * <code>repeated string optional_features = 5;</code>
     * @param value The bytes of the optionalFeatures to add.
     */
    private void addOptionalFeaturesBytes(
        com.google.protobuf.ByteString value) {
      ensureOptionalFeaturesIsMutable();
      optionalFeatures_.add(value.toStringUtf8());
    }

    public static final int WRITINGPROGRAM_FIELD_NUMBER = 16;
    private java.lang.String writingprogram_;
    /**
     * <code>optional string writingprogram = 16;</code>
     * @return Whether the writingprogram field is set.
     */
    @java.lang.Override
    public boolean hasWritingprogram() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string writingprogram = 16;</code>
     * @return The writingprogram.
     */
    @java.lang.Override
    public java.lang.String getWritingprogram() {
      return writingprogram_;
    }
    /**
     * <code>optional string writingprogram = 16;</code>
     * @return The bytes for writingprogram.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getWritingprogramBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(writingprogram_);
    }
    /**
     * <code>optional string writingprogram = 16;</code>
     * @param value The writingprogram to set.
     */
    private void setWritingprogram(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  bitField0_ |= 0x00000002;
      writingprogram_ = value;
    }
    /**
     * <code>optional string writingprogram = 16;</code>
     */
    private void clearWritingprogram() {
      bitField0_ = (bitField0_ & ~0x00000002);
      writingprogram_ = getDefaultInstance().getWritingprogram();
    }
    /**
     * <code>optional string writingprogram = 16;</code>
     * @param value The bytes for writingprogram to set.
     */
    private void setWritingprogramBytes(
        com.google.protobuf.ByteString value) {
      writingprogram_ = value.toStringUtf8();
      bitField0_ |= 0x00000002;
    }

    public static final int SOURCE_FIELD_NUMBER = 17;
    private java.lang.String source_;
    /**
     * <pre>
     * From the bbox field.
     * </pre>
     *
     * <code>optional string source = 17;</code>
     * @return Whether the source field is set.
     */
    @java.lang.Override
    public boolean hasSource() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * From the bbox field.
     * </pre>
     *
     * <code>optional string source = 17;</code>
     * @return The source.
     */
    @java.lang.Override
    public java.lang.String getSource() {
      return source_;
    }
    /**
     * <pre>
     * From the bbox field.
     * </pre>
     *
     * <code>optional string source = 17;</code>
     * @return The bytes for source.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getSourceBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(source_);
    }
    /**
     * <pre>
     * From the bbox field.
     * </pre>
     *
     * <code>optional string source = 17;</code>
     * @param value The source to set.
     */
    private void setSource(
        java.lang.String value) {
      java.lang.Class<?> valueClass = value.getClass();
  bitField0_ |= 0x00000004;
      source_ = value;
    }
    /**
     * <pre>
     * From the bbox field.
     * </pre>
     *
     * <code>optional string source = 17;</code>
     */
    private void clearSource() {
      bitField0_ = (bitField0_ & ~0x00000004);
      source_ = getDefaultInstance().getSource();
    }
    /**
     * <pre>
     * From the bbox field.
     * </pre>
     *
     * <code>optional string source = 17;</code>
     * @param value The bytes for source to set.
     */
    private void setSourceBytes(
        com.google.protobuf.ByteString value) {
      source_ = value.toStringUtf8();
      bitField0_ |= 0x00000004;
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlock parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlock parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlock prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code OSMPBF.HeaderBlock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlock, Builder> implements
        // @@protoc_insertion_point(builder_implements:OSMPBF.HeaderBlock)
        de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlockOrBuilder {
      // Construct using de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlock.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional .OSMPBF.HeaderBBox bbox = 1;</code>
       */
      @java.lang.Override
      public boolean hasBbox() {
        return instance.hasBbox();
      }
      /**
       * <code>optional .OSMPBF.HeaderBBox bbox = 1;</code>
       */
      @java.lang.Override
      public de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox getBbox() {
        return instance.getBbox();
      }
      /**
       * <code>optional .OSMPBF.HeaderBBox bbox = 1;</code>
       */
      public Builder setBbox(de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox value) {
        copyOnWrite();
        instance.setBbox(value);
        return this;
        }
      /**
       * <code>optional .OSMPBF.HeaderBBox bbox = 1;</code>
       */
      public Builder setBbox(
          de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox.Builder builderForValue) {
        copyOnWrite();
        instance.setBbox(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .OSMPBF.HeaderBBox bbox = 1;</code>
       */
      public Builder mergeBbox(de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox value) {
        copyOnWrite();
        instance.mergeBbox(value);
        return this;
      }
      /**
       * <code>optional .OSMPBF.HeaderBBox bbox = 1;</code>
       */
      public Builder clearBbox() {  copyOnWrite();
        instance.clearBbox();
        return this;
      }

      /**
       * <pre>
       * Additional tags to aid in parsing this dataset 
       * </pre>
       *
       * <code>repeated string required_features = 4;</code>
       * @return A list containing the requiredFeatures.
       */
      @java.lang.Override
      public java.util.List<java.lang.String>
          getRequiredFeaturesList() {
        return java.util.Collections.unmodifiableList(
            instance.getRequiredFeaturesList());
      }
      /**
       * <pre>
       * Additional tags to aid in parsing this dataset 
       * </pre>
       *
       * <code>repeated string required_features = 4;</code>
       * @return The count of requiredFeatures.
       */
      @java.lang.Override
      public int getRequiredFeaturesCount() {
        return instance.getRequiredFeaturesCount();
      }
      /**
       * <pre>
       * Additional tags to aid in parsing this dataset 
       * </pre>
       *
       * <code>repeated string required_features = 4;</code>
       * @param index The index of the element to return.
       * @return The requiredFeatures at the given index.
       */
      @java.lang.Override
      public java.lang.String getRequiredFeatures(int index) {
        return instance.getRequiredFeatures(index);
      }
      /**
       * <pre>
       * Additional tags to aid in parsing this dataset 
       * </pre>
       *
       * <code>repeated string required_features = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the requiredFeatures at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getRequiredFeaturesBytes(int index) {
        return instance.getRequiredFeaturesBytes(index);
      }
      /**
       * <pre>
       * Additional tags to aid in parsing this dataset 
       * </pre>
       *
       * <code>repeated string required_features = 4;</code>
       * @param index The index to set the value at.
       * @param value The requiredFeatures to set.
       * @return This builder for chaining.
       */
      public Builder setRequiredFeatures(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setRequiredFeatures(index, value);
        return this;
      }
      /**
       * <pre>
       * Additional tags to aid in parsing this dataset 
       * </pre>
       *
       * <code>repeated string required_features = 4;</code>
       * @param value The requiredFeatures to add.
       * @return This builder for chaining.
       */
      public Builder addRequiredFeatures(
          java.lang.String value) {
        copyOnWrite();
        instance.addRequiredFeatures(value);
        return this;
      }
      /**
       * <pre>
       * Additional tags to aid in parsing this dataset 
       * </pre>
       *
       * <code>repeated string required_features = 4;</code>
       * @param values The requiredFeatures to add.
       * @return This builder for chaining.
       */
      public Builder addAllRequiredFeatures(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllRequiredFeatures(values);
        return this;
      }
      /**
       * <pre>
       * Additional tags to aid in parsing this dataset 
       * </pre>
       *
       * <code>repeated string required_features = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequiredFeatures() {
        copyOnWrite();
        instance.clearRequiredFeatures();
        return this;
      }
      /**
       * <pre>
       * Additional tags to aid in parsing this dataset 
       * </pre>
       *
       * <code>repeated string required_features = 4;</code>
       * @param value The bytes of the requiredFeatures to add.
       * @return This builder for chaining.
       */
      public Builder addRequiredFeaturesBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addRequiredFeaturesBytes(value);
        return this;
      }

      /**
       * <code>repeated string optional_features = 5;</code>
       * @return A list containing the optionalFeatures.
       */
      @java.lang.Override
      public java.util.List<java.lang.String>
          getOptionalFeaturesList() {
        return java.util.Collections.unmodifiableList(
            instance.getOptionalFeaturesList());
      }
      /**
       * <code>repeated string optional_features = 5;</code>
       * @return The count of optionalFeatures.
       */
      @java.lang.Override
      public int getOptionalFeaturesCount() {
        return instance.getOptionalFeaturesCount();
      }
      /**
       * <code>repeated string optional_features = 5;</code>
       * @param index The index of the element to return.
       * @return The optionalFeatures at the given index.
       */
      @java.lang.Override
      public java.lang.String getOptionalFeatures(int index) {
        return instance.getOptionalFeatures(index);
      }
      /**
       * <code>repeated string optional_features = 5;</code>
       * @param index The index of the value to return.
       * @return The bytes of the optionalFeatures at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getOptionalFeaturesBytes(int index) {
        return instance.getOptionalFeaturesBytes(index);
      }
      /**
       * <code>repeated string optional_features = 5;</code>
       * @param index The index to set the value at.
       * @param value The optionalFeatures to set.
       * @return This builder for chaining.
       */
      public Builder setOptionalFeatures(
          int index, java.lang.String value) {
        copyOnWrite();
        instance.setOptionalFeatures(index, value);
        return this;
      }
      /**
       * <code>repeated string optional_features = 5;</code>
       * @param value The optionalFeatures to add.
       * @return This builder for chaining.
       */
      public Builder addOptionalFeatures(
          java.lang.String value) {
        copyOnWrite();
        instance.addOptionalFeatures(value);
        return this;
      }
      /**
       * <code>repeated string optional_features = 5;</code>
       * @param values The optionalFeatures to add.
       * @return This builder for chaining.
       */
      public Builder addAllOptionalFeatures(
          java.lang.Iterable<java.lang.String> values) {
        copyOnWrite();
        instance.addAllOptionalFeatures(values);
        return this;
      }
      /**
       * <code>repeated string optional_features = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearOptionalFeatures() {
        copyOnWrite();
        instance.clearOptionalFeatures();
        return this;
      }
      /**
       * <code>repeated string optional_features = 5;</code>
       * @param value The bytes of the optionalFeatures to add.
       * @return This builder for chaining.
       */
      public Builder addOptionalFeaturesBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addOptionalFeaturesBytes(value);
        return this;
      }

      /**
       * <code>optional string writingprogram = 16;</code>
       * @return Whether the writingprogram field is set.
       */
      @java.lang.Override
      public boolean hasWritingprogram() {
        return instance.hasWritingprogram();
      }
      /**
       * <code>optional string writingprogram = 16;</code>
       * @return The writingprogram.
       */
      @java.lang.Override
      public java.lang.String getWritingprogram() {
        return instance.getWritingprogram();
      }
      /**
       * <code>optional string writingprogram = 16;</code>
       * @return The bytes for writingprogram.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getWritingprogramBytes() {
        return instance.getWritingprogramBytes();
      }
      /**
       * <code>optional string writingprogram = 16;</code>
       * @param value The writingprogram to set.
       * @return This builder for chaining.
       */
      public Builder setWritingprogram(
          java.lang.String value) {
        copyOnWrite();
        instance.setWritingprogram(value);
        return this;
      }
      /**
       * <code>optional string writingprogram = 16;</code>
       * @return This builder for chaining.
       */
      public Builder clearWritingprogram() {
        copyOnWrite();
        instance.clearWritingprogram();
        return this;
      }
      /**
       * <code>optional string writingprogram = 16;</code>
       * @param value The bytes for writingprogram to set.
       * @return This builder for chaining.
       */
      public Builder setWritingprogramBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setWritingprogramBytes(value);
        return this;
      }

      /**
       * <pre>
       * From the bbox field.
       * </pre>
       *
       * <code>optional string source = 17;</code>
       * @return Whether the source field is set.
       */
      @java.lang.Override
      public boolean hasSource() {
        return instance.hasSource();
      }
      /**
       * <pre>
       * From the bbox field.
       * </pre>
       *
       * <code>optional string source = 17;</code>
       * @return The source.
       */
      @java.lang.Override
      public java.lang.String getSource() {
        return instance.getSource();
      }
      /**
       * <pre>
       * From the bbox field.
       * </pre>
       *
       * <code>optional string source = 17;</code>
       * @return The bytes for source.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getSourceBytes() {
        return instance.getSourceBytes();
      }
      /**
       * <pre>
       * From the bbox field.
       * </pre>
       *
       * <code>optional string source = 17;</code>
       * @param value The source to set.
       * @return This builder for chaining.
       */
      public Builder setSource(
          java.lang.String value) {
        copyOnWrite();
        instance.setSource(value);
        return this;
      }
      /**
       * <pre>
       * From the bbox field.
       * </pre>
       *
       * <code>optional string source = 17;</code>
       * @return This builder for chaining.
       */
      public Builder clearSource() {
        copyOnWrite();
        instance.clearSource();
        return this;
      }
      /**
       * <pre>
       * From the bbox field.
       * </pre>
       *
       * <code>optional string source = 17;</code>
       * @param value The bytes for source to set.
       * @return This builder for chaining.
       */
      public Builder setSourceBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setSourceBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OSMPBF.HeaderBlock)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlock();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "bbox_",
              "requiredFeatures_",
              "optionalFeatures_",
              "writingprogram_",
              "source_",
            };
            java.lang.String info =
                "\u0001\u0005\u0000\u0001\u0001\u0011\u0005\u0000\u0002\u0001\u0001\u1409\u0000\u0004" +
                "\u001a\u0005\u001a\u0010\u1008\u0001\u0011\u1008\u0002";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlock> parser = PARSER;
          if (parser == null) {
            synchronized (de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlock.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlock>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:OSMPBF.HeaderBlock)
    private static final de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlock DEFAULT_INSTANCE;
    static {
      HeaderBlock defaultInstance = new HeaderBlock();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        HeaderBlock.class, defaultInstance);
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBlock getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HeaderBlock> PARSER;

    public static com.google.protobuf.Parser<HeaderBlock> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface HeaderBBoxOrBuilder extends
      // @@protoc_insertion_point(interface_extends:OSMPBF.HeaderBBox)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required sint64 left = 1;</code>
     * @return Whether the left field is set.
     */
    boolean hasLeft();
    /**
     * <code>required sint64 left = 1;</code>
     * @return The left.
     */
    long getLeft();

    /**
     * <code>required sint64 right = 2;</code>
     * @return Whether the right field is set.
     */
    boolean hasRight();
    /**
     * <code>required sint64 right = 2;</code>
     * @return The right.
     */
    long getRight();

    /**
     * <code>required sint64 top = 3;</code>
     * @return Whether the top field is set.
     */
    boolean hasTop();
    /**
     * <code>required sint64 top = 3;</code>
     * @return The top.
     */
    long getTop();

    /**
     * <code>required sint64 bottom = 4;</code>
     * @return Whether the bottom field is set.
     */
    boolean hasBottom();
    /**
     * <code>required sint64 bottom = 4;</code>
     * @return The bottom.
     */
    long getBottom();
  }
  /**
   * Protobuf type {@code OSMPBF.HeaderBBox}
   */
  public  static final class HeaderBBox extends
      com.google.protobuf.GeneratedMessageLite<
          HeaderBBox, HeaderBBox.Builder> implements
      // @@protoc_insertion_point(message_implements:OSMPBF.HeaderBBox)
      HeaderBBoxOrBuilder {
    private HeaderBBox() {
    }
    private int bitField0_;
    public static final int LEFT_FIELD_NUMBER = 1;
    private long left_;
    /**
     * <code>required sint64 left = 1;</code>
     * @return Whether the left field is set.
     */
    @java.lang.Override
    public boolean hasLeft() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required sint64 left = 1;</code>
     * @return The left.
     */
    @java.lang.Override
    public long getLeft() {
      return left_;
    }
    /**
     * <code>required sint64 left = 1;</code>
     * @param value The left to set.
     */
    private void setLeft(long value) {
      bitField0_ |= 0x00000001;
      left_ = value;
    }
    /**
     * <code>required sint64 left = 1;</code>
     */
    private void clearLeft() {
      bitField0_ = (bitField0_ & ~0x00000001);
      left_ = 0L;
    }

    public static final int RIGHT_FIELD_NUMBER = 2;
    private long right_;
    /**
     * <code>required sint64 right = 2;</code>
     * @return Whether the right field is set.
     */
    @java.lang.Override
    public boolean hasRight() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required sint64 right = 2;</code>
     * @return The right.
     */
    @java.lang.Override
    public long getRight() {
      return right_;
    }
    /**
     * <code>required sint64 right = 2;</code>
     * @param value The right to set.
     */
    private void setRight(long value) {
      bitField0_ |= 0x00000002;
      right_ = value;
    }
    /**
     * <code>required sint64 right = 2;</code>
     */
    private void clearRight() {
      bitField0_ = (bitField0_ & ~0x00000002);
      right_ = 0L;
    }

    public static final int TOP_FIELD_NUMBER = 3;
    private long top_;
    /**
     * <code>required sint64 top = 3;</code>
     * @return Whether the top field is set.
     */
    @java.lang.Override
    public boolean hasTop() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required sint64 top = 3;</code>
     * @return The top.
     */
    @java.lang.Override
    public long getTop() {
      return top_;
    }
    /**
     * <code>required sint64 top = 3;</code>
     * @param value The top to set.
     */
    private void setTop(long value) {
      bitField0_ |= 0x00000004;
      top_ = value;
    }
    /**
     * <code>required sint64 top = 3;</code>
     */
    private void clearTop() {
      bitField0_ = (bitField0_ & ~0x00000004);
      top_ = 0L;
    }

    public static final int BOTTOM_FIELD_NUMBER = 4;
    private long bottom_;
    /**
     * <code>required sint64 bottom = 4;</code>
     * @return Whether the bottom field is set.
     */
    @java.lang.Override
    public boolean hasBottom() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>required sint64 bottom = 4;</code>
     * @return The bottom.
     */
    @java.lang.Override
    public long getBottom() {
      return bottom_;
    }
    /**
     * <code>required sint64 bottom = 4;</code>
     * @param value The bottom to set.
     */
    private void setBottom(long value) {
      bitField0_ |= 0x00000008;
      bottom_ = value;
    }
    /**
     * <code>required sint64 bottom = 4;</code>
     */
    private void clearBottom() {
      bitField0_ = (bitField0_ & ~0x00000008);
      bottom_ = 0L;
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code OSMPBF.HeaderBBox}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox, Builder> implements
        // @@protoc_insertion_point(builder_implements:OSMPBF.HeaderBBox)
        de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBoxOrBuilder {
      // Construct using de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required sint64 left = 1;</code>
       * @return Whether the left field is set.
       */
      @java.lang.Override
      public boolean hasLeft() {
        return instance.hasLeft();
      }
      /**
       * <code>required sint64 left = 1;</code>
       * @return The left.
       */
      @java.lang.Override
      public long getLeft() {
        return instance.getLeft();
      }
      /**
       * <code>required sint64 left = 1;</code>
       * @param value The left to set.
       * @return This builder for chaining.
       */
      public Builder setLeft(long value) {
        copyOnWrite();
        instance.setLeft(value);
        return this;
      }
      /**
       * <code>required sint64 left = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeft() {
        copyOnWrite();
        instance.clearLeft();
        return this;
      }

      /**
       * <code>required sint64 right = 2;</code>
       * @return Whether the right field is set.
       */
      @java.lang.Override
      public boolean hasRight() {
        return instance.hasRight();
      }
      /**
       * <code>required sint64 right = 2;</code>
       * @return The right.
       */
      @java.lang.Override
      public long getRight() {
        return instance.getRight();
      }
      /**
       * <code>required sint64 right = 2;</code>
       * @param value The right to set.
       * @return This builder for chaining.
       */
      public Builder setRight(long value) {
        copyOnWrite();
        instance.setRight(value);
        return this;
      }
      /**
       * <code>required sint64 right = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRight() {
        copyOnWrite();
        instance.clearRight();
        return this;
      }

      /**
       * <code>required sint64 top = 3;</code>
       * @return Whether the top field is set.
       */
      @java.lang.Override
      public boolean hasTop() {
        return instance.hasTop();
      }
      /**
       * <code>required sint64 top = 3;</code>
       * @return The top.
       */
      @java.lang.Override
      public long getTop() {
        return instance.getTop();
      }
      /**
       * <code>required sint64 top = 3;</code>
       * @param value The top to set.
       * @return This builder for chaining.
       */
      public Builder setTop(long value) {
        copyOnWrite();
        instance.setTop(value);
        return this;
      }
      /**
       * <code>required sint64 top = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTop() {
        copyOnWrite();
        instance.clearTop();
        return this;
      }

      /**
       * <code>required sint64 bottom = 4;</code>
       * @return Whether the bottom field is set.
       */
      @java.lang.Override
      public boolean hasBottom() {
        return instance.hasBottom();
      }
      /**
       * <code>required sint64 bottom = 4;</code>
       * @return The bottom.
       */
      @java.lang.Override
      public long getBottom() {
        return instance.getBottom();
      }
      /**
       * <code>required sint64 bottom = 4;</code>
       * @param value The bottom to set.
       * @return This builder for chaining.
       */
      public Builder setBottom(long value) {
        copyOnWrite();
        instance.setBottom(value);
        return this;
      }
      /**
       * <code>required sint64 bottom = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearBottom() {
        copyOnWrite();
        instance.clearBottom();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OSMPBF.HeaderBBox)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "left_",
              "right_",
              "top_",
              "bottom_",
            };
            java.lang.String info =
                "\u0001\u0004\u0000\u0001\u0001\u0004\u0004\u0000\u0000\u0004\u0001\u1510\u0000\u0002" +
                "\u1510\u0001\u0003\u1510\u0002\u0004\u1510\u0003";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox> parser = PARSER;
          if (parser == null) {
            synchronized (de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:OSMPBF.HeaderBBox)
    private static final de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox DEFAULT_INSTANCE;
    static {
      HeaderBBox defaultInstance = new HeaderBBox();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        HeaderBBox.class, defaultInstance);
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.HeaderBBox getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HeaderBBox> PARSER;

    public static com.google.protobuf.Parser<HeaderBBox> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PrimitiveBlockOrBuilder extends
      // @@protoc_insertion_point(interface_extends:OSMPBF.PrimitiveBlock)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required .OSMPBF.StringTable stringtable = 1;</code>
     * @return Whether the stringtable field is set.
     */
    boolean hasStringtable();
    /**
     * <code>required .OSMPBF.StringTable stringtable = 1;</code>
     * @return The stringtable.
     */
    de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable getStringtable();

    /**
     * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
     */
    java.util.List<de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup> 
        getPrimitivegroupList();
    /**
     * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
     */
    de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup getPrimitivegroup(int index);
    /**
     * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
     */
    int getPrimitivegroupCount();

    /**
     * <pre>
     * Granularity, units of nanodegrees, used to store coordinates in this block
     * </pre>
     *
     * <code>optional int32 granularity = 17 [default = 100];</code>
     * @return Whether the granularity field is set.
     */
    boolean hasGranularity();
    /**
     * <pre>
     * Granularity, units of nanodegrees, used to store coordinates in this block
     * </pre>
     *
     * <code>optional int32 granularity = 17 [default = 100];</code>
     * @return The granularity.
     */
    int getGranularity();

    /**
     * <pre>
     * Offset value between the output coordinates coordinates and the granularity grid in unites of nanodegrees.
     * </pre>
     *
     * <code>optional int64 lat_offset = 19 [default = 0];</code>
     * @return Whether the latOffset field is set.
     */
    boolean hasLatOffset();
    /**
     * <pre>
     * Offset value between the output coordinates coordinates and the granularity grid in unites of nanodegrees.
     * </pre>
     *
     * <code>optional int64 lat_offset = 19 [default = 0];</code>
     * @return The latOffset.
     */
    long getLatOffset();

    /**
     * <code>optional int64 lon_offset = 20 [default = 0];</code>
     * @return Whether the lonOffset field is set.
     */
    boolean hasLonOffset();
    /**
     * <code>optional int64 lon_offset = 20 [default = 0];</code>
     * @return The lonOffset.
     */
    long getLonOffset();

    /**
     * <pre>
     * Granularity of dates, normally represented in units of milliseconds since the 1970 epoch.
     * </pre>
     *
     * <code>optional int32 date_granularity = 18 [default = 1000];</code>
     * @return Whether the dateGranularity field is set.
     */
    boolean hasDateGranularity();
    /**
     * <pre>
     * Granularity of dates, normally represented in units of milliseconds since the 1970 epoch.
     * </pre>
     *
     * <code>optional int32 date_granularity = 18 [default = 1000];</code>
     * @return The dateGranularity.
     */
    int getDateGranularity();
  }
  /**
   * Protobuf type {@code OSMPBF.PrimitiveBlock}
   */
  public  static final class PrimitiveBlock extends
      com.google.protobuf.GeneratedMessageLite<
          PrimitiveBlock, PrimitiveBlock.Builder> implements
      // @@protoc_insertion_point(message_implements:OSMPBF.PrimitiveBlock)
      PrimitiveBlockOrBuilder {
    private PrimitiveBlock() {
      primitivegroup_ = emptyProtobufList();
      granularity_ = 100;
      dateGranularity_ = 1000;
    }
    private int bitField0_;
    public static final int STRINGTABLE_FIELD_NUMBER = 1;
    private de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable stringtable_;
    /**
     * <code>required .OSMPBF.StringTable stringtable = 1;</code>
     */
    @java.lang.Override
    public boolean hasStringtable() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required .OSMPBF.StringTable stringtable = 1;</code>
     */
    @java.lang.Override
    public de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable getStringtable() {
      return stringtable_ == null ? de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable.getDefaultInstance() : stringtable_;
    }
    /**
     * <code>required .OSMPBF.StringTable stringtable = 1;</code>
     */
    private void setStringtable(de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable value) {
      value.getClass();
  stringtable_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>required .OSMPBF.StringTable stringtable = 1;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeStringtable(de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable value) {
      value.getClass();
  if (stringtable_ != null &&
          stringtable_ != de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable.getDefaultInstance()) {
        stringtable_ =
          de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable.newBuilder(stringtable_).mergeFrom(value).buildPartial();
      } else {
        stringtable_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>required .OSMPBF.StringTable stringtable = 1;</code>
     */
    private void clearStringtable() {  stringtable_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int PRIMITIVEGROUP_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup> primitivegroup_;
    /**
     * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
     */
    @java.lang.Override
    public java.util.List<de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup> getPrimitivegroupList() {
      return primitivegroup_;
    }
    /**
     * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
     */
    public java.util.List<? extends de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroupOrBuilder> 
        getPrimitivegroupOrBuilderList() {
      return primitivegroup_;
    }
    /**
     * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
     */
    @java.lang.Override
    public int getPrimitivegroupCount() {
      return primitivegroup_.size();
    }
    /**
     * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
     */
    @java.lang.Override
    public de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup getPrimitivegroup(int index) {
      return primitivegroup_.get(index);
    }
    /**
     * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
     */
    public de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroupOrBuilder getPrimitivegroupOrBuilder(
        int index) {
      return primitivegroup_.get(index);
    }
    private void ensurePrimitivegroupIsMutable() {
      com.google.protobuf.Internal.ProtobufList<de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup> tmp = primitivegroup_;
      if (!tmp.isModifiable()) {
        primitivegroup_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
     */
    private void setPrimitivegroup(
        int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup value) {
      value.getClass();
  ensurePrimitivegroupIsMutable();
      primitivegroup_.set(index, value);
    }
    /**
     * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
     */
    private void addPrimitivegroup(de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup value) {
      value.getClass();
  ensurePrimitivegroupIsMutable();
      primitivegroup_.add(value);
    }
    /**
     * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
     */
    private void addPrimitivegroup(
        int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup value) {
      value.getClass();
  ensurePrimitivegroupIsMutable();
      primitivegroup_.add(index, value);
    }
    /**
     * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
     */
    private void addAllPrimitivegroup(
        java.lang.Iterable<? extends de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup> values) {
      ensurePrimitivegroupIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, primitivegroup_);
    }
    /**
     * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
     */
    private void clearPrimitivegroup() {
      primitivegroup_ = emptyProtobufList();
    }
    /**
     * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
     */
    private void removePrimitivegroup(int index) {
      ensurePrimitivegroupIsMutable();
      primitivegroup_.remove(index);
    }

    public static final int GRANULARITY_FIELD_NUMBER = 17;
    private int granularity_;
    /**
     * <pre>
     * Granularity, units of nanodegrees, used to store coordinates in this block
     * </pre>
     *
     * <code>optional int32 granularity = 17 [default = 100];</code>
     * @return Whether the granularity field is set.
     */
    @java.lang.Override
    public boolean hasGranularity() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Granularity, units of nanodegrees, used to store coordinates in this block
     * </pre>
     *
     * <code>optional int32 granularity = 17 [default = 100];</code>
     * @return The granularity.
     */
    @java.lang.Override
    public int getGranularity() {
      return granularity_;
    }
    /**
     * <pre>
     * Granularity, units of nanodegrees, used to store coordinates in this block
     * </pre>
     *
     * <code>optional int32 granularity = 17 [default = 100];</code>
     * @param value The granularity to set.
     */
    private void setGranularity(int value) {
      bitField0_ |= 0x00000002;
      granularity_ = value;
    }
    /**
     * <pre>
     * Granularity, units of nanodegrees, used to store coordinates in this block
     * </pre>
     *
     * <code>optional int32 granularity = 17 [default = 100];</code>
     */
    private void clearGranularity() {
      bitField0_ = (bitField0_ & ~0x00000002);
      granularity_ = 100;
    }

    public static final int LAT_OFFSET_FIELD_NUMBER = 19;
    private long latOffset_;
    /**
     * <pre>
     * Offset value between the output coordinates coordinates and the granularity grid in unites of nanodegrees.
     * </pre>
     *
     * <code>optional int64 lat_offset = 19 [default = 0];</code>
     * @return Whether the latOffset field is set.
     */
    @java.lang.Override
    public boolean hasLatOffset() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Offset value between the output coordinates coordinates and the granularity grid in unites of nanodegrees.
     * </pre>
     *
     * <code>optional int64 lat_offset = 19 [default = 0];</code>
     * @return The latOffset.
     */
    @java.lang.Override
    public long getLatOffset() {
      return latOffset_;
    }
    /**
     * <pre>
     * Offset value between the output coordinates coordinates and the granularity grid in unites of nanodegrees.
     * </pre>
     *
     * <code>optional int64 lat_offset = 19 [default = 0];</code>
     * @param value The latOffset to set.
     */
    private void setLatOffset(long value) {
      bitField0_ |= 0x00000004;
      latOffset_ = value;
    }
    /**
     * <pre>
     * Offset value between the output coordinates coordinates and the granularity grid in unites of nanodegrees.
     * </pre>
     *
     * <code>optional int64 lat_offset = 19 [default = 0];</code>
     */
    private void clearLatOffset() {
      bitField0_ = (bitField0_ & ~0x00000004);
      latOffset_ = 0L;
    }

    public static final int LON_OFFSET_FIELD_NUMBER = 20;
    private long lonOffset_;
    /**
     * <code>optional int64 lon_offset = 20 [default = 0];</code>
     * @return Whether the lonOffset field is set.
     */
    @java.lang.Override
    public boolean hasLonOffset() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional int64 lon_offset = 20 [default = 0];</code>
     * @return The lonOffset.
     */
    @java.lang.Override
    public long getLonOffset() {
      return lonOffset_;
    }
    /**
     * <code>optional int64 lon_offset = 20 [default = 0];</code>
     * @param value The lonOffset to set.
     */
    private void setLonOffset(long value) {
      bitField0_ |= 0x00000008;
      lonOffset_ = value;
    }
    /**
     * <code>optional int64 lon_offset = 20 [default = 0];</code>
     */
    private void clearLonOffset() {
      bitField0_ = (bitField0_ & ~0x00000008);
      lonOffset_ = 0L;
    }

    public static final int DATE_GRANULARITY_FIELD_NUMBER = 18;
    private int dateGranularity_;
    /**
     * <pre>
     * Granularity of dates, normally represented in units of milliseconds since the 1970 epoch.
     * </pre>
     *
     * <code>optional int32 date_granularity = 18 [default = 1000];</code>
     * @return Whether the dateGranularity field is set.
     */
    @java.lang.Override
    public boolean hasDateGranularity() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * Granularity of dates, normally represented in units of milliseconds since the 1970 epoch.
     * </pre>
     *
     * <code>optional int32 date_granularity = 18 [default = 1000];</code>
     * @return The dateGranularity.
     */
    @java.lang.Override
    public int getDateGranularity() {
      return dateGranularity_;
    }
    /**
     * <pre>
     * Granularity of dates, normally represented in units of milliseconds since the 1970 epoch.
     * </pre>
     *
     * <code>optional int32 date_granularity = 18 [default = 1000];</code>
     * @param value The dateGranularity to set.
     */
    private void setDateGranularity(int value) {
      bitField0_ |= 0x00000010;
      dateGranularity_ = value;
    }
    /**
     * <pre>
     * Granularity of dates, normally represented in units of milliseconds since the 1970 epoch.
     * </pre>
     *
     * <code>optional int32 date_granularity = 18 [default = 1000];</code>
     */
    private void clearDateGranularity() {
      bitField0_ = (bitField0_ & ~0x00000010);
      dateGranularity_ = 1000;
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlock parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlock parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlock parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlock parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlock parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlock parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlock parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlock parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlock parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlock parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlock parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlock parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlock prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code OSMPBF.PrimitiveBlock}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlock, Builder> implements
        // @@protoc_insertion_point(builder_implements:OSMPBF.PrimitiveBlock)
        de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlockOrBuilder {
      // Construct using de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlock.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required .OSMPBF.StringTable stringtable = 1;</code>
       */
      @java.lang.Override
      public boolean hasStringtable() {
        return instance.hasStringtable();
      }
      /**
       * <code>required .OSMPBF.StringTable stringtable = 1;</code>
       */
      @java.lang.Override
      public de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable getStringtable() {
        return instance.getStringtable();
      }
      /**
       * <code>required .OSMPBF.StringTable stringtable = 1;</code>
       */
      public Builder setStringtable(de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable value) {
        copyOnWrite();
        instance.setStringtable(value);
        return this;
        }
      /**
       * <code>required .OSMPBF.StringTable stringtable = 1;</code>
       */
      public Builder setStringtable(
          de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable.Builder builderForValue) {
        copyOnWrite();
        instance.setStringtable(builderForValue.build());
        return this;
      }
      /**
       * <code>required .OSMPBF.StringTable stringtable = 1;</code>
       */
      public Builder mergeStringtable(de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable value) {
        copyOnWrite();
        instance.mergeStringtable(value);
        return this;
      }
      /**
       * <code>required .OSMPBF.StringTable stringtable = 1;</code>
       */
      public Builder clearStringtable() {  copyOnWrite();
        instance.clearStringtable();
        return this;
      }

      /**
       * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
       */
      @java.lang.Override
      public java.util.List<de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup> getPrimitivegroupList() {
        return java.util.Collections.unmodifiableList(
            instance.getPrimitivegroupList());
      }
      /**
       * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
       */
      @java.lang.Override
      public int getPrimitivegroupCount() {
        return instance.getPrimitivegroupCount();
      }/**
       * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
       */
      @java.lang.Override
      public de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup getPrimitivegroup(int index) {
        return instance.getPrimitivegroup(index);
      }
      /**
       * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
       */
      public Builder setPrimitivegroup(
          int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup value) {
        copyOnWrite();
        instance.setPrimitivegroup(index, value);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
       */
      public Builder setPrimitivegroup(
          int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup.Builder builderForValue) {
        copyOnWrite();
        instance.setPrimitivegroup(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
       */
      public Builder addPrimitivegroup(de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup value) {
        copyOnWrite();
        instance.addPrimitivegroup(value);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
       */
      public Builder addPrimitivegroup(
          int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup value) {
        copyOnWrite();
        instance.addPrimitivegroup(index, value);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
       */
      public Builder addPrimitivegroup(
          de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup.Builder builderForValue) {
        copyOnWrite();
        instance.addPrimitivegroup(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
       */
      public Builder addPrimitivegroup(
          int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup.Builder builderForValue) {
        copyOnWrite();
        instance.addPrimitivegroup(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
       */
      public Builder addAllPrimitivegroup(
          java.lang.Iterable<? extends de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup> values) {
        copyOnWrite();
        instance.addAllPrimitivegroup(values);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
       */
      public Builder clearPrimitivegroup() {
        copyOnWrite();
        instance.clearPrimitivegroup();
        return this;
      }
      /**
       * <code>repeated .OSMPBF.PrimitiveGroup primitivegroup = 2;</code>
       */
      public Builder removePrimitivegroup(int index) {
        copyOnWrite();
        instance.removePrimitivegroup(index);
        return this;
      }

      /**
       * <pre>
       * Granularity, units of nanodegrees, used to store coordinates in this block
       * </pre>
       *
       * <code>optional int32 granularity = 17 [default = 100];</code>
       * @return Whether the granularity field is set.
       */
      @java.lang.Override
      public boolean hasGranularity() {
        return instance.hasGranularity();
      }
      /**
       * <pre>
       * Granularity, units of nanodegrees, used to store coordinates in this block
       * </pre>
       *
       * <code>optional int32 granularity = 17 [default = 100];</code>
       * @return The granularity.
       */
      @java.lang.Override
      public int getGranularity() {
        return instance.getGranularity();
      }
      /**
       * <pre>
       * Granularity, units of nanodegrees, used to store coordinates in this block
       * </pre>
       *
       * <code>optional int32 granularity = 17 [default = 100];</code>
       * @param value The granularity to set.
       * @return This builder for chaining.
       */
      public Builder setGranularity(int value) {
        copyOnWrite();
        instance.setGranularity(value);
        return this;
      }
      /**
       * <pre>
       * Granularity, units of nanodegrees, used to store coordinates in this block
       * </pre>
       *
       * <code>optional int32 granularity = 17 [default = 100];</code>
       * @return This builder for chaining.
       */
      public Builder clearGranularity() {
        copyOnWrite();
        instance.clearGranularity();
        return this;
      }

      /**
       * <pre>
       * Offset value between the output coordinates coordinates and the granularity grid in unites of nanodegrees.
       * </pre>
       *
       * <code>optional int64 lat_offset = 19 [default = 0];</code>
       * @return Whether the latOffset field is set.
       */
      @java.lang.Override
      public boolean hasLatOffset() {
        return instance.hasLatOffset();
      }
      /**
       * <pre>
       * Offset value between the output coordinates coordinates and the granularity grid in unites of nanodegrees.
       * </pre>
       *
       * <code>optional int64 lat_offset = 19 [default = 0];</code>
       * @return The latOffset.
       */
      @java.lang.Override
      public long getLatOffset() {
        return instance.getLatOffset();
      }
      /**
       * <pre>
       * Offset value between the output coordinates coordinates and the granularity grid in unites of nanodegrees.
       * </pre>
       *
       * <code>optional int64 lat_offset = 19 [default = 0];</code>
       * @param value The latOffset to set.
       * @return This builder for chaining.
       */
      public Builder setLatOffset(long value) {
        copyOnWrite();
        instance.setLatOffset(value);
        return this;
      }
      /**
       * <pre>
       * Offset value between the output coordinates coordinates and the granularity grid in unites of nanodegrees.
       * </pre>
       *
       * <code>optional int64 lat_offset = 19 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearLatOffset() {
        copyOnWrite();
        instance.clearLatOffset();
        return this;
      }

      /**
       * <code>optional int64 lon_offset = 20 [default = 0];</code>
       * @return Whether the lonOffset field is set.
       */
      @java.lang.Override
      public boolean hasLonOffset() {
        return instance.hasLonOffset();
      }
      /**
       * <code>optional int64 lon_offset = 20 [default = 0];</code>
       * @return The lonOffset.
       */
      @java.lang.Override
      public long getLonOffset() {
        return instance.getLonOffset();
      }
      /**
       * <code>optional int64 lon_offset = 20 [default = 0];</code>
       * @param value The lonOffset to set.
       * @return This builder for chaining.
       */
      public Builder setLonOffset(long value) {
        copyOnWrite();
        instance.setLonOffset(value);
        return this;
      }
      /**
       * <code>optional int64 lon_offset = 20 [default = 0];</code>
       * @return This builder for chaining.
       */
      public Builder clearLonOffset() {
        copyOnWrite();
        instance.clearLonOffset();
        return this;
      }

      /**
       * <pre>
       * Granularity of dates, normally represented in units of milliseconds since the 1970 epoch.
       * </pre>
       *
       * <code>optional int32 date_granularity = 18 [default = 1000];</code>
       * @return Whether the dateGranularity field is set.
       */
      @java.lang.Override
      public boolean hasDateGranularity() {
        return instance.hasDateGranularity();
      }
      /**
       * <pre>
       * Granularity of dates, normally represented in units of milliseconds since the 1970 epoch.
       * </pre>
       *
       * <code>optional int32 date_granularity = 18 [default = 1000];</code>
       * @return The dateGranularity.
       */
      @java.lang.Override
      public int getDateGranularity() {
        return instance.getDateGranularity();
      }
      /**
       * <pre>
       * Granularity of dates, normally represented in units of milliseconds since the 1970 epoch.
       * </pre>
       *
       * <code>optional int32 date_granularity = 18 [default = 1000];</code>
       * @param value The dateGranularity to set.
       * @return This builder for chaining.
       */
      public Builder setDateGranularity(int value) {
        copyOnWrite();
        instance.setDateGranularity(value);
        return this;
      }
      /**
       * <pre>
       * Granularity of dates, normally represented in units of milliseconds since the 1970 epoch.
       * </pre>
       *
       * <code>optional int32 date_granularity = 18 [default = 1000];</code>
       * @return This builder for chaining.
       */
      public Builder clearDateGranularity() {
        copyOnWrite();
        instance.clearDateGranularity();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OSMPBF.PrimitiveBlock)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlock();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "stringtable_",
              "primitivegroup_",
              de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup.class,
              "granularity_",
              "dateGranularity_",
              "latOffset_",
              "lonOffset_",
            };
            java.lang.String info =
                "\u0001\u0006\u0000\u0001\u0001\u0014\u0006\u0000\u0001\u0002\u0001\u1509\u0000\u0002" +
                "\u041b\u0011\u1004\u0001\u0012\u1004\u0004\u0013\u1002\u0002\u0014\u1002\u0003";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlock> parser = PARSER;
          if (parser == null) {
            synchronized (de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlock.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlock>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:OSMPBF.PrimitiveBlock)
    private static final de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlock DEFAULT_INSTANCE;
    static {
      PrimitiveBlock defaultInstance = new PrimitiveBlock();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        PrimitiveBlock.class, defaultInstance);
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveBlock getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PrimitiveBlock> PARSER;

    public static com.google.protobuf.Parser<PrimitiveBlock> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PrimitiveGroupOrBuilder extends
      // @@protoc_insertion_point(interface_extends:OSMPBF.PrimitiveGroup)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .OSMPBF.Node nodes = 1;</code>
     */
    java.util.List<de.topobyte.osm4j.pbf.protobuf.Osmformat.Node> 
        getNodesList();
    /**
     * <code>repeated .OSMPBF.Node nodes = 1;</code>
     */
    de.topobyte.osm4j.pbf.protobuf.Osmformat.Node getNodes(int index);
    /**
     * <code>repeated .OSMPBF.Node nodes = 1;</code>
     */
    int getNodesCount();

    /**
     * <code>optional .OSMPBF.DenseNodes dense = 2;</code>
     * @return Whether the dense field is set.
     */
    boolean hasDense();
    /**
     * <code>optional .OSMPBF.DenseNodes dense = 2;</code>
     * @return The dense.
     */
    de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes getDense();

    /**
     * <code>repeated .OSMPBF.Way ways = 3;</code>
     */
    java.util.List<de.topobyte.osm4j.pbf.protobuf.Osmformat.Way> 
        getWaysList();
    /**
     * <code>repeated .OSMPBF.Way ways = 3;</code>
     */
    de.topobyte.osm4j.pbf.protobuf.Osmformat.Way getWays(int index);
    /**
     * <code>repeated .OSMPBF.Way ways = 3;</code>
     */
    int getWaysCount();

    /**
     * <code>repeated .OSMPBF.Relation relations = 4;</code>
     */
    java.util.List<de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation> 
        getRelationsList();
    /**
     * <code>repeated .OSMPBF.Relation relations = 4;</code>
     */
    de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation getRelations(int index);
    /**
     * <code>repeated .OSMPBF.Relation relations = 4;</code>
     */
    int getRelationsCount();

    /**
     * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
     */
    java.util.List<de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet> 
        getChangesetsList();
    /**
     * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
     */
    de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet getChangesets(int index);
    /**
     * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
     */
    int getChangesetsCount();
  }
  /**
   * <pre>
   * Group of OSMPrimitives. All primitives in a group must be the same type.
   * </pre>
   *
   * Protobuf type {@code OSMPBF.PrimitiveGroup}
   */
  public  static final class PrimitiveGroup extends
      com.google.protobuf.GeneratedMessageLite<
          PrimitiveGroup, PrimitiveGroup.Builder> implements
      // @@protoc_insertion_point(message_implements:OSMPBF.PrimitiveGroup)
      PrimitiveGroupOrBuilder {
    private PrimitiveGroup() {
      nodes_ = emptyProtobufList();
      ways_ = emptyProtobufList();
      relations_ = emptyProtobufList();
      changesets_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int NODES_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<de.topobyte.osm4j.pbf.protobuf.Osmformat.Node> nodes_;
    /**
     * <code>repeated .OSMPBF.Node nodes = 1;</code>
     */
    @java.lang.Override
    public java.util.List<de.topobyte.osm4j.pbf.protobuf.Osmformat.Node> getNodesList() {
      return nodes_;
    }
    /**
     * <code>repeated .OSMPBF.Node nodes = 1;</code>
     */
    public java.util.List<? extends de.topobyte.osm4j.pbf.protobuf.Osmformat.NodeOrBuilder> 
        getNodesOrBuilderList() {
      return nodes_;
    }
    /**
     * <code>repeated .OSMPBF.Node nodes = 1;</code>
     */
    @java.lang.Override
    public int getNodesCount() {
      return nodes_.size();
    }
    /**
     * <code>repeated .OSMPBF.Node nodes = 1;</code>
     */
    @java.lang.Override
    public de.topobyte.osm4j.pbf.protobuf.Osmformat.Node getNodes(int index) {
      return nodes_.get(index);
    }
    /**
     * <code>repeated .OSMPBF.Node nodes = 1;</code>
     */
    public de.topobyte.osm4j.pbf.protobuf.Osmformat.NodeOrBuilder getNodesOrBuilder(
        int index) {
      return nodes_.get(index);
    }
    private void ensureNodesIsMutable() {
      com.google.protobuf.Internal.ProtobufList<de.topobyte.osm4j.pbf.protobuf.Osmformat.Node> tmp = nodes_;
      if (!tmp.isModifiable()) {
        nodes_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .OSMPBF.Node nodes = 1;</code>
     */
    private void setNodes(
        int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.Node value) {
      value.getClass();
  ensureNodesIsMutable();
      nodes_.set(index, value);
    }
    /**
     * <code>repeated .OSMPBF.Node nodes = 1;</code>
     */
    private void addNodes(de.topobyte.osm4j.pbf.protobuf.Osmformat.Node value) {
      value.getClass();
  ensureNodesIsMutable();
      nodes_.add(value);
    }
    /**
     * <code>repeated .OSMPBF.Node nodes = 1;</code>
     */
    private void addNodes(
        int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.Node value) {
      value.getClass();
  ensureNodesIsMutable();
      nodes_.add(index, value);
    }
    /**
     * <code>repeated .OSMPBF.Node nodes = 1;</code>
     */
    private void addAllNodes(
        java.lang.Iterable<? extends de.topobyte.osm4j.pbf.protobuf.Osmformat.Node> values) {
      ensureNodesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, nodes_);
    }
    /**
     * <code>repeated .OSMPBF.Node nodes = 1;</code>
     */
    private void clearNodes() {
      nodes_ = emptyProtobufList();
    }
    /**
     * <code>repeated .OSMPBF.Node nodes = 1;</code>
     */
    private void removeNodes(int index) {
      ensureNodesIsMutable();
      nodes_.remove(index);
    }

    public static final int DENSE_FIELD_NUMBER = 2;
    private de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes dense_;
    /**
     * <code>optional .OSMPBF.DenseNodes dense = 2;</code>
     */
    @java.lang.Override
    public boolean hasDense() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional .OSMPBF.DenseNodes dense = 2;</code>
     */
    @java.lang.Override
    public de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes getDense() {
      return dense_ == null ? de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes.getDefaultInstance() : dense_;
    }
    /**
     * <code>optional .OSMPBF.DenseNodes dense = 2;</code>
     */
    private void setDense(de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes value) {
      value.getClass();
  dense_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <code>optional .OSMPBF.DenseNodes dense = 2;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeDense(de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes value) {
      value.getClass();
  if (dense_ != null &&
          dense_ != de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes.getDefaultInstance()) {
        dense_ =
          de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes.newBuilder(dense_).mergeFrom(value).buildPartial();
      } else {
        dense_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <code>optional .OSMPBF.DenseNodes dense = 2;</code>
     */
    private void clearDense() {  dense_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int WAYS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.ProtobufList<de.topobyte.osm4j.pbf.protobuf.Osmformat.Way> ways_;
    /**
     * <code>repeated .OSMPBF.Way ways = 3;</code>
     */
    @java.lang.Override
    public java.util.List<de.topobyte.osm4j.pbf.protobuf.Osmformat.Way> getWaysList() {
      return ways_;
    }
    /**
     * <code>repeated .OSMPBF.Way ways = 3;</code>
     */
    public java.util.List<? extends de.topobyte.osm4j.pbf.protobuf.Osmformat.WayOrBuilder> 
        getWaysOrBuilderList() {
      return ways_;
    }
    /**
     * <code>repeated .OSMPBF.Way ways = 3;</code>
     */
    @java.lang.Override
    public int getWaysCount() {
      return ways_.size();
    }
    /**
     * <code>repeated .OSMPBF.Way ways = 3;</code>
     */
    @java.lang.Override
    public de.topobyte.osm4j.pbf.protobuf.Osmformat.Way getWays(int index) {
      return ways_.get(index);
    }
    /**
     * <code>repeated .OSMPBF.Way ways = 3;</code>
     */
    public de.topobyte.osm4j.pbf.protobuf.Osmformat.WayOrBuilder getWaysOrBuilder(
        int index) {
      return ways_.get(index);
    }
    private void ensureWaysIsMutable() {
      com.google.protobuf.Internal.ProtobufList<de.topobyte.osm4j.pbf.protobuf.Osmformat.Way> tmp = ways_;
      if (!tmp.isModifiable()) {
        ways_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .OSMPBF.Way ways = 3;</code>
     */
    private void setWays(
        int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.Way value) {
      value.getClass();
  ensureWaysIsMutable();
      ways_.set(index, value);
    }
    /**
     * <code>repeated .OSMPBF.Way ways = 3;</code>
     */
    private void addWays(de.topobyte.osm4j.pbf.protobuf.Osmformat.Way value) {
      value.getClass();
  ensureWaysIsMutable();
      ways_.add(value);
    }
    /**
     * <code>repeated .OSMPBF.Way ways = 3;</code>
     */
    private void addWays(
        int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.Way value) {
      value.getClass();
  ensureWaysIsMutable();
      ways_.add(index, value);
    }
    /**
     * <code>repeated .OSMPBF.Way ways = 3;</code>
     */
    private void addAllWays(
        java.lang.Iterable<? extends de.topobyte.osm4j.pbf.protobuf.Osmformat.Way> values) {
      ensureWaysIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, ways_);
    }
    /**
     * <code>repeated .OSMPBF.Way ways = 3;</code>
     */
    private void clearWays() {
      ways_ = emptyProtobufList();
    }
    /**
     * <code>repeated .OSMPBF.Way ways = 3;</code>
     */
    private void removeWays(int index) {
      ensureWaysIsMutable();
      ways_.remove(index);
    }

    public static final int RELATIONS_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.ProtobufList<de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation> relations_;
    /**
     * <code>repeated .OSMPBF.Relation relations = 4;</code>
     */
    @java.lang.Override
    public java.util.List<de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation> getRelationsList() {
      return relations_;
    }
    /**
     * <code>repeated .OSMPBF.Relation relations = 4;</code>
     */
    public java.util.List<? extends de.topobyte.osm4j.pbf.protobuf.Osmformat.RelationOrBuilder> 
        getRelationsOrBuilderList() {
      return relations_;
    }
    /**
     * <code>repeated .OSMPBF.Relation relations = 4;</code>
     */
    @java.lang.Override
    public int getRelationsCount() {
      return relations_.size();
    }
    /**
     * <code>repeated .OSMPBF.Relation relations = 4;</code>
     */
    @java.lang.Override
    public de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation getRelations(int index) {
      return relations_.get(index);
    }
    /**
     * <code>repeated .OSMPBF.Relation relations = 4;</code>
     */
    public de.topobyte.osm4j.pbf.protobuf.Osmformat.RelationOrBuilder getRelationsOrBuilder(
        int index) {
      return relations_.get(index);
    }
    private void ensureRelationsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation> tmp = relations_;
      if (!tmp.isModifiable()) {
        relations_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .OSMPBF.Relation relations = 4;</code>
     */
    private void setRelations(
        int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation value) {
      value.getClass();
  ensureRelationsIsMutable();
      relations_.set(index, value);
    }
    /**
     * <code>repeated .OSMPBF.Relation relations = 4;</code>
     */
    private void addRelations(de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation value) {
      value.getClass();
  ensureRelationsIsMutable();
      relations_.add(value);
    }
    /**
     * <code>repeated .OSMPBF.Relation relations = 4;</code>
     */
    private void addRelations(
        int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation value) {
      value.getClass();
  ensureRelationsIsMutable();
      relations_.add(index, value);
    }
    /**
     * <code>repeated .OSMPBF.Relation relations = 4;</code>
     */
    private void addAllRelations(
        java.lang.Iterable<? extends de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation> values) {
      ensureRelationsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, relations_);
    }
    /**
     * <code>repeated .OSMPBF.Relation relations = 4;</code>
     */
    private void clearRelations() {
      relations_ = emptyProtobufList();
    }
    /**
     * <code>repeated .OSMPBF.Relation relations = 4;</code>
     */
    private void removeRelations(int index) {
      ensureRelationsIsMutable();
      relations_.remove(index);
    }

    public static final int CHANGESETS_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.ProtobufList<de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet> changesets_;
    /**
     * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
     */
    @java.lang.Override
    public java.util.List<de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet> getChangesetsList() {
      return changesets_;
    }
    /**
     * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
     */
    public java.util.List<? extends de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSetOrBuilder> 
        getChangesetsOrBuilderList() {
      return changesets_;
    }
    /**
     * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
     */
    @java.lang.Override
    public int getChangesetsCount() {
      return changesets_.size();
    }
    /**
     * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
     */
    @java.lang.Override
    public de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet getChangesets(int index) {
      return changesets_.get(index);
    }
    /**
     * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
     */
    public de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSetOrBuilder getChangesetsOrBuilder(
        int index) {
      return changesets_.get(index);
    }
    private void ensureChangesetsIsMutable() {
      com.google.protobuf.Internal.ProtobufList<de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet> tmp = changesets_;
      if (!tmp.isModifiable()) {
        changesets_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }

    /**
     * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
     */
    private void setChangesets(
        int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet value) {
      value.getClass();
  ensureChangesetsIsMutable();
      changesets_.set(index, value);
    }
    /**
     * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
     */
    private void addChangesets(de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet value) {
      value.getClass();
  ensureChangesetsIsMutable();
      changesets_.add(value);
    }
    /**
     * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
     */
    private void addChangesets(
        int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet value) {
      value.getClass();
  ensureChangesetsIsMutable();
      changesets_.add(index, value);
    }
    /**
     * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
     */
    private void addAllChangesets(
        java.lang.Iterable<? extends de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet> values) {
      ensureChangesetsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, changesets_);
    }
    /**
     * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
     */
    private void clearChangesets() {
      changesets_ = emptyProtobufList();
    }
    /**
     * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
     */
    private void removeChangesets(int index) {
      ensureChangesetsIsMutable();
      changesets_.remove(index);
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Group of OSMPrimitives. All primitives in a group must be the same type.
     * </pre>
     *
     * Protobuf type {@code OSMPBF.PrimitiveGroup}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup, Builder> implements
        // @@protoc_insertion_point(builder_implements:OSMPBF.PrimitiveGroup)
        de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroupOrBuilder {
      // Construct using de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .OSMPBF.Node nodes = 1;</code>
       */
      @java.lang.Override
      public java.util.List<de.topobyte.osm4j.pbf.protobuf.Osmformat.Node> getNodesList() {
        return java.util.Collections.unmodifiableList(
            instance.getNodesList());
      }
      /**
       * <code>repeated .OSMPBF.Node nodes = 1;</code>
       */
      @java.lang.Override
      public int getNodesCount() {
        return instance.getNodesCount();
      }/**
       * <code>repeated .OSMPBF.Node nodes = 1;</code>
       */
      @java.lang.Override
      public de.topobyte.osm4j.pbf.protobuf.Osmformat.Node getNodes(int index) {
        return instance.getNodes(index);
      }
      /**
       * <code>repeated .OSMPBF.Node nodes = 1;</code>
       */
      public Builder setNodes(
          int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.Node value) {
        copyOnWrite();
        instance.setNodes(index, value);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Node nodes = 1;</code>
       */
      public Builder setNodes(
          int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.Node.Builder builderForValue) {
        copyOnWrite();
        instance.setNodes(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Node nodes = 1;</code>
       */
      public Builder addNodes(de.topobyte.osm4j.pbf.protobuf.Osmformat.Node value) {
        copyOnWrite();
        instance.addNodes(value);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Node nodes = 1;</code>
       */
      public Builder addNodes(
          int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.Node value) {
        copyOnWrite();
        instance.addNodes(index, value);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Node nodes = 1;</code>
       */
      public Builder addNodes(
          de.topobyte.osm4j.pbf.protobuf.Osmformat.Node.Builder builderForValue) {
        copyOnWrite();
        instance.addNodes(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Node nodes = 1;</code>
       */
      public Builder addNodes(
          int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.Node.Builder builderForValue) {
        copyOnWrite();
        instance.addNodes(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Node nodes = 1;</code>
       */
      public Builder addAllNodes(
          java.lang.Iterable<? extends de.topobyte.osm4j.pbf.protobuf.Osmformat.Node> values) {
        copyOnWrite();
        instance.addAllNodes(values);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Node nodes = 1;</code>
       */
      public Builder clearNodes() {
        copyOnWrite();
        instance.clearNodes();
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Node nodes = 1;</code>
       */
      public Builder removeNodes(int index) {
        copyOnWrite();
        instance.removeNodes(index);
        return this;
      }

      /**
       * <code>optional .OSMPBF.DenseNodes dense = 2;</code>
       */
      @java.lang.Override
      public boolean hasDense() {
        return instance.hasDense();
      }
      /**
       * <code>optional .OSMPBF.DenseNodes dense = 2;</code>
       */
      @java.lang.Override
      public de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes getDense() {
        return instance.getDense();
      }
      /**
       * <code>optional .OSMPBF.DenseNodes dense = 2;</code>
       */
      public Builder setDense(de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes value) {
        copyOnWrite();
        instance.setDense(value);
        return this;
        }
      /**
       * <code>optional .OSMPBF.DenseNodes dense = 2;</code>
       */
      public Builder setDense(
          de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes.Builder builderForValue) {
        copyOnWrite();
        instance.setDense(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .OSMPBF.DenseNodes dense = 2;</code>
       */
      public Builder mergeDense(de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes value) {
        copyOnWrite();
        instance.mergeDense(value);
        return this;
      }
      /**
       * <code>optional .OSMPBF.DenseNodes dense = 2;</code>
       */
      public Builder clearDense() {  copyOnWrite();
        instance.clearDense();
        return this;
      }

      /**
       * <code>repeated .OSMPBF.Way ways = 3;</code>
       */
      @java.lang.Override
      public java.util.List<de.topobyte.osm4j.pbf.protobuf.Osmformat.Way> getWaysList() {
        return java.util.Collections.unmodifiableList(
            instance.getWaysList());
      }
      /**
       * <code>repeated .OSMPBF.Way ways = 3;</code>
       */
      @java.lang.Override
      public int getWaysCount() {
        return instance.getWaysCount();
      }/**
       * <code>repeated .OSMPBF.Way ways = 3;</code>
       */
      @java.lang.Override
      public de.topobyte.osm4j.pbf.protobuf.Osmformat.Way getWays(int index) {
        return instance.getWays(index);
      }
      /**
       * <code>repeated .OSMPBF.Way ways = 3;</code>
       */
      public Builder setWays(
          int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.Way value) {
        copyOnWrite();
        instance.setWays(index, value);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Way ways = 3;</code>
       */
      public Builder setWays(
          int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.Way.Builder builderForValue) {
        copyOnWrite();
        instance.setWays(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Way ways = 3;</code>
       */
      public Builder addWays(de.topobyte.osm4j.pbf.protobuf.Osmformat.Way value) {
        copyOnWrite();
        instance.addWays(value);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Way ways = 3;</code>
       */
      public Builder addWays(
          int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.Way value) {
        copyOnWrite();
        instance.addWays(index, value);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Way ways = 3;</code>
       */
      public Builder addWays(
          de.topobyte.osm4j.pbf.protobuf.Osmformat.Way.Builder builderForValue) {
        copyOnWrite();
        instance.addWays(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Way ways = 3;</code>
       */
      public Builder addWays(
          int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.Way.Builder builderForValue) {
        copyOnWrite();
        instance.addWays(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Way ways = 3;</code>
       */
      public Builder addAllWays(
          java.lang.Iterable<? extends de.topobyte.osm4j.pbf.protobuf.Osmformat.Way> values) {
        copyOnWrite();
        instance.addAllWays(values);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Way ways = 3;</code>
       */
      public Builder clearWays() {
        copyOnWrite();
        instance.clearWays();
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Way ways = 3;</code>
       */
      public Builder removeWays(int index) {
        copyOnWrite();
        instance.removeWays(index);
        return this;
      }

      /**
       * <code>repeated .OSMPBF.Relation relations = 4;</code>
       */
      @java.lang.Override
      public java.util.List<de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation> getRelationsList() {
        return java.util.Collections.unmodifiableList(
            instance.getRelationsList());
      }
      /**
       * <code>repeated .OSMPBF.Relation relations = 4;</code>
       */
      @java.lang.Override
      public int getRelationsCount() {
        return instance.getRelationsCount();
      }/**
       * <code>repeated .OSMPBF.Relation relations = 4;</code>
       */
      @java.lang.Override
      public de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation getRelations(int index) {
        return instance.getRelations(index);
      }
      /**
       * <code>repeated .OSMPBF.Relation relations = 4;</code>
       */
      public Builder setRelations(
          int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation value) {
        copyOnWrite();
        instance.setRelations(index, value);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Relation relations = 4;</code>
       */
      public Builder setRelations(
          int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.Builder builderForValue) {
        copyOnWrite();
        instance.setRelations(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Relation relations = 4;</code>
       */
      public Builder addRelations(de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation value) {
        copyOnWrite();
        instance.addRelations(value);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Relation relations = 4;</code>
       */
      public Builder addRelations(
          int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation value) {
        copyOnWrite();
        instance.addRelations(index, value);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Relation relations = 4;</code>
       */
      public Builder addRelations(
          de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.Builder builderForValue) {
        copyOnWrite();
        instance.addRelations(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Relation relations = 4;</code>
       */
      public Builder addRelations(
          int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.Builder builderForValue) {
        copyOnWrite();
        instance.addRelations(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Relation relations = 4;</code>
       */
      public Builder addAllRelations(
          java.lang.Iterable<? extends de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation> values) {
        copyOnWrite();
        instance.addAllRelations(values);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Relation relations = 4;</code>
       */
      public Builder clearRelations() {
        copyOnWrite();
        instance.clearRelations();
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Relation relations = 4;</code>
       */
      public Builder removeRelations(int index) {
        copyOnWrite();
        instance.removeRelations(index);
        return this;
      }

      /**
       * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
       */
      @java.lang.Override
      public java.util.List<de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet> getChangesetsList() {
        return java.util.Collections.unmodifiableList(
            instance.getChangesetsList());
      }
      /**
       * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
       */
      @java.lang.Override
      public int getChangesetsCount() {
        return instance.getChangesetsCount();
      }/**
       * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
       */
      @java.lang.Override
      public de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet getChangesets(int index) {
        return instance.getChangesets(index);
      }
      /**
       * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
       */
      public Builder setChangesets(
          int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet value) {
        copyOnWrite();
        instance.setChangesets(index, value);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
       */
      public Builder setChangesets(
          int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet.Builder builderForValue) {
        copyOnWrite();
        instance.setChangesets(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
       */
      public Builder addChangesets(de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet value) {
        copyOnWrite();
        instance.addChangesets(value);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
       */
      public Builder addChangesets(
          int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet value) {
        copyOnWrite();
        instance.addChangesets(index, value);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
       */
      public Builder addChangesets(
          de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet.Builder builderForValue) {
        copyOnWrite();
        instance.addChangesets(builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
       */
      public Builder addChangesets(
          int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet.Builder builderForValue) {
        copyOnWrite();
        instance.addChangesets(index,
            builderForValue.build());
        return this;
      }
      /**
       * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
       */
      public Builder addAllChangesets(
          java.lang.Iterable<? extends de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet> values) {
        copyOnWrite();
        instance.addAllChangesets(values);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
       */
      public Builder clearChangesets() {
        copyOnWrite();
        instance.clearChangesets();
        return this;
      }
      /**
       * <code>repeated .OSMPBF.ChangeSet changesets = 5;</code>
       */
      public Builder removeChangesets(int index) {
        copyOnWrite();
        instance.removeChangesets(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OSMPBF.PrimitiveGroup)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "nodes_",
              de.topobyte.osm4j.pbf.protobuf.Osmformat.Node.class,
              "dense_",
              "ways_",
              de.topobyte.osm4j.pbf.protobuf.Osmformat.Way.class,
              "relations_",
              de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.class,
              "changesets_",
              de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet.class,
            };
            java.lang.String info =
                "\u0001\u0005\u0000\u0001\u0001\u0005\u0005\u0000\u0004\u0004\u0001\u041b\u0002\u1009" +
                "\u0000\u0003\u041b\u0004\u041b\u0005\u041b";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup> parser = PARSER;
          if (parser == null) {
            synchronized (de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:OSMPBF.PrimitiveGroup)
    private static final de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup DEFAULT_INSTANCE;
    static {
      PrimitiveGroup defaultInstance = new PrimitiveGroup();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        PrimitiveGroup.class, defaultInstance);
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.PrimitiveGroup getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PrimitiveGroup> PARSER;

    public static com.google.protobuf.Parser<PrimitiveGroup> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface StringTableOrBuilder extends
      // @@protoc_insertion_point(interface_extends:OSMPBF.StringTable)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated bytes s = 1;</code>
     * @return A list containing the s.
     */
    java.util.List<com.google.protobuf.ByteString> getSList();
    /**
     * <code>repeated bytes s = 1;</code>
     * @return The count of s.
     */
    int getSCount();
    /**
     * <code>repeated bytes s = 1;</code>
     * @param index The index of the element to return.
     * @return The s at the given index.
     */
    com.google.protobuf.ByteString getS(int index);
  }
  /**
   * <pre>
   ** String table, contains the common strings in each block.
   *Note that we reserve index '0' as a delimiter, so the entry at that
   *index in the table is ALWAYS blank and unused.
   * </pre>
   *
   * Protobuf type {@code OSMPBF.StringTable}
   */
  public  static final class StringTable extends
      com.google.protobuf.GeneratedMessageLite<
          StringTable, StringTable.Builder> implements
      // @@protoc_insertion_point(message_implements:OSMPBF.StringTable)
      StringTableOrBuilder {
    private StringTable() {
      s_ = emptyProtobufList();
    }
    public static final int S_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> s_;
    /**
     * <code>repeated bytes s = 1;</code>
     * @return A list containing the s.
     */
    @java.lang.Override
    public java.util.List<com.google.protobuf.ByteString>
        getSList() {
      return s_;
    }
    /**
     * <code>repeated bytes s = 1;</code>
     * @return The count of s.
     */
    @java.lang.Override
    public int getSCount() {
      return s_.size();
    }
    /**
     * <code>repeated bytes s = 1;</code>
     * @param index The index of the element to return.
     * @return The s at the given index.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getS(int index) {
      return s_.get(index);
    }
    private void ensureSIsMutable() {
      com.google.protobuf.Internal.ProtobufList<com.google.protobuf.ByteString> tmp = s_;
      if (!tmp.isModifiable()) {
        s_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <code>repeated bytes s = 1;</code>
     * @param index The index to set the value at.
     * @param value The s to set.
     */
    private void setS(
        int index, com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  ensureSIsMutable();
      s_.set(index, value);
    }
    /**
     * <code>repeated bytes s = 1;</code>
     * @param value The s to add.
     */
    private void addS(com.google.protobuf.ByteString value) {
      java.lang.Class<?> valueClass = value.getClass();
  ensureSIsMutable();
      s_.add(value);
    }
    /**
     * <code>repeated bytes s = 1;</code>
     * @param values The s to add.
     */
    private void addAllS(
        java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
      ensureSIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, s_);
    }
    /**
     * <code>repeated bytes s = 1;</code>
     */
    private void clearS() {
      s_ = emptyProtobufList();
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     ** String table, contains the common strings in each block.
     *Note that we reserve index '0' as a delimiter, so the entry at that
     *index in the table is ALWAYS blank and unused.
     * </pre>
     *
     * Protobuf type {@code OSMPBF.StringTable}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable, Builder> implements
        // @@protoc_insertion_point(builder_implements:OSMPBF.StringTable)
        de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTableOrBuilder {
      // Construct using de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated bytes s = 1;</code>
       * @return A list containing the s.
       */
      @java.lang.Override
      public java.util.List<com.google.protobuf.ByteString>
          getSList() {
        return java.util.Collections.unmodifiableList(
            instance.getSList());
      }
      /**
       * <code>repeated bytes s = 1;</code>
       * @return The count of s.
       */
      @java.lang.Override
      public int getSCount() {
        return instance.getSCount();
      }
      /**
       * <code>repeated bytes s = 1;</code>
       * @param index The index of the element to return.
       * @return The s at the given index.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getS(int index) {
        return instance.getS(index);
      }
      /**
       * <code>repeated bytes s = 1;</code>
       * @param value The s to set.
       * @return This builder for chaining.
       */
      public Builder setS(
          int index, com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setS(index, value);
        return this;
      }
      /**
       * <code>repeated bytes s = 1;</code>
       * @param value The s to add.
       * @return This builder for chaining.
       */
      public Builder addS(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.addS(value);
        return this;
      }
      /**
       * <code>repeated bytes s = 1;</code>
       * @param values The s to add.
       * @return This builder for chaining.
       */
      public Builder addAllS(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        copyOnWrite();
        instance.addAllS(values);
        return this;
      }
      /**
       * <code>repeated bytes s = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearS() {
        copyOnWrite();
        instance.clearS();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OSMPBF.StringTable)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "s_",
            };
            java.lang.String info =
                "\u0001\u0001\u0000\u0000\u0001\u0001\u0001\u0000\u0001\u0000\u0001\u001c";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable> parser = PARSER;
          if (parser == null) {
            synchronized (de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:OSMPBF.StringTable)
    private static final de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable DEFAULT_INSTANCE;
    static {
      StringTable defaultInstance = new StringTable();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        StringTable.class, defaultInstance);
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.StringTable getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<StringTable> PARSER;

    public static com.google.protobuf.Parser<StringTable> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface InfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:OSMPBF.Info)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional int32 version = 1 [default = -1];</code>
     * @return Whether the version field is set.
     */
    boolean hasVersion();
    /**
     * <code>optional int32 version = 1 [default = -1];</code>
     * @return The version.
     */
    int getVersion();

    /**
     * <code>optional int64 timestamp = 2;</code>
     * @return Whether the timestamp field is set.
     */
    boolean hasTimestamp();
    /**
     * <code>optional int64 timestamp = 2;</code>
     * @return The timestamp.
     */
    long getTimestamp();

    /**
     * <code>optional int64 changeset = 3;</code>
     * @return Whether the changeset field is set.
     */
    boolean hasChangeset();
    /**
     * <code>optional int64 changeset = 3;</code>
     * @return The changeset.
     */
    long getChangeset();

    /**
     * <code>optional int32 uid = 4;</code>
     * @return Whether the uid field is set.
     */
    boolean hasUid();
    /**
     * <code>optional int32 uid = 4;</code>
     * @return The uid.
     */
    int getUid();

    /**
     * <pre>
     * String IDs
     * </pre>
     *
     * <code>optional uint32 user_sid = 5;</code>
     * @return Whether the userSid field is set.
     */
    boolean hasUserSid();
    /**
     * <pre>
     * String IDs
     * </pre>
     *
     * <code>optional uint32 user_sid = 5;</code>
     * @return The userSid.
     */
    int getUserSid();

    /**
     * <pre>
     * The visible flag is used to store history information. It indicates that
     * the current object version has been created by a delete operation on the
     * OSM API.
     * When a writer sets this flag, it MUST add a required_features tag with
     * value "HistoricalInformation" to the HeaderBlock.
     * If this flag is not available for some object it MUST be assumed to be
     * true if the file has the required_features tag "HistoricalInformation"
     * set.
     * </pre>
     *
     * <code>optional bool visible = 6;</code>
     * @return Whether the visible field is set.
     */
    boolean hasVisible();
    /**
     * <pre>
     * The visible flag is used to store history information. It indicates that
     * the current object version has been created by a delete operation on the
     * OSM API.
     * When a writer sets this flag, it MUST add a required_features tag with
     * value "HistoricalInformation" to the HeaderBlock.
     * If this flag is not available for some object it MUST be assumed to be
     * true if the file has the required_features tag "HistoricalInformation"
     * set.
     * </pre>
     *
     * <code>optional bool visible = 6;</code>
     * @return The visible.
     */
    boolean getVisible();
  }
  /**
   * <pre>
   * Optional metadata that may be included into each primitive. 
   * </pre>
   *
   * Protobuf type {@code OSMPBF.Info}
   */
  public  static final class Info extends
      com.google.protobuf.GeneratedMessageLite<
          Info, Info.Builder> implements
      // @@protoc_insertion_point(message_implements:OSMPBF.Info)
      InfoOrBuilder {
    private Info() {
      version_ = -1;
    }
    private int bitField0_;
    public static final int VERSION_FIELD_NUMBER = 1;
    private int version_;
    /**
     * <code>optional int32 version = 1 [default = -1];</code>
     * @return Whether the version field is set.
     */
    @java.lang.Override
    public boolean hasVersion() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int32 version = 1 [default = -1];</code>
     * @return The version.
     */
    @java.lang.Override
    public int getVersion() {
      return version_;
    }
    /**
     * <code>optional int32 version = 1 [default = -1];</code>
     * @param value The version to set.
     */
    private void setVersion(int value) {
      bitField0_ |= 0x00000001;
      version_ = value;
    }
    /**
     * <code>optional int32 version = 1 [default = -1];</code>
     */
    private void clearVersion() {
      bitField0_ = (bitField0_ & ~0x00000001);
      version_ = -1;
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private long timestamp_;
    /**
     * <code>optional int64 timestamp = 2;</code>
     * @return Whether the timestamp field is set.
     */
    @java.lang.Override
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional int64 timestamp = 2;</code>
     * @return The timestamp.
     */
    @java.lang.Override
    public long getTimestamp() {
      return timestamp_;
    }
    /**
     * <code>optional int64 timestamp = 2;</code>
     * @param value The timestamp to set.
     */
    private void setTimestamp(long value) {
      bitField0_ |= 0x00000002;
      timestamp_ = value;
    }
    /**
     * <code>optional int64 timestamp = 2;</code>
     */
    private void clearTimestamp() {
      bitField0_ = (bitField0_ & ~0x00000002);
      timestamp_ = 0L;
    }

    public static final int CHANGESET_FIELD_NUMBER = 3;
    private long changeset_;
    /**
     * <code>optional int64 changeset = 3;</code>
     * @return Whether the changeset field is set.
     */
    @java.lang.Override
    public boolean hasChangeset() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional int64 changeset = 3;</code>
     * @return The changeset.
     */
    @java.lang.Override
    public long getChangeset() {
      return changeset_;
    }
    /**
     * <code>optional int64 changeset = 3;</code>
     * @param value The changeset to set.
     */
    private void setChangeset(long value) {
      bitField0_ |= 0x00000004;
      changeset_ = value;
    }
    /**
     * <code>optional int64 changeset = 3;</code>
     */
    private void clearChangeset() {
      bitField0_ = (bitField0_ & ~0x00000004);
      changeset_ = 0L;
    }

    public static final int UID_FIELD_NUMBER = 4;
    private int uid_;
    /**
     * <code>optional int32 uid = 4;</code>
     * @return Whether the uid field is set.
     */
    @java.lang.Override
    public boolean hasUid() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional int32 uid = 4;</code>
     * @return The uid.
     */
    @java.lang.Override
    public int getUid() {
      return uid_;
    }
    /**
     * <code>optional int32 uid = 4;</code>
     * @param value The uid to set.
     */
    private void setUid(int value) {
      bitField0_ |= 0x00000008;
      uid_ = value;
    }
    /**
     * <code>optional int32 uid = 4;</code>
     */
    private void clearUid() {
      bitField0_ = (bitField0_ & ~0x00000008);
      uid_ = 0;
    }

    public static final int USER_SID_FIELD_NUMBER = 5;
    private int userSid_;
    /**
     * <pre>
     * String IDs
     * </pre>
     *
     * <code>optional uint32 user_sid = 5;</code>
     * @return Whether the userSid field is set.
     */
    @java.lang.Override
    public boolean hasUserSid() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * String IDs
     * </pre>
     *
     * <code>optional uint32 user_sid = 5;</code>
     * @return The userSid.
     */
    @java.lang.Override
    public int getUserSid() {
      return userSid_;
    }
    /**
     * <pre>
     * String IDs
     * </pre>
     *
     * <code>optional uint32 user_sid = 5;</code>
     * @param value The userSid to set.
     */
    private void setUserSid(int value) {
      bitField0_ |= 0x00000010;
      userSid_ = value;
    }
    /**
     * <pre>
     * String IDs
     * </pre>
     *
     * <code>optional uint32 user_sid = 5;</code>
     */
    private void clearUserSid() {
      bitField0_ = (bitField0_ & ~0x00000010);
      userSid_ = 0;
    }

    public static final int VISIBLE_FIELD_NUMBER = 6;
    private boolean visible_;
    /**
     * <pre>
     * The visible flag is used to store history information. It indicates that
     * the current object version has been created by a delete operation on the
     * OSM API.
     * When a writer sets this flag, it MUST add a required_features tag with
     * value "HistoricalInformation" to the HeaderBlock.
     * If this flag is not available for some object it MUST be assumed to be
     * true if the file has the required_features tag "HistoricalInformation"
     * set.
     * </pre>
     *
     * <code>optional bool visible = 6;</code>
     * @return Whether the visible field is set.
     */
    @java.lang.Override
    public boolean hasVisible() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The visible flag is used to store history information. It indicates that
     * the current object version has been created by a delete operation on the
     * OSM API.
     * When a writer sets this flag, it MUST add a required_features tag with
     * value "HistoricalInformation" to the HeaderBlock.
     * If this flag is not available for some object it MUST be assumed to be
     * true if the file has the required_features tag "HistoricalInformation"
     * set.
     * </pre>
     *
     * <code>optional bool visible = 6;</code>
     * @return The visible.
     */
    @java.lang.Override
    public boolean getVisible() {
      return visible_;
    }
    /**
     * <pre>
     * The visible flag is used to store history information. It indicates that
     * the current object version has been created by a delete operation on the
     * OSM API.
     * When a writer sets this flag, it MUST add a required_features tag with
     * value "HistoricalInformation" to the HeaderBlock.
     * If this flag is not available for some object it MUST be assumed to be
     * true if the file has the required_features tag "HistoricalInformation"
     * set.
     * </pre>
     *
     * <code>optional bool visible = 6;</code>
     * @param value The visible to set.
     */
    private void setVisible(boolean value) {
      bitField0_ |= 0x00000020;
      visible_ = value;
    }
    /**
     * <pre>
     * The visible flag is used to store history information. It indicates that
     * the current object version has been created by a delete operation on the
     * OSM API.
     * When a writer sets this flag, it MUST add a required_features tag with
     * value "HistoricalInformation" to the HeaderBlock.
     * If this flag is not available for some object it MUST be assumed to be
     * true if the file has the required_features tag "HistoricalInformation"
     * set.
     * </pre>
     *
     * <code>optional bool visible = 6;</code>
     */
    private void clearVisible() {
      bitField0_ = (bitField0_ & ~0x00000020);
      visible_ = false;
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Info parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Info parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Info parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Info parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Info parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Info parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Info parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Info parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Info parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Info parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Info parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Info parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(de.topobyte.osm4j.pbf.protobuf.Osmformat.Info prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * Optional metadata that may be included into each primitive. 
     * </pre>
     *
     * Protobuf type {@code OSMPBF.Info}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.topobyte.osm4j.pbf.protobuf.Osmformat.Info, Builder> implements
        // @@protoc_insertion_point(builder_implements:OSMPBF.Info)
        de.topobyte.osm4j.pbf.protobuf.Osmformat.InfoOrBuilder {
      // Construct using de.topobyte.osm4j.pbf.protobuf.Osmformat.Info.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional int32 version = 1 [default = -1];</code>
       * @return Whether the version field is set.
       */
      @java.lang.Override
      public boolean hasVersion() {
        return instance.hasVersion();
      }
      /**
       * <code>optional int32 version = 1 [default = -1];</code>
       * @return The version.
       */
      @java.lang.Override
      public int getVersion() {
        return instance.getVersion();
      }
      /**
       * <code>optional int32 version = 1 [default = -1];</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(int value) {
        copyOnWrite();
        instance.setVersion(value);
        return this;
      }
      /**
       * <code>optional int32 version = 1 [default = -1];</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        copyOnWrite();
        instance.clearVersion();
        return this;
      }

      /**
       * <code>optional int64 timestamp = 2;</code>
       * @return Whether the timestamp field is set.
       */
      @java.lang.Override
      public boolean hasTimestamp() {
        return instance.hasTimestamp();
      }
      /**
       * <code>optional int64 timestamp = 2;</code>
       * @return The timestamp.
       */
      @java.lang.Override
      public long getTimestamp() {
        return instance.getTimestamp();
      }
      /**
       * <code>optional int64 timestamp = 2;</code>
       * @param value The timestamp to set.
       * @return This builder for chaining.
       */
      public Builder setTimestamp(long value) {
        copyOnWrite();
        instance.setTimestamp(value);
        return this;
      }
      /**
       * <code>optional int64 timestamp = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestamp() {
        copyOnWrite();
        instance.clearTimestamp();
        return this;
      }

      /**
       * <code>optional int64 changeset = 3;</code>
       * @return Whether the changeset field is set.
       */
      @java.lang.Override
      public boolean hasChangeset() {
        return instance.hasChangeset();
      }
      /**
       * <code>optional int64 changeset = 3;</code>
       * @return The changeset.
       */
      @java.lang.Override
      public long getChangeset() {
        return instance.getChangeset();
      }
      /**
       * <code>optional int64 changeset = 3;</code>
       * @param value The changeset to set.
       * @return This builder for chaining.
       */
      public Builder setChangeset(long value) {
        copyOnWrite();
        instance.setChangeset(value);
        return this;
      }
      /**
       * <code>optional int64 changeset = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearChangeset() {
        copyOnWrite();
        instance.clearChangeset();
        return this;
      }

      /**
       * <code>optional int32 uid = 4;</code>
       * @return Whether the uid field is set.
       */
      @java.lang.Override
      public boolean hasUid() {
        return instance.hasUid();
      }
      /**
       * <code>optional int32 uid = 4;</code>
       * @return The uid.
       */
      @java.lang.Override
      public int getUid() {
        return instance.getUid();
      }
      /**
       * <code>optional int32 uid = 4;</code>
       * @param value The uid to set.
       * @return This builder for chaining.
       */
      public Builder setUid(int value) {
        copyOnWrite();
        instance.setUid(value);
        return this;
      }
      /**
       * <code>optional int32 uid = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearUid() {
        copyOnWrite();
        instance.clearUid();
        return this;
      }

      /**
       * <pre>
       * String IDs
       * </pre>
       *
       * <code>optional uint32 user_sid = 5;</code>
       * @return Whether the userSid field is set.
       */
      @java.lang.Override
      public boolean hasUserSid() {
        return instance.hasUserSid();
      }
      /**
       * <pre>
       * String IDs
       * </pre>
       *
       * <code>optional uint32 user_sid = 5;</code>
       * @return The userSid.
       */
      @java.lang.Override
      public int getUserSid() {
        return instance.getUserSid();
      }
      /**
       * <pre>
       * String IDs
       * </pre>
       *
       * <code>optional uint32 user_sid = 5;</code>
       * @param value The userSid to set.
       * @return This builder for chaining.
       */
      public Builder setUserSid(int value) {
        copyOnWrite();
        instance.setUserSid(value);
        return this;
      }
      /**
       * <pre>
       * String IDs
       * </pre>
       *
       * <code>optional uint32 user_sid = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearUserSid() {
        copyOnWrite();
        instance.clearUserSid();
        return this;
      }

      /**
       * <pre>
       * The visible flag is used to store history information. It indicates that
       * the current object version has been created by a delete operation on the
       * OSM API.
       * When a writer sets this flag, it MUST add a required_features tag with
       * value "HistoricalInformation" to the HeaderBlock.
       * If this flag is not available for some object it MUST be assumed to be
       * true if the file has the required_features tag "HistoricalInformation"
       * set.
       * </pre>
       *
       * <code>optional bool visible = 6;</code>
       * @return Whether the visible field is set.
       */
      @java.lang.Override
      public boolean hasVisible() {
        return instance.hasVisible();
      }
      /**
       * <pre>
       * The visible flag is used to store history information. It indicates that
       * the current object version has been created by a delete operation on the
       * OSM API.
       * When a writer sets this flag, it MUST add a required_features tag with
       * value "HistoricalInformation" to the HeaderBlock.
       * If this flag is not available for some object it MUST be assumed to be
       * true if the file has the required_features tag "HistoricalInformation"
       * set.
       * </pre>
       *
       * <code>optional bool visible = 6;</code>
       * @return The visible.
       */
      @java.lang.Override
      public boolean getVisible() {
        return instance.getVisible();
      }
      /**
       * <pre>
       * The visible flag is used to store history information. It indicates that
       * the current object version has been created by a delete operation on the
       * OSM API.
       * When a writer sets this flag, it MUST add a required_features tag with
       * value "HistoricalInformation" to the HeaderBlock.
       * If this flag is not available for some object it MUST be assumed to be
       * true if the file has the required_features tag "HistoricalInformation"
       * set.
       * </pre>
       *
       * <code>optional bool visible = 6;</code>
       * @param value The visible to set.
       * @return This builder for chaining.
       */
      public Builder setVisible(boolean value) {
        copyOnWrite();
        instance.setVisible(value);
        return this;
      }
      /**
       * <pre>
       * The visible flag is used to store history information. It indicates that
       * the current object version has been created by a delete operation on the
       * OSM API.
       * When a writer sets this flag, it MUST add a required_features tag with
       * value "HistoricalInformation" to the HeaderBlock.
       * If this flag is not available for some object it MUST be assumed to be
       * true if the file has the required_features tag "HistoricalInformation"
       * set.
       * </pre>
       *
       * <code>optional bool visible = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearVisible() {
        copyOnWrite();
        instance.clearVisible();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OSMPBF.Info)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.topobyte.osm4j.pbf.protobuf.Osmformat.Info();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "version_",
              "timestamp_",
              "changeset_",
              "uid_",
              "userSid_",
              "visible_",
            };
            java.lang.String info =
                "\u0001\u0006\u0000\u0001\u0001\u0006\u0006\u0000\u0000\u0000\u0001\u1004\u0000\u0002" +
                "\u1002\u0001\u0003\u1002\u0002\u0004\u1004\u0003\u0005\u100b\u0004\u0006\u1007\u0005" +
                "";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<de.topobyte.osm4j.pbf.protobuf.Osmformat.Info> parser = PARSER;
          if (parser == null) {
            synchronized (de.topobyte.osm4j.pbf.protobuf.Osmformat.Info.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<de.topobyte.osm4j.pbf.protobuf.Osmformat.Info>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:OSMPBF.Info)
    private static final de.topobyte.osm4j.pbf.protobuf.Osmformat.Info DEFAULT_INSTANCE;
    static {
      Info defaultInstance = new Info();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Info.class, defaultInstance);
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Info getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Info> PARSER;

    public static com.google.protobuf.Parser<Info> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DenseInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:OSMPBF.DenseInfo)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated int32 version = 1 [packed = true];</code>
     * @return A list containing the version.
     */
    java.util.List<java.lang.Integer> getVersionList();
    /**
     * <code>repeated int32 version = 1 [packed = true];</code>
     * @return The count of version.
     */
    int getVersionCount();
    /**
     * <code>repeated int32 version = 1 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The version at the given index.
     */
    int getVersion(int index);

    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 timestamp = 2 [packed = true];</code>
     * @return A list containing the timestamp.
     */
    java.util.List<java.lang.Long> getTimestampList();
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 timestamp = 2 [packed = true];</code>
     * @return The count of timestamp.
     */
    int getTimestampCount();
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 timestamp = 2 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The timestamp at the given index.
     */
    long getTimestamp(int index);

    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 changeset = 3 [packed = true];</code>
     * @return A list containing the changeset.
     */
    java.util.List<java.lang.Long> getChangesetList();
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 changeset = 3 [packed = true];</code>
     * @return The count of changeset.
     */
    int getChangesetCount();
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 changeset = 3 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The changeset at the given index.
     */
    long getChangeset(int index);

    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint32 uid = 4 [packed = true];</code>
     * @return A list containing the uid.
     */
    java.util.List<java.lang.Integer> getUidList();
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint32 uid = 4 [packed = true];</code>
     * @return The count of uid.
     */
    int getUidCount();
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint32 uid = 4 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The uid at the given index.
     */
    int getUid(int index);

    /**
     * <pre>
     * String IDs for usernames. DELTA coded
     * </pre>
     *
     * <code>repeated sint32 user_sid = 5 [packed = true];</code>
     * @return A list containing the userSid.
     */
    java.util.List<java.lang.Integer> getUserSidList();
    /**
     * <pre>
     * String IDs for usernames. DELTA coded
     * </pre>
     *
     * <code>repeated sint32 user_sid = 5 [packed = true];</code>
     * @return The count of userSid.
     */
    int getUserSidCount();
    /**
     * <pre>
     * String IDs for usernames. DELTA coded
     * </pre>
     *
     * <code>repeated sint32 user_sid = 5 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The userSid at the given index.
     */
    int getUserSid(int index);

    /**
     * <pre>
     * The visible flag is used to store history information. It indicates that
     * the current object version has been created by a delete operation on the
     * OSM API.
     * When a writer sets this flag, it MUST add a required_features tag with
     * value "HistoricalInformation" to the HeaderBlock.
     * If this flag is not available for some object it MUST be assumed to be
     * true if the file has the required_features tag "HistoricalInformation"
     * set.
     * </pre>
     *
     * <code>repeated bool visible = 6 [packed = true];</code>
     * @return A list containing the visible.
     */
    java.util.List<java.lang.Boolean> getVisibleList();
    /**
     * <pre>
     * The visible flag is used to store history information. It indicates that
     * the current object version has been created by a delete operation on the
     * OSM API.
     * When a writer sets this flag, it MUST add a required_features tag with
     * value "HistoricalInformation" to the HeaderBlock.
     * If this flag is not available for some object it MUST be assumed to be
     * true if the file has the required_features tag "HistoricalInformation"
     * set.
     * </pre>
     *
     * <code>repeated bool visible = 6 [packed = true];</code>
     * @return The count of visible.
     */
    int getVisibleCount();
    /**
     * <pre>
     * The visible flag is used to store history information. It indicates that
     * the current object version has been created by a delete operation on the
     * OSM API.
     * When a writer sets this flag, it MUST add a required_features tag with
     * value "HistoricalInformation" to the HeaderBlock.
     * If this flag is not available for some object it MUST be assumed to be
     * true if the file has the required_features tag "HistoricalInformation"
     * set.
     * </pre>
     *
     * <code>repeated bool visible = 6 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The visible at the given index.
     */
    boolean getVisible(int index);
  }
  /**
   * <pre>
   ** Optional metadata that may be included into each primitive. Special dense format used in DenseNodes. 
   * </pre>
   *
   * Protobuf type {@code OSMPBF.DenseInfo}
   */
  public  static final class DenseInfo extends
      com.google.protobuf.GeneratedMessageLite<
          DenseInfo, DenseInfo.Builder> implements
      // @@protoc_insertion_point(message_implements:OSMPBF.DenseInfo)
      DenseInfoOrBuilder {
    private DenseInfo() {
      version_ = emptyIntList();
      timestamp_ = emptyLongList();
      changeset_ = emptyLongList();
      uid_ = emptyIntList();
      userSid_ = emptyIntList();
      visible_ = emptyBooleanList();
    }
    public static final int VERSION_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList version_;
    /**
     * <code>repeated int32 version = 1 [packed = true];</code>
     * @return A list containing the version.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getVersionList() {
      return version_;
    }
    /**
     * <code>repeated int32 version = 1 [packed = true];</code>
     * @return The count of version.
     */
    @java.lang.Override
    public int getVersionCount() {
      return version_.size();
    }
    /**
     * <code>repeated int32 version = 1 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The version at the given index.
     */
    @java.lang.Override
    public int getVersion(int index) {
      return version_.getInt(index);
    }
    private int versionMemoizedSerializedSize = -1;
    private void ensureVersionIsMutable() {
      com.google.protobuf.Internal.IntList tmp = version_;
      if (!tmp.isModifiable()) {
        version_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <code>repeated int32 version = 1 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The version to set.
     */
    private void setVersion(
        int index, int value) {
      ensureVersionIsMutable();
      version_.setInt(index, value);
    }
    /**
     * <code>repeated int32 version = 1 [packed = true];</code>
     * @param value The version to add.
     */
    private void addVersion(int value) {
      ensureVersionIsMutable();
      version_.addInt(value);
    }
    /**
     * <code>repeated int32 version = 1 [packed = true];</code>
     * @param values The version to add.
     */
    private void addAllVersion(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureVersionIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, version_);
    }
    /**
     * <code>repeated int32 version = 1 [packed = true];</code>
     */
    private void clearVersion() {
      version_ = emptyIntList();
    }

    public static final int TIMESTAMP_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.LongList timestamp_;
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 timestamp = 2 [packed = true];</code>
     * @return A list containing the timestamp.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getTimestampList() {
      return timestamp_;
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 timestamp = 2 [packed = true];</code>
     * @return The count of timestamp.
     */
    @java.lang.Override
    public int getTimestampCount() {
      return timestamp_.size();
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 timestamp = 2 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The timestamp at the given index.
     */
    @java.lang.Override
    public long getTimestamp(int index) {
      return timestamp_.getLong(index);
    }
    private int timestampMemoizedSerializedSize = -1;
    private void ensureTimestampIsMutable() {
      com.google.protobuf.Internal.LongList tmp = timestamp_;
      if (!tmp.isModifiable()) {
        timestamp_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 timestamp = 2 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The timestamp to set.
     */
    private void setTimestamp(
        int index, long value) {
      ensureTimestampIsMutable();
      timestamp_.setLong(index, value);
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 timestamp = 2 [packed = true];</code>
     * @param value The timestamp to add.
     */
    private void addTimestamp(long value) {
      ensureTimestampIsMutable();
      timestamp_.addLong(value);
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 timestamp = 2 [packed = true];</code>
     * @param values The timestamp to add.
     */
    private void addAllTimestamp(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureTimestampIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, timestamp_);
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 timestamp = 2 [packed = true];</code>
     */
    private void clearTimestamp() {
      timestamp_ = emptyLongList();
    }

    public static final int CHANGESET_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.LongList changeset_;
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 changeset = 3 [packed = true];</code>
     * @return A list containing the changeset.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getChangesetList() {
      return changeset_;
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 changeset = 3 [packed = true];</code>
     * @return The count of changeset.
     */
    @java.lang.Override
    public int getChangesetCount() {
      return changeset_.size();
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 changeset = 3 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The changeset at the given index.
     */
    @java.lang.Override
    public long getChangeset(int index) {
      return changeset_.getLong(index);
    }
    private int changesetMemoizedSerializedSize = -1;
    private void ensureChangesetIsMutable() {
      com.google.protobuf.Internal.LongList tmp = changeset_;
      if (!tmp.isModifiable()) {
        changeset_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 changeset = 3 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The changeset to set.
     */
    private void setChangeset(
        int index, long value) {
      ensureChangesetIsMutable();
      changeset_.setLong(index, value);
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 changeset = 3 [packed = true];</code>
     * @param value The changeset to add.
     */
    private void addChangeset(long value) {
      ensureChangesetIsMutable();
      changeset_.addLong(value);
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 changeset = 3 [packed = true];</code>
     * @param values The changeset to add.
     */
    private void addAllChangeset(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureChangesetIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, changeset_);
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 changeset = 3 [packed = true];</code>
     */
    private void clearChangeset() {
      changeset_ = emptyLongList();
    }

    public static final int UID_FIELD_NUMBER = 4;
    private com.google.protobuf.Internal.IntList uid_;
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint32 uid = 4 [packed = true];</code>
     * @return A list containing the uid.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getUidList() {
      return uid_;
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint32 uid = 4 [packed = true];</code>
     * @return The count of uid.
     */
    @java.lang.Override
    public int getUidCount() {
      return uid_.size();
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint32 uid = 4 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The uid at the given index.
     */
    @java.lang.Override
    public int getUid(int index) {
      return uid_.getInt(index);
    }
    private int uidMemoizedSerializedSize = -1;
    private void ensureUidIsMutable() {
      com.google.protobuf.Internal.IntList tmp = uid_;
      if (!tmp.isModifiable()) {
        uid_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint32 uid = 4 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The uid to set.
     */
    private void setUid(
        int index, int value) {
      ensureUidIsMutable();
      uid_.setInt(index, value);
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint32 uid = 4 [packed = true];</code>
     * @param value The uid to add.
     */
    private void addUid(int value) {
      ensureUidIsMutable();
      uid_.addInt(value);
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint32 uid = 4 [packed = true];</code>
     * @param values The uid to add.
     */
    private void addAllUid(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureUidIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, uid_);
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint32 uid = 4 [packed = true];</code>
     */
    private void clearUid() {
      uid_ = emptyIntList();
    }

    public static final int USER_SID_FIELD_NUMBER = 5;
    private com.google.protobuf.Internal.IntList userSid_;
    /**
     * <pre>
     * String IDs for usernames. DELTA coded
     * </pre>
     *
     * <code>repeated sint32 user_sid = 5 [packed = true];</code>
     * @return A list containing the userSid.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getUserSidList() {
      return userSid_;
    }
    /**
     * <pre>
     * String IDs for usernames. DELTA coded
     * </pre>
     *
     * <code>repeated sint32 user_sid = 5 [packed = true];</code>
     * @return The count of userSid.
     */
    @java.lang.Override
    public int getUserSidCount() {
      return userSid_.size();
    }
    /**
     * <pre>
     * String IDs for usernames. DELTA coded
     * </pre>
     *
     * <code>repeated sint32 user_sid = 5 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The userSid at the given index.
     */
    @java.lang.Override
    public int getUserSid(int index) {
      return userSid_.getInt(index);
    }
    private int userSidMemoizedSerializedSize = -1;
    private void ensureUserSidIsMutable() {
      com.google.protobuf.Internal.IntList tmp = userSid_;
      if (!tmp.isModifiable()) {
        userSid_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * String IDs for usernames. DELTA coded
     * </pre>
     *
     * <code>repeated sint32 user_sid = 5 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The userSid to set.
     */
    private void setUserSid(
        int index, int value) {
      ensureUserSidIsMutable();
      userSid_.setInt(index, value);
    }
    /**
     * <pre>
     * String IDs for usernames. DELTA coded
     * </pre>
     *
     * <code>repeated sint32 user_sid = 5 [packed = true];</code>
     * @param value The userSid to add.
     */
    private void addUserSid(int value) {
      ensureUserSidIsMutable();
      userSid_.addInt(value);
    }
    /**
     * <pre>
     * String IDs for usernames. DELTA coded
     * </pre>
     *
     * <code>repeated sint32 user_sid = 5 [packed = true];</code>
     * @param values The userSid to add.
     */
    private void addAllUserSid(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureUserSidIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, userSid_);
    }
    /**
     * <pre>
     * String IDs for usernames. DELTA coded
     * </pre>
     *
     * <code>repeated sint32 user_sid = 5 [packed = true];</code>
     */
    private void clearUserSid() {
      userSid_ = emptyIntList();
    }

    public static final int VISIBLE_FIELD_NUMBER = 6;
    private com.google.protobuf.Internal.BooleanList visible_;
    /**
     * <pre>
     * The visible flag is used to store history information. It indicates that
     * the current object version has been created by a delete operation on the
     * OSM API.
     * When a writer sets this flag, it MUST add a required_features tag with
     * value "HistoricalInformation" to the HeaderBlock.
     * If this flag is not available for some object it MUST be assumed to be
     * true if the file has the required_features tag "HistoricalInformation"
     * set.
     * </pre>
     *
     * <code>repeated bool visible = 6 [packed = true];</code>
     * @return A list containing the visible.
     */
    @java.lang.Override
    public java.util.List<java.lang.Boolean>
        getVisibleList() {
      return visible_;
    }
    /**
     * <pre>
     * The visible flag is used to store history information. It indicates that
     * the current object version has been created by a delete operation on the
     * OSM API.
     * When a writer sets this flag, it MUST add a required_features tag with
     * value "HistoricalInformation" to the HeaderBlock.
     * If this flag is not available for some object it MUST be assumed to be
     * true if the file has the required_features tag "HistoricalInformation"
     * set.
     * </pre>
     *
     * <code>repeated bool visible = 6 [packed = true];</code>
     * @return The count of visible.
     */
    @java.lang.Override
    public int getVisibleCount() {
      return visible_.size();
    }
    /**
     * <pre>
     * The visible flag is used to store history information. It indicates that
     * the current object version has been created by a delete operation on the
     * OSM API.
     * When a writer sets this flag, it MUST add a required_features tag with
     * value "HistoricalInformation" to the HeaderBlock.
     * If this flag is not available for some object it MUST be assumed to be
     * true if the file has the required_features tag "HistoricalInformation"
     * set.
     * </pre>
     *
     * <code>repeated bool visible = 6 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The visible at the given index.
     */
    @java.lang.Override
    public boolean getVisible(int index) {
      return visible_.getBoolean(index);
    }
    private int visibleMemoizedSerializedSize = -1;
    private void ensureVisibleIsMutable() {
      com.google.protobuf.Internal.BooleanList tmp = visible_;
      if (!tmp.isModifiable()) {
        visible_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * The visible flag is used to store history information. It indicates that
     * the current object version has been created by a delete operation on the
     * OSM API.
     * When a writer sets this flag, it MUST add a required_features tag with
     * value "HistoricalInformation" to the HeaderBlock.
     * If this flag is not available for some object it MUST be assumed to be
     * true if the file has the required_features tag "HistoricalInformation"
     * set.
     * </pre>
     *
     * <code>repeated bool visible = 6 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The visible to set.
     */
    private void setVisible(
        int index, boolean value) {
      ensureVisibleIsMutable();
      visible_.setBoolean(index, value);
    }
    /**
     * <pre>
     * The visible flag is used to store history information. It indicates that
     * the current object version has been created by a delete operation on the
     * OSM API.
     * When a writer sets this flag, it MUST add a required_features tag with
     * value "HistoricalInformation" to the HeaderBlock.
     * If this flag is not available for some object it MUST be assumed to be
     * true if the file has the required_features tag "HistoricalInformation"
     * set.
     * </pre>
     *
     * <code>repeated bool visible = 6 [packed = true];</code>
     * @param value The visible to add.
     */
    private void addVisible(boolean value) {
      ensureVisibleIsMutable();
      visible_.addBoolean(value);
    }
    /**
     * <pre>
     * The visible flag is used to store history information. It indicates that
     * the current object version has been created by a delete operation on the
     * OSM API.
     * When a writer sets this flag, it MUST add a required_features tag with
     * value "HistoricalInformation" to the HeaderBlock.
     * If this flag is not available for some object it MUST be assumed to be
     * true if the file has the required_features tag "HistoricalInformation"
     * set.
     * </pre>
     *
     * <code>repeated bool visible = 6 [packed = true];</code>
     * @param values The visible to add.
     */
    private void addAllVisible(
        java.lang.Iterable<? extends java.lang.Boolean> values) {
      ensureVisibleIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, visible_);
    }
    /**
     * <pre>
     * The visible flag is used to store history information. It indicates that
     * the current object version has been created by a delete operation on the
     * OSM API.
     * When a writer sets this flag, it MUST add a required_features tag with
     * value "HistoricalInformation" to the HeaderBlock.
     * If this flag is not available for some object it MUST be assumed to be
     * true if the file has the required_features tag "HistoricalInformation"
     * set.
     * </pre>
     *
     * <code>repeated bool visible = 6 [packed = true];</code>
     */
    private void clearVisible() {
      visible_ = emptyBooleanList();
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     ** Optional metadata that may be included into each primitive. Special dense format used in DenseNodes. 
     * </pre>
     *
     * Protobuf type {@code OSMPBF.DenseInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo, Builder> implements
        // @@protoc_insertion_point(builder_implements:OSMPBF.DenseInfo)
        de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfoOrBuilder {
      // Construct using de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated int32 version = 1 [packed = true];</code>
       * @return A list containing the version.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getVersionList() {
        return java.util.Collections.unmodifiableList(
            instance.getVersionList());
      }
      /**
       * <code>repeated int32 version = 1 [packed = true];</code>
       * @return The count of version.
       */
      @java.lang.Override
      public int getVersionCount() {
        return instance.getVersionCount();
      }
      /**
       * <code>repeated int32 version = 1 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The version at the given index.
       */
      @java.lang.Override
      public int getVersion(int index) {
        return instance.getVersion(index);
      }
      /**
       * <code>repeated int32 version = 1 [packed = true];</code>
       * @param value The version to set.
       * @return This builder for chaining.
       */
      public Builder setVersion(
          int index, int value) {
        copyOnWrite();
        instance.setVersion(index, value);
        return this;
      }
      /**
       * <code>repeated int32 version = 1 [packed = true];</code>
       * @param value The version to add.
       * @return This builder for chaining.
       */
      public Builder addVersion(int value) {
        copyOnWrite();
        instance.addVersion(value);
        return this;
      }
      /**
       * <code>repeated int32 version = 1 [packed = true];</code>
       * @param values The version to add.
       * @return This builder for chaining.
       */
      public Builder addAllVersion(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllVersion(values);
        return this;
      }
      /**
       * <code>repeated int32 version = 1 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearVersion() {
        copyOnWrite();
        instance.clearVersion();
        return this;
      }

      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 timestamp = 2 [packed = true];</code>
       * @return A list containing the timestamp.
       */
      @java.lang.Override
      public java.util.List<java.lang.Long>
          getTimestampList() {
        return java.util.Collections.unmodifiableList(
            instance.getTimestampList());
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 timestamp = 2 [packed = true];</code>
       * @return The count of timestamp.
       */
      @java.lang.Override
      public int getTimestampCount() {
        return instance.getTimestampCount();
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 timestamp = 2 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The timestamp at the given index.
       */
      @java.lang.Override
      public long getTimestamp(int index) {
        return instance.getTimestamp(index);
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 timestamp = 2 [packed = true];</code>
       * @param value The timestamp to set.
       * @return This builder for chaining.
       */
      public Builder setTimestamp(
          int index, long value) {
        copyOnWrite();
        instance.setTimestamp(index, value);
        return this;
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 timestamp = 2 [packed = true];</code>
       * @param value The timestamp to add.
       * @return This builder for chaining.
       */
      public Builder addTimestamp(long value) {
        copyOnWrite();
        instance.addTimestamp(value);
        return this;
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 timestamp = 2 [packed = true];</code>
       * @param values The timestamp to add.
       * @return This builder for chaining.
       */
      public Builder addAllTimestamp(
          java.lang.Iterable<? extends java.lang.Long> values) {
        copyOnWrite();
        instance.addAllTimestamp(values);
        return this;
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 timestamp = 2 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearTimestamp() {
        copyOnWrite();
        instance.clearTimestamp();
        return this;
      }

      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 changeset = 3 [packed = true];</code>
       * @return A list containing the changeset.
       */
      @java.lang.Override
      public java.util.List<java.lang.Long>
          getChangesetList() {
        return java.util.Collections.unmodifiableList(
            instance.getChangesetList());
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 changeset = 3 [packed = true];</code>
       * @return The count of changeset.
       */
      @java.lang.Override
      public int getChangesetCount() {
        return instance.getChangesetCount();
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 changeset = 3 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The changeset at the given index.
       */
      @java.lang.Override
      public long getChangeset(int index) {
        return instance.getChangeset(index);
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 changeset = 3 [packed = true];</code>
       * @param value The changeset to set.
       * @return This builder for chaining.
       */
      public Builder setChangeset(
          int index, long value) {
        copyOnWrite();
        instance.setChangeset(index, value);
        return this;
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 changeset = 3 [packed = true];</code>
       * @param value The changeset to add.
       * @return This builder for chaining.
       */
      public Builder addChangeset(long value) {
        copyOnWrite();
        instance.addChangeset(value);
        return this;
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 changeset = 3 [packed = true];</code>
       * @param values The changeset to add.
       * @return This builder for chaining.
       */
      public Builder addAllChangeset(
          java.lang.Iterable<? extends java.lang.Long> values) {
        copyOnWrite();
        instance.addAllChangeset(values);
        return this;
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 changeset = 3 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearChangeset() {
        copyOnWrite();
        instance.clearChangeset();
        return this;
      }

      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint32 uid = 4 [packed = true];</code>
       * @return A list containing the uid.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getUidList() {
        return java.util.Collections.unmodifiableList(
            instance.getUidList());
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint32 uid = 4 [packed = true];</code>
       * @return The count of uid.
       */
      @java.lang.Override
      public int getUidCount() {
        return instance.getUidCount();
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint32 uid = 4 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The uid at the given index.
       */
      @java.lang.Override
      public int getUid(int index) {
        return instance.getUid(index);
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint32 uid = 4 [packed = true];</code>
       * @param value The uid to set.
       * @return This builder for chaining.
       */
      public Builder setUid(
          int index, int value) {
        copyOnWrite();
        instance.setUid(index, value);
        return this;
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint32 uid = 4 [packed = true];</code>
       * @param value The uid to add.
       * @return This builder for chaining.
       */
      public Builder addUid(int value) {
        copyOnWrite();
        instance.addUid(value);
        return this;
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint32 uid = 4 [packed = true];</code>
       * @param values The uid to add.
       * @return This builder for chaining.
       */
      public Builder addAllUid(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllUid(values);
        return this;
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint32 uid = 4 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearUid() {
        copyOnWrite();
        instance.clearUid();
        return this;
      }

      /**
       * <pre>
       * String IDs for usernames. DELTA coded
       * </pre>
       *
       * <code>repeated sint32 user_sid = 5 [packed = true];</code>
       * @return A list containing the userSid.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getUserSidList() {
        return java.util.Collections.unmodifiableList(
            instance.getUserSidList());
      }
      /**
       * <pre>
       * String IDs for usernames. DELTA coded
       * </pre>
       *
       * <code>repeated sint32 user_sid = 5 [packed = true];</code>
       * @return The count of userSid.
       */
      @java.lang.Override
      public int getUserSidCount() {
        return instance.getUserSidCount();
      }
      /**
       * <pre>
       * String IDs for usernames. DELTA coded
       * </pre>
       *
       * <code>repeated sint32 user_sid = 5 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The userSid at the given index.
       */
      @java.lang.Override
      public int getUserSid(int index) {
        return instance.getUserSid(index);
      }
      /**
       * <pre>
       * String IDs for usernames. DELTA coded
       * </pre>
       *
       * <code>repeated sint32 user_sid = 5 [packed = true];</code>
       * @param value The userSid to set.
       * @return This builder for chaining.
       */
      public Builder setUserSid(
          int index, int value) {
        copyOnWrite();
        instance.setUserSid(index, value);
        return this;
      }
      /**
       * <pre>
       * String IDs for usernames. DELTA coded
       * </pre>
       *
       * <code>repeated sint32 user_sid = 5 [packed = true];</code>
       * @param value The userSid to add.
       * @return This builder for chaining.
       */
      public Builder addUserSid(int value) {
        copyOnWrite();
        instance.addUserSid(value);
        return this;
      }
      /**
       * <pre>
       * String IDs for usernames. DELTA coded
       * </pre>
       *
       * <code>repeated sint32 user_sid = 5 [packed = true];</code>
       * @param values The userSid to add.
       * @return This builder for chaining.
       */
      public Builder addAllUserSid(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllUserSid(values);
        return this;
      }
      /**
       * <pre>
       * String IDs for usernames. DELTA coded
       * </pre>
       *
       * <code>repeated sint32 user_sid = 5 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearUserSid() {
        copyOnWrite();
        instance.clearUserSid();
        return this;
      }

      /**
       * <pre>
       * The visible flag is used to store history information. It indicates that
       * the current object version has been created by a delete operation on the
       * OSM API.
       * When a writer sets this flag, it MUST add a required_features tag with
       * value "HistoricalInformation" to the HeaderBlock.
       * If this flag is not available for some object it MUST be assumed to be
       * true if the file has the required_features tag "HistoricalInformation"
       * set.
       * </pre>
       *
       * <code>repeated bool visible = 6 [packed = true];</code>
       * @return A list containing the visible.
       */
      @java.lang.Override
      public java.util.List<java.lang.Boolean>
          getVisibleList() {
        return java.util.Collections.unmodifiableList(
            instance.getVisibleList());
      }
      /**
       * <pre>
       * The visible flag is used to store history information. It indicates that
       * the current object version has been created by a delete operation on the
       * OSM API.
       * When a writer sets this flag, it MUST add a required_features tag with
       * value "HistoricalInformation" to the HeaderBlock.
       * If this flag is not available for some object it MUST be assumed to be
       * true if the file has the required_features tag "HistoricalInformation"
       * set.
       * </pre>
       *
       * <code>repeated bool visible = 6 [packed = true];</code>
       * @return The count of visible.
       */
      @java.lang.Override
      public int getVisibleCount() {
        return instance.getVisibleCount();
      }
      /**
       * <pre>
       * The visible flag is used to store history information. It indicates that
       * the current object version has been created by a delete operation on the
       * OSM API.
       * When a writer sets this flag, it MUST add a required_features tag with
       * value "HistoricalInformation" to the HeaderBlock.
       * If this flag is not available for some object it MUST be assumed to be
       * true if the file has the required_features tag "HistoricalInformation"
       * set.
       * </pre>
       *
       * <code>repeated bool visible = 6 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The visible at the given index.
       */
      @java.lang.Override
      public boolean getVisible(int index) {
        return instance.getVisible(index);
      }
      /**
       * <pre>
       * The visible flag is used to store history information. It indicates that
       * the current object version has been created by a delete operation on the
       * OSM API.
       * When a writer sets this flag, it MUST add a required_features tag with
       * value "HistoricalInformation" to the HeaderBlock.
       * If this flag is not available for some object it MUST be assumed to be
       * true if the file has the required_features tag "HistoricalInformation"
       * set.
       * </pre>
       *
       * <code>repeated bool visible = 6 [packed = true];</code>
       * @param value The visible to set.
       * @return This builder for chaining.
       */
      public Builder setVisible(
          int index, boolean value) {
        copyOnWrite();
        instance.setVisible(index, value);
        return this;
      }
      /**
       * <pre>
       * The visible flag is used to store history information. It indicates that
       * the current object version has been created by a delete operation on the
       * OSM API.
       * When a writer sets this flag, it MUST add a required_features tag with
       * value "HistoricalInformation" to the HeaderBlock.
       * If this flag is not available for some object it MUST be assumed to be
       * true if the file has the required_features tag "HistoricalInformation"
       * set.
       * </pre>
       *
       * <code>repeated bool visible = 6 [packed = true];</code>
       * @param value The visible to add.
       * @return This builder for chaining.
       */
      public Builder addVisible(boolean value) {
        copyOnWrite();
        instance.addVisible(value);
        return this;
      }
      /**
       * <pre>
       * The visible flag is used to store history information. It indicates that
       * the current object version has been created by a delete operation on the
       * OSM API.
       * When a writer sets this flag, it MUST add a required_features tag with
       * value "HistoricalInformation" to the HeaderBlock.
       * If this flag is not available for some object it MUST be assumed to be
       * true if the file has the required_features tag "HistoricalInformation"
       * set.
       * </pre>
       *
       * <code>repeated bool visible = 6 [packed = true];</code>
       * @param values The visible to add.
       * @return This builder for chaining.
       */
      public Builder addAllVisible(
          java.lang.Iterable<? extends java.lang.Boolean> values) {
        copyOnWrite();
        instance.addAllVisible(values);
        return this;
      }
      /**
       * <pre>
       * The visible flag is used to store history information. It indicates that
       * the current object version has been created by a delete operation on the
       * OSM API.
       * When a writer sets this flag, it MUST add a required_features tag with
       * value "HistoricalInformation" to the HeaderBlock.
       * If this flag is not available for some object it MUST be assumed to be
       * true if the file has the required_features tag "HistoricalInformation"
       * set.
       * </pre>
       *
       * <code>repeated bool visible = 6 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearVisible() {
        copyOnWrite();
        instance.clearVisible();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OSMPBF.DenseInfo)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "version_",
              "timestamp_",
              "changeset_",
              "uid_",
              "userSid_",
              "visible_",
            };
            java.lang.String info =
                "\u0001\u0006\u0000\u0000\u0001\u0006\u0006\u0000\u0006\u0000\u0001\'\u00020\u0003" +
                "0\u0004/\u0005/\u0006*";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo> parser = PARSER;
          if (parser == null) {
            synchronized (de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:OSMPBF.DenseInfo)
    private static final de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo DEFAULT_INSTANCE;
    static {
      DenseInfo defaultInstance = new DenseInfo();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        DenseInfo.class, defaultInstance);
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DenseInfo> PARSER;

    public static com.google.protobuf.Parser<DenseInfo> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface ChangeSetOrBuilder extends
      // @@protoc_insertion_point(interface_extends:OSMPBF.ChangeSet)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *   
     *   // Parallel arrays.
     *   repeated uint32 keys = 2 [packed = true]; // String IDs.
     *   repeated uint32 vals = 3 [packed = true]; // String IDs.
     *   optional Info info = 4;
     * </pre>
     *
     * <code>required int64 id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <pre>
     *   
     *   // Parallel arrays.
     *   repeated uint32 keys = 2 [packed = true]; // String IDs.
     *   repeated uint32 vals = 3 [packed = true]; // String IDs.
     *   optional Info info = 4;
     * </pre>
     *
     * <code>required int64 id = 1;</code>
     * @return The id.
     */
    long getId();
  }
  /**
   * <pre>
   * THIS IS STUB DESIGN FOR CHANGESETS. NOT USED RIGHT NOW.
   * TODO:    REMOVE THIS?
   * </pre>
   *
   * Protobuf type {@code OSMPBF.ChangeSet}
   */
  public  static final class ChangeSet extends
      com.google.protobuf.GeneratedMessageLite<
          ChangeSet, ChangeSet.Builder> implements
      // @@protoc_insertion_point(message_implements:OSMPBF.ChangeSet)
      ChangeSetOrBuilder {
    private ChangeSet() {
    }
    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <pre>
     *   
     *   // Parallel arrays.
     *   repeated uint32 keys = 2 [packed = true]; // String IDs.
     *   repeated uint32 vals = 3 [packed = true]; // String IDs.
     *   optional Info info = 4;
     * </pre>
     *
     * <code>required int64 id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *   
     *   // Parallel arrays.
     *   repeated uint32 keys = 2 [packed = true]; // String IDs.
     *   repeated uint32 vals = 3 [packed = true]; // String IDs.
     *   optional Info info = 4;
     * </pre>
     *
     * <code>required int64 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public long getId() {
      return id_;
    }
    /**
     * <pre>
     *   
     *   // Parallel arrays.
     *   repeated uint32 keys = 2 [packed = true]; // String IDs.
     *   repeated uint32 vals = 3 [packed = true]; // String IDs.
     *   optional Info info = 4;
     * </pre>
     *
     * <code>required int64 id = 1;</code>
     * @param value The id to set.
     */
    private void setId(long value) {
      bitField0_ |= 0x00000001;
      id_ = value;
    }
    /**
     * <pre>
     *   
     *   // Parallel arrays.
     *   repeated uint32 keys = 2 [packed = true]; // String IDs.
     *   repeated uint32 vals = 3 [packed = true]; // String IDs.
     *   optional Info info = 4;
     * </pre>
     *
     * <code>required int64 id = 1;</code>
     */
    private void clearId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      id_ = 0L;
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * <pre>
     * THIS IS STUB DESIGN FOR CHANGESETS. NOT USED RIGHT NOW.
     * TODO:    REMOVE THIS?
     * </pre>
     *
     * Protobuf type {@code OSMPBF.ChangeSet}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet, Builder> implements
        // @@protoc_insertion_point(builder_implements:OSMPBF.ChangeSet)
        de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSetOrBuilder {
      // Construct using de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *   
       *   // Parallel arrays.
       *   repeated uint32 keys = 2 [packed = true]; // String IDs.
       *   repeated uint32 vals = 3 [packed = true]; // String IDs.
       *   optional Info info = 4;
       * </pre>
       *
       * <code>required int64 id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return instance.hasId();
      }
      /**
       * <pre>
       *   
       *   // Parallel arrays.
       *   repeated uint32 keys = 2 [packed = true]; // String IDs.
       *   repeated uint32 vals = 3 [packed = true]; // String IDs.
       *   optional Info info = 4;
       * </pre>
       *
       * <code>required int64 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public long getId() {
        return instance.getId();
      }
      /**
       * <pre>
       *   
       *   // Parallel arrays.
       *   repeated uint32 keys = 2 [packed = true]; // String IDs.
       *   repeated uint32 vals = 3 [packed = true]; // String IDs.
       *   optional Info info = 4;
       * </pre>
       *
       * <code>required int64 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <pre>
       *   
       *   // Parallel arrays.
       *   repeated uint32 keys = 2 [packed = true]; // String IDs.
       *   repeated uint32 vals = 3 [packed = true]; // String IDs.
       *   optional Info info = 4;
       * </pre>
       *
       * <code>required int64 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OSMPBF.ChangeSet)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "id_",
            };
            java.lang.String info =
                "\u0001\u0001\u0000\u0001\u0001\u0001\u0001\u0000\u0000\u0001\u0001\u1502\u0000";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet> parser = PARSER;
          if (parser == null) {
            synchronized (de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:OSMPBF.ChangeSet)
    private static final de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet DEFAULT_INSTANCE;
    static {
      ChangeSet defaultInstance = new ChangeSet();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        ChangeSet.class, defaultInstance);
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.ChangeSet getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<ChangeSet> PARSER;

    public static com.google.protobuf.Parser<ChangeSet> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface NodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:OSMPBF.Node)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required sint64 id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <code>required sint64 id = 1;</code>
     * @return The id.
     */
    long getId();

    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @return A list containing the keys.
     */
    java.util.List<java.lang.Integer> getKeysList();
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @return The count of keys.
     */
    int getKeysCount();
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    int getKeys(int index);

    /**
     * <pre>
     * String IDs.
     * </pre>
     *
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @return A list containing the vals.
     */
    java.util.List<java.lang.Integer> getValsList();
    /**
     * <pre>
     * String IDs.
     * </pre>
     *
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @return The count of vals.
     */
    int getValsCount();
    /**
     * <pre>
     * String IDs.
     * </pre>
     *
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The vals at the given index.
     */
    int getVals(int index);

    /**
     * <pre>
     * May be omitted in omitmeta
     * </pre>
     *
     * <code>optional .OSMPBF.Info info = 4;</code>
     * @return Whether the info field is set.
     */
    boolean hasInfo();
    /**
     * <pre>
     * May be omitted in omitmeta
     * </pre>
     *
     * <code>optional .OSMPBF.Info info = 4;</code>
     * @return The info.
     */
    de.topobyte.osm4j.pbf.protobuf.Osmformat.Info getInfo();

    /**
     * <code>required sint64 lat = 8;</code>
     * @return Whether the lat field is set.
     */
    boolean hasLat();
    /**
     * <code>required sint64 lat = 8;</code>
     * @return The lat.
     */
    long getLat();

    /**
     * <code>required sint64 lon = 9;</code>
     * @return Whether the lon field is set.
     */
    boolean hasLon();
    /**
     * <code>required sint64 lon = 9;</code>
     * @return The lon.
     */
    long getLon();
  }
  /**
   * Protobuf type {@code OSMPBF.Node}
   */
  public  static final class Node extends
      com.google.protobuf.GeneratedMessageLite<
          Node, Node.Builder> implements
      // @@protoc_insertion_point(message_implements:OSMPBF.Node)
      NodeOrBuilder {
    private Node() {
      keys_ = emptyIntList();
      vals_ = emptyIntList();
    }
    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required sint64 id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required sint64 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public long getId() {
      return id_;
    }
    /**
     * <code>required sint64 id = 1;</code>
     * @param value The id to set.
     */
    private void setId(long value) {
      bitField0_ |= 0x00000001;
      id_ = value;
    }
    /**
     * <code>required sint64 id = 1;</code>
     */
    private void clearId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      id_ = 0L;
    }

    public static final int KEYS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList keys_;
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @return A list containing the keys.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getKeysList() {
      return keys_;
    }
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @return The count of keys.
     */
    @java.lang.Override
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    @java.lang.Override
    public int getKeys(int index) {
      return keys_.getInt(index);
    }
    private int keysMemoizedSerializedSize = -1;
    private void ensureKeysIsMutable() {
      com.google.protobuf.Internal.IntList tmp = keys_;
      if (!tmp.isModifiable()) {
        keys_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The keys to set.
     */
    private void setKeys(
        int index, int value) {
      ensureKeysIsMutable();
      keys_.setInt(index, value);
    }
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @param value The keys to add.
     */
    private void addKeys(int value) {
      ensureKeysIsMutable();
      keys_.addInt(value);
    }
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @param values The keys to add.
     */
    private void addAllKeys(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureKeysIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, keys_);
    }
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     */
    private void clearKeys() {
      keys_ = emptyIntList();
    }

    public static final int VALS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList vals_;
    /**
     * <pre>
     * String IDs.
     * </pre>
     *
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @return A list containing the vals.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getValsList() {
      return vals_;
    }
    /**
     * <pre>
     * String IDs.
     * </pre>
     *
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @return The count of vals.
     */
    @java.lang.Override
    public int getValsCount() {
      return vals_.size();
    }
    /**
     * <pre>
     * String IDs.
     * </pre>
     *
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The vals at the given index.
     */
    @java.lang.Override
    public int getVals(int index) {
      return vals_.getInt(index);
    }
    private int valsMemoizedSerializedSize = -1;
    private void ensureValsIsMutable() {
      com.google.protobuf.Internal.IntList tmp = vals_;
      if (!tmp.isModifiable()) {
        vals_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * String IDs.
     * </pre>
     *
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The vals to set.
     */
    private void setVals(
        int index, int value) {
      ensureValsIsMutable();
      vals_.setInt(index, value);
    }
    /**
     * <pre>
     * String IDs.
     * </pre>
     *
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @param value The vals to add.
     */
    private void addVals(int value) {
      ensureValsIsMutable();
      vals_.addInt(value);
    }
    /**
     * <pre>
     * String IDs.
     * </pre>
     *
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @param values The vals to add.
     */
    private void addAllVals(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureValsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, vals_);
    }
    /**
     * <pre>
     * String IDs.
     * </pre>
     *
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     */
    private void clearVals() {
      vals_ = emptyIntList();
    }

    public static final int INFO_FIELD_NUMBER = 4;
    private de.topobyte.osm4j.pbf.protobuf.Osmformat.Info info_;
    /**
     * <pre>
     * May be omitted in omitmeta
     * </pre>
     *
     * <code>optional .OSMPBF.Info info = 4;</code>
     */
    @java.lang.Override
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * May be omitted in omitmeta
     * </pre>
     *
     * <code>optional .OSMPBF.Info info = 4;</code>
     */
    @java.lang.Override
    public de.topobyte.osm4j.pbf.protobuf.Osmformat.Info getInfo() {
      return info_ == null ? de.topobyte.osm4j.pbf.protobuf.Osmformat.Info.getDefaultInstance() : info_;
    }
    /**
     * <pre>
     * May be omitted in omitmeta
     * </pre>
     *
     * <code>optional .OSMPBF.Info info = 4;</code>
     */
    private void setInfo(de.topobyte.osm4j.pbf.protobuf.Osmformat.Info value) {
      value.getClass();
  info_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <pre>
     * May be omitted in omitmeta
     * </pre>
     *
     * <code>optional .OSMPBF.Info info = 4;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeInfo(de.topobyte.osm4j.pbf.protobuf.Osmformat.Info value) {
      value.getClass();
  if (info_ != null &&
          info_ != de.topobyte.osm4j.pbf.protobuf.Osmformat.Info.getDefaultInstance()) {
        info_ =
          de.topobyte.osm4j.pbf.protobuf.Osmformat.Info.newBuilder(info_).mergeFrom(value).buildPartial();
      } else {
        info_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <pre>
     * May be omitted in omitmeta
     * </pre>
     *
     * <code>optional .OSMPBF.Info info = 4;</code>
     */
    private void clearInfo() {  info_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int LAT_FIELD_NUMBER = 8;
    private long lat_;
    /**
     * <code>required sint64 lat = 8;</code>
     * @return Whether the lat field is set.
     */
    @java.lang.Override
    public boolean hasLat() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required sint64 lat = 8;</code>
     * @return The lat.
     */
    @java.lang.Override
    public long getLat() {
      return lat_;
    }
    /**
     * <code>required sint64 lat = 8;</code>
     * @param value The lat to set.
     */
    private void setLat(long value) {
      bitField0_ |= 0x00000004;
      lat_ = value;
    }
    /**
     * <code>required sint64 lat = 8;</code>
     */
    private void clearLat() {
      bitField0_ = (bitField0_ & ~0x00000004);
      lat_ = 0L;
    }

    public static final int LON_FIELD_NUMBER = 9;
    private long lon_;
    /**
     * <code>required sint64 lon = 9;</code>
     * @return Whether the lon field is set.
     */
    @java.lang.Override
    public boolean hasLon() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>required sint64 lon = 9;</code>
     * @return The lon.
     */
    @java.lang.Override
    public long getLon() {
      return lon_;
    }
    /**
     * <code>required sint64 lon = 9;</code>
     * @param value The lon to set.
     */
    private void setLon(long value) {
      bitField0_ |= 0x00000008;
      lon_ = value;
    }
    /**
     * <code>required sint64 lon = 9;</code>
     */
    private void clearLon() {
      bitField0_ = (bitField0_ & ~0x00000008);
      lon_ = 0L;
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Node parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Node parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Node parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Node parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Node parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Node parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Node parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Node parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Node parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Node parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Node parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Node parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(de.topobyte.osm4j.pbf.protobuf.Osmformat.Node prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code OSMPBF.Node}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.topobyte.osm4j.pbf.protobuf.Osmformat.Node, Builder> implements
        // @@protoc_insertion_point(builder_implements:OSMPBF.Node)
        de.topobyte.osm4j.pbf.protobuf.Osmformat.NodeOrBuilder {
      // Construct using de.topobyte.osm4j.pbf.protobuf.Osmformat.Node.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required sint64 id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return instance.hasId();
      }
      /**
       * <code>required sint64 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public long getId() {
        return instance.getId();
      }
      /**
       * <code>required sint64 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <code>required sint64 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }

      /**
       * <pre>
       * Parallel arrays.
       * </pre>
       *
       * <code>repeated uint32 keys = 2 [packed = true];</code>
       * @return A list containing the keys.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getKeysList() {
        return java.util.Collections.unmodifiableList(
            instance.getKeysList());
      }
      /**
       * <pre>
       * Parallel arrays.
       * </pre>
       *
       * <code>repeated uint32 keys = 2 [packed = true];</code>
       * @return The count of keys.
       */
      @java.lang.Override
      public int getKeysCount() {
        return instance.getKeysCount();
      }
      /**
       * <pre>
       * Parallel arrays.
       * </pre>
       *
       * <code>repeated uint32 keys = 2 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The keys at the given index.
       */
      @java.lang.Override
      public int getKeys(int index) {
        return instance.getKeys(index);
      }
      /**
       * <pre>
       * Parallel arrays.
       * </pre>
       *
       * <code>repeated uint32 keys = 2 [packed = true];</code>
       * @param value The keys to set.
       * @return This builder for chaining.
       */
      public Builder setKeys(
          int index, int value) {
        copyOnWrite();
        instance.setKeys(index, value);
        return this;
      }
      /**
       * <pre>
       * Parallel arrays.
       * </pre>
       *
       * <code>repeated uint32 keys = 2 [packed = true];</code>
       * @param value The keys to add.
       * @return This builder for chaining.
       */
      public Builder addKeys(int value) {
        copyOnWrite();
        instance.addKeys(value);
        return this;
      }
      /**
       * <pre>
       * Parallel arrays.
       * </pre>
       *
       * <code>repeated uint32 keys = 2 [packed = true];</code>
       * @param values The keys to add.
       * @return This builder for chaining.
       */
      public Builder addAllKeys(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllKeys(values);
        return this;
      }
      /**
       * <pre>
       * Parallel arrays.
       * </pre>
       *
       * <code>repeated uint32 keys = 2 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearKeys() {
        copyOnWrite();
        instance.clearKeys();
        return this;
      }

      /**
       * <pre>
       * String IDs.
       * </pre>
       *
       * <code>repeated uint32 vals = 3 [packed = true];</code>
       * @return A list containing the vals.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getValsList() {
        return java.util.Collections.unmodifiableList(
            instance.getValsList());
      }
      /**
       * <pre>
       * String IDs.
       * </pre>
       *
       * <code>repeated uint32 vals = 3 [packed = true];</code>
       * @return The count of vals.
       */
      @java.lang.Override
      public int getValsCount() {
        return instance.getValsCount();
      }
      /**
       * <pre>
       * String IDs.
       * </pre>
       *
       * <code>repeated uint32 vals = 3 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The vals at the given index.
       */
      @java.lang.Override
      public int getVals(int index) {
        return instance.getVals(index);
      }
      /**
       * <pre>
       * String IDs.
       * </pre>
       *
       * <code>repeated uint32 vals = 3 [packed = true];</code>
       * @param value The vals to set.
       * @return This builder for chaining.
       */
      public Builder setVals(
          int index, int value) {
        copyOnWrite();
        instance.setVals(index, value);
        return this;
      }
      /**
       * <pre>
       * String IDs.
       * </pre>
       *
       * <code>repeated uint32 vals = 3 [packed = true];</code>
       * @param value The vals to add.
       * @return This builder for chaining.
       */
      public Builder addVals(int value) {
        copyOnWrite();
        instance.addVals(value);
        return this;
      }
      /**
       * <pre>
       * String IDs.
       * </pre>
       *
       * <code>repeated uint32 vals = 3 [packed = true];</code>
       * @param values The vals to add.
       * @return This builder for chaining.
       */
      public Builder addAllVals(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllVals(values);
        return this;
      }
      /**
       * <pre>
       * String IDs.
       * </pre>
       *
       * <code>repeated uint32 vals = 3 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearVals() {
        copyOnWrite();
        instance.clearVals();
        return this;
      }

      /**
       * <pre>
       * May be omitted in omitmeta
       * </pre>
       *
       * <code>optional .OSMPBF.Info info = 4;</code>
       */
      @java.lang.Override
      public boolean hasInfo() {
        return instance.hasInfo();
      }
      /**
       * <pre>
       * May be omitted in omitmeta
       * </pre>
       *
       * <code>optional .OSMPBF.Info info = 4;</code>
       */
      @java.lang.Override
      public de.topobyte.osm4j.pbf.protobuf.Osmformat.Info getInfo() {
        return instance.getInfo();
      }
      /**
       * <pre>
       * May be omitted in omitmeta
       * </pre>
       *
       * <code>optional .OSMPBF.Info info = 4;</code>
       */
      public Builder setInfo(de.topobyte.osm4j.pbf.protobuf.Osmformat.Info value) {
        copyOnWrite();
        instance.setInfo(value);
        return this;
        }
      /**
       * <pre>
       * May be omitted in omitmeta
       * </pre>
       *
       * <code>optional .OSMPBF.Info info = 4;</code>
       */
      public Builder setInfo(
          de.topobyte.osm4j.pbf.protobuf.Osmformat.Info.Builder builderForValue) {
        copyOnWrite();
        instance.setInfo(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       * May be omitted in omitmeta
       * </pre>
       *
       * <code>optional .OSMPBF.Info info = 4;</code>
       */
      public Builder mergeInfo(de.topobyte.osm4j.pbf.protobuf.Osmformat.Info value) {
        copyOnWrite();
        instance.mergeInfo(value);
        return this;
      }
      /**
       * <pre>
       * May be omitted in omitmeta
       * </pre>
       *
       * <code>optional .OSMPBF.Info info = 4;</code>
       */
      public Builder clearInfo() {  copyOnWrite();
        instance.clearInfo();
        return this;
      }

      /**
       * <code>required sint64 lat = 8;</code>
       * @return Whether the lat field is set.
       */
      @java.lang.Override
      public boolean hasLat() {
        return instance.hasLat();
      }
      /**
       * <code>required sint64 lat = 8;</code>
       * @return The lat.
       */
      @java.lang.Override
      public long getLat() {
        return instance.getLat();
      }
      /**
       * <code>required sint64 lat = 8;</code>
       * @param value The lat to set.
       * @return This builder for chaining.
       */
      public Builder setLat(long value) {
        copyOnWrite();
        instance.setLat(value);
        return this;
      }
      /**
       * <code>required sint64 lat = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearLat() {
        copyOnWrite();
        instance.clearLat();
        return this;
      }

      /**
       * <code>required sint64 lon = 9;</code>
       * @return Whether the lon field is set.
       */
      @java.lang.Override
      public boolean hasLon() {
        return instance.hasLon();
      }
      /**
       * <code>required sint64 lon = 9;</code>
       * @return The lon.
       */
      @java.lang.Override
      public long getLon() {
        return instance.getLon();
      }
      /**
       * <code>required sint64 lon = 9;</code>
       * @param value The lon to set.
       * @return This builder for chaining.
       */
      public Builder setLon(long value) {
        copyOnWrite();
        instance.setLon(value);
        return this;
      }
      /**
       * <code>required sint64 lon = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearLon() {
        copyOnWrite();
        instance.clearLon();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OSMPBF.Node)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.topobyte.osm4j.pbf.protobuf.Osmformat.Node();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "id_",
              "keys_",
              "vals_",
              "info_",
              "lat_",
              "lon_",
            };
            java.lang.String info =
                "\u0001\u0006\u0000\u0001\u0001\t\u0006\u0000\u0002\u0003\u0001\u1510\u0000\u0002" +
                "+\u0003+\u0004\u1009\u0001\b\u1510\u0002\t\u1510\u0003";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<de.topobyte.osm4j.pbf.protobuf.Osmformat.Node> parser = PARSER;
          if (parser == null) {
            synchronized (de.topobyte.osm4j.pbf.protobuf.Osmformat.Node.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<de.topobyte.osm4j.pbf.protobuf.Osmformat.Node>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:OSMPBF.Node)
    private static final de.topobyte.osm4j.pbf.protobuf.Osmformat.Node DEFAULT_INSTANCE;
    static {
      Node defaultInstance = new Node();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Node.class, defaultInstance);
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Node getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Node> PARSER;

    public static com.google.protobuf.Parser<Node> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface DenseNodesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:OSMPBF.DenseNodes)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 id = 1 [packed = true];</code>
     * @return A list containing the id.
     */
    java.util.List<java.lang.Long> getIdList();
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 id = 1 [packed = true];</code>
     * @return The count of id.
     */
    int getIdCount();
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 id = 1 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The id at the given index.
     */
    long getId(int index);

    /**
     * <pre>
     *repeated Info info = 4;
     * </pre>
     *
     * <code>optional .OSMPBF.DenseInfo denseinfo = 5;</code>
     * @return Whether the denseinfo field is set.
     */
    boolean hasDenseinfo();
    /**
     * <pre>
     *repeated Info info = 4;
     * </pre>
     *
     * <code>optional .OSMPBF.DenseInfo denseinfo = 5;</code>
     * @return The denseinfo.
     */
    de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo getDenseinfo();

    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 lat = 8 [packed = true];</code>
     * @return A list containing the lat.
     */
    java.util.List<java.lang.Long> getLatList();
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 lat = 8 [packed = true];</code>
     * @return The count of lat.
     */
    int getLatCount();
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 lat = 8 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The lat at the given index.
     */
    long getLat(int index);

    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 lon = 9 [packed = true];</code>
     * @return A list containing the lon.
     */
    java.util.List<java.lang.Long> getLonList();
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 lon = 9 [packed = true];</code>
     * @return The count of lon.
     */
    int getLonCount();
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 lon = 9 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The lon at the given index.
     */
    long getLon(int index);

    /**
     * <pre>
     * Special packing of keys and vals into one array. May be empty if all nodes in this block are tagless.
     * </pre>
     *
     * <code>repeated int32 keys_vals = 10 [packed = true];</code>
     * @return A list containing the keysVals.
     */
    java.util.List<java.lang.Integer> getKeysValsList();
    /**
     * <pre>
     * Special packing of keys and vals into one array. May be empty if all nodes in this block are tagless.
     * </pre>
     *
     * <code>repeated int32 keys_vals = 10 [packed = true];</code>
     * @return The count of keysVals.
     */
    int getKeysValsCount();
    /**
     * <pre>
     * Special packing of keys and vals into one array. May be empty if all nodes in this block are tagless.
     * </pre>
     *
     * <code>repeated int32 keys_vals = 10 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The keysVals at the given index.
     */
    int getKeysVals(int index);
  }
  /**
   * Protobuf type {@code OSMPBF.DenseNodes}
   */
  public  static final class DenseNodes extends
      com.google.protobuf.GeneratedMessageLite<
          DenseNodes, DenseNodes.Builder> implements
      // @@protoc_insertion_point(message_implements:OSMPBF.DenseNodes)
      DenseNodesOrBuilder {
    private DenseNodes() {
      id_ = emptyLongList();
      lat_ = emptyLongList();
      lon_ = emptyLongList();
      keysVals_ = emptyIntList();
    }
    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.LongList id_;
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 id = 1 [packed = true];</code>
     * @return A list containing the id.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getIdList() {
      return id_;
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 id = 1 [packed = true];</code>
     * @return The count of id.
     */
    @java.lang.Override
    public int getIdCount() {
      return id_.size();
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 id = 1 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The id at the given index.
     */
    @java.lang.Override
    public long getId(int index) {
      return id_.getLong(index);
    }
    private int idMemoizedSerializedSize = -1;
    private void ensureIdIsMutable() {
      com.google.protobuf.Internal.LongList tmp = id_;
      if (!tmp.isModifiable()) {
        id_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 id = 1 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The id to set.
     */
    private void setId(
        int index, long value) {
      ensureIdIsMutable();
      id_.setLong(index, value);
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 id = 1 [packed = true];</code>
     * @param value The id to add.
     */
    private void addId(long value) {
      ensureIdIsMutable();
      id_.addLong(value);
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 id = 1 [packed = true];</code>
     * @param values The id to add.
     */
    private void addAllId(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureIdIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, id_);
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 id = 1 [packed = true];</code>
     */
    private void clearId() {
      id_ = emptyLongList();
    }

    public static final int DENSEINFO_FIELD_NUMBER = 5;
    private de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo denseinfo_;
    /**
     * <pre>
     *repeated Info info = 4;
     * </pre>
     *
     * <code>optional .OSMPBF.DenseInfo denseinfo = 5;</code>
     */
    @java.lang.Override
    public boolean hasDenseinfo() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     *repeated Info info = 4;
     * </pre>
     *
     * <code>optional .OSMPBF.DenseInfo denseinfo = 5;</code>
     */
    @java.lang.Override
    public de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo getDenseinfo() {
      return denseinfo_ == null ? de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo.getDefaultInstance() : denseinfo_;
    }
    /**
     * <pre>
     *repeated Info info = 4;
     * </pre>
     *
     * <code>optional .OSMPBF.DenseInfo denseinfo = 5;</code>
     */
    private void setDenseinfo(de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo value) {
      value.getClass();
  denseinfo_ = value;
      bitField0_ |= 0x00000001;
      }
    /**
     * <pre>
     *repeated Info info = 4;
     * </pre>
     *
     * <code>optional .OSMPBF.DenseInfo denseinfo = 5;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeDenseinfo(de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo value) {
      value.getClass();
  if (denseinfo_ != null &&
          denseinfo_ != de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo.getDefaultInstance()) {
        denseinfo_ =
          de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo.newBuilder(denseinfo_).mergeFrom(value).buildPartial();
      } else {
        denseinfo_ = value;
      }
      bitField0_ |= 0x00000001;
    }
    /**
     * <pre>
     *repeated Info info = 4;
     * </pre>
     *
     * <code>optional .OSMPBF.DenseInfo denseinfo = 5;</code>
     */
    private void clearDenseinfo() {  denseinfo_ = null;
      bitField0_ = (bitField0_ & ~0x00000001);
    }

    public static final int LAT_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.LongList lat_;
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 lat = 8 [packed = true];</code>
     * @return A list containing the lat.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getLatList() {
      return lat_;
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 lat = 8 [packed = true];</code>
     * @return The count of lat.
     */
    @java.lang.Override
    public int getLatCount() {
      return lat_.size();
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 lat = 8 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The lat at the given index.
     */
    @java.lang.Override
    public long getLat(int index) {
      return lat_.getLong(index);
    }
    private int latMemoizedSerializedSize = -1;
    private void ensureLatIsMutable() {
      com.google.protobuf.Internal.LongList tmp = lat_;
      if (!tmp.isModifiable()) {
        lat_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 lat = 8 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The lat to set.
     */
    private void setLat(
        int index, long value) {
      ensureLatIsMutable();
      lat_.setLong(index, value);
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 lat = 8 [packed = true];</code>
     * @param value The lat to add.
     */
    private void addLat(long value) {
      ensureLatIsMutable();
      lat_.addLong(value);
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 lat = 8 [packed = true];</code>
     * @param values The lat to add.
     */
    private void addAllLat(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureLatIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, lat_);
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 lat = 8 [packed = true];</code>
     */
    private void clearLat() {
      lat_ = emptyLongList();
    }

    public static final int LON_FIELD_NUMBER = 9;
    private com.google.protobuf.Internal.LongList lon_;
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 lon = 9 [packed = true];</code>
     * @return A list containing the lon.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getLonList() {
      return lon_;
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 lon = 9 [packed = true];</code>
     * @return The count of lon.
     */
    @java.lang.Override
    public int getLonCount() {
      return lon_.size();
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 lon = 9 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The lon at the given index.
     */
    @java.lang.Override
    public long getLon(int index) {
      return lon_.getLong(index);
    }
    private int lonMemoizedSerializedSize = -1;
    private void ensureLonIsMutable() {
      com.google.protobuf.Internal.LongList tmp = lon_;
      if (!tmp.isModifiable()) {
        lon_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 lon = 9 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The lon to set.
     */
    private void setLon(
        int index, long value) {
      ensureLonIsMutable();
      lon_.setLong(index, value);
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 lon = 9 [packed = true];</code>
     * @param value The lon to add.
     */
    private void addLon(long value) {
      ensureLonIsMutable();
      lon_.addLong(value);
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 lon = 9 [packed = true];</code>
     * @param values The lon to add.
     */
    private void addAllLon(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureLonIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, lon_);
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 lon = 9 [packed = true];</code>
     */
    private void clearLon() {
      lon_ = emptyLongList();
    }

    public static final int KEYS_VALS_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.IntList keysVals_;
    /**
     * <pre>
     * Special packing of keys and vals into one array. May be empty if all nodes in this block are tagless.
     * </pre>
     *
     * <code>repeated int32 keys_vals = 10 [packed = true];</code>
     * @return A list containing the keysVals.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getKeysValsList() {
      return keysVals_;
    }
    /**
     * <pre>
     * Special packing of keys and vals into one array. May be empty if all nodes in this block are tagless.
     * </pre>
     *
     * <code>repeated int32 keys_vals = 10 [packed = true];</code>
     * @return The count of keysVals.
     */
    @java.lang.Override
    public int getKeysValsCount() {
      return keysVals_.size();
    }
    /**
     * <pre>
     * Special packing of keys and vals into one array. May be empty if all nodes in this block are tagless.
     * </pre>
     *
     * <code>repeated int32 keys_vals = 10 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The keysVals at the given index.
     */
    @java.lang.Override
    public int getKeysVals(int index) {
      return keysVals_.getInt(index);
    }
    private int keysValsMemoizedSerializedSize = -1;
    private void ensureKeysValsIsMutable() {
      com.google.protobuf.Internal.IntList tmp = keysVals_;
      if (!tmp.isModifiable()) {
        keysVals_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * Special packing of keys and vals into one array. May be empty if all nodes in this block are tagless.
     * </pre>
     *
     * <code>repeated int32 keys_vals = 10 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The keysVals to set.
     */
    private void setKeysVals(
        int index, int value) {
      ensureKeysValsIsMutable();
      keysVals_.setInt(index, value);
    }
    /**
     * <pre>
     * Special packing of keys and vals into one array. May be empty if all nodes in this block are tagless.
     * </pre>
     *
     * <code>repeated int32 keys_vals = 10 [packed = true];</code>
     * @param value The keysVals to add.
     */
    private void addKeysVals(int value) {
      ensureKeysValsIsMutable();
      keysVals_.addInt(value);
    }
    /**
     * <pre>
     * Special packing of keys and vals into one array. May be empty if all nodes in this block are tagless.
     * </pre>
     *
     * <code>repeated int32 keys_vals = 10 [packed = true];</code>
     * @param values The keysVals to add.
     */
    private void addAllKeysVals(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureKeysValsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, keysVals_);
    }
    /**
     * <pre>
     * Special packing of keys and vals into one array. May be empty if all nodes in this block are tagless.
     * </pre>
     *
     * <code>repeated int32 keys_vals = 10 [packed = true];</code>
     */
    private void clearKeysVals() {
      keysVals_ = emptyIntList();
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code OSMPBF.DenseNodes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes, Builder> implements
        // @@protoc_insertion_point(builder_implements:OSMPBF.DenseNodes)
        de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodesOrBuilder {
      // Construct using de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 id = 1 [packed = true];</code>
       * @return A list containing the id.
       */
      @java.lang.Override
      public java.util.List<java.lang.Long>
          getIdList() {
        return java.util.Collections.unmodifiableList(
            instance.getIdList());
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 id = 1 [packed = true];</code>
       * @return The count of id.
       */
      @java.lang.Override
      public int getIdCount() {
        return instance.getIdCount();
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 id = 1 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The id at the given index.
       */
      @java.lang.Override
      public long getId(int index) {
        return instance.getId(index);
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 id = 1 [packed = true];</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(
          int index, long value) {
        copyOnWrite();
        instance.setId(index, value);
        return this;
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 id = 1 [packed = true];</code>
       * @param value The id to add.
       * @return This builder for chaining.
       */
      public Builder addId(long value) {
        copyOnWrite();
        instance.addId(value);
        return this;
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 id = 1 [packed = true];</code>
       * @param values The id to add.
       * @return This builder for chaining.
       */
      public Builder addAllId(
          java.lang.Iterable<? extends java.lang.Long> values) {
        copyOnWrite();
        instance.addAllId(values);
        return this;
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 id = 1 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }

      /**
       * <pre>
       *repeated Info info = 4;
       * </pre>
       *
       * <code>optional .OSMPBF.DenseInfo denseinfo = 5;</code>
       */
      @java.lang.Override
      public boolean hasDenseinfo() {
        return instance.hasDenseinfo();
      }
      /**
       * <pre>
       *repeated Info info = 4;
       * </pre>
       *
       * <code>optional .OSMPBF.DenseInfo denseinfo = 5;</code>
       */
      @java.lang.Override
      public de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo getDenseinfo() {
        return instance.getDenseinfo();
      }
      /**
       * <pre>
       *repeated Info info = 4;
       * </pre>
       *
       * <code>optional .OSMPBF.DenseInfo denseinfo = 5;</code>
       */
      public Builder setDenseinfo(de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo value) {
        copyOnWrite();
        instance.setDenseinfo(value);
        return this;
        }
      /**
       * <pre>
       *repeated Info info = 4;
       * </pre>
       *
       * <code>optional .OSMPBF.DenseInfo denseinfo = 5;</code>
       */
      public Builder setDenseinfo(
          de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo.Builder builderForValue) {
        copyOnWrite();
        instance.setDenseinfo(builderForValue.build());
        return this;
      }
      /**
       * <pre>
       *repeated Info info = 4;
       * </pre>
       *
       * <code>optional .OSMPBF.DenseInfo denseinfo = 5;</code>
       */
      public Builder mergeDenseinfo(de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseInfo value) {
        copyOnWrite();
        instance.mergeDenseinfo(value);
        return this;
      }
      /**
       * <pre>
       *repeated Info info = 4;
       * </pre>
       *
       * <code>optional .OSMPBF.DenseInfo denseinfo = 5;</code>
       */
      public Builder clearDenseinfo() {  copyOnWrite();
        instance.clearDenseinfo();
        return this;
      }

      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 lat = 8 [packed = true];</code>
       * @return A list containing the lat.
       */
      @java.lang.Override
      public java.util.List<java.lang.Long>
          getLatList() {
        return java.util.Collections.unmodifiableList(
            instance.getLatList());
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 lat = 8 [packed = true];</code>
       * @return The count of lat.
       */
      @java.lang.Override
      public int getLatCount() {
        return instance.getLatCount();
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 lat = 8 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The lat at the given index.
       */
      @java.lang.Override
      public long getLat(int index) {
        return instance.getLat(index);
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 lat = 8 [packed = true];</code>
       * @param value The lat to set.
       * @return This builder for chaining.
       */
      public Builder setLat(
          int index, long value) {
        copyOnWrite();
        instance.setLat(index, value);
        return this;
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 lat = 8 [packed = true];</code>
       * @param value The lat to add.
       * @return This builder for chaining.
       */
      public Builder addLat(long value) {
        copyOnWrite();
        instance.addLat(value);
        return this;
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 lat = 8 [packed = true];</code>
       * @param values The lat to add.
       * @return This builder for chaining.
       */
      public Builder addAllLat(
          java.lang.Iterable<? extends java.lang.Long> values) {
        copyOnWrite();
        instance.addAllLat(values);
        return this;
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 lat = 8 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearLat() {
        copyOnWrite();
        instance.clearLat();
        return this;
      }

      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 lon = 9 [packed = true];</code>
       * @return A list containing the lon.
       */
      @java.lang.Override
      public java.util.List<java.lang.Long>
          getLonList() {
        return java.util.Collections.unmodifiableList(
            instance.getLonList());
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 lon = 9 [packed = true];</code>
       * @return The count of lon.
       */
      @java.lang.Override
      public int getLonCount() {
        return instance.getLonCount();
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 lon = 9 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The lon at the given index.
       */
      @java.lang.Override
      public long getLon(int index) {
        return instance.getLon(index);
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 lon = 9 [packed = true];</code>
       * @param value The lon to set.
       * @return This builder for chaining.
       */
      public Builder setLon(
          int index, long value) {
        copyOnWrite();
        instance.setLon(index, value);
        return this;
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 lon = 9 [packed = true];</code>
       * @param value The lon to add.
       * @return This builder for chaining.
       */
      public Builder addLon(long value) {
        copyOnWrite();
        instance.addLon(value);
        return this;
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 lon = 9 [packed = true];</code>
       * @param values The lon to add.
       * @return This builder for chaining.
       */
      public Builder addAllLon(
          java.lang.Iterable<? extends java.lang.Long> values) {
        copyOnWrite();
        instance.addAllLon(values);
        return this;
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 lon = 9 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearLon() {
        copyOnWrite();
        instance.clearLon();
        return this;
      }

      /**
       * <pre>
       * Special packing of keys and vals into one array. May be empty if all nodes in this block are tagless.
       * </pre>
       *
       * <code>repeated int32 keys_vals = 10 [packed = true];</code>
       * @return A list containing the keysVals.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getKeysValsList() {
        return java.util.Collections.unmodifiableList(
            instance.getKeysValsList());
      }
      /**
       * <pre>
       * Special packing of keys and vals into one array. May be empty if all nodes in this block are tagless.
       * </pre>
       *
       * <code>repeated int32 keys_vals = 10 [packed = true];</code>
       * @return The count of keysVals.
       */
      @java.lang.Override
      public int getKeysValsCount() {
        return instance.getKeysValsCount();
      }
      /**
       * <pre>
       * Special packing of keys and vals into one array. May be empty if all nodes in this block are tagless.
       * </pre>
       *
       * <code>repeated int32 keys_vals = 10 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The keysVals at the given index.
       */
      @java.lang.Override
      public int getKeysVals(int index) {
        return instance.getKeysVals(index);
      }
      /**
       * <pre>
       * Special packing of keys and vals into one array. May be empty if all nodes in this block are tagless.
       * </pre>
       *
       * <code>repeated int32 keys_vals = 10 [packed = true];</code>
       * @param value The keysVals to set.
       * @return This builder for chaining.
       */
      public Builder setKeysVals(
          int index, int value) {
        copyOnWrite();
        instance.setKeysVals(index, value);
        return this;
      }
      /**
       * <pre>
       * Special packing of keys and vals into one array. May be empty if all nodes in this block are tagless.
       * </pre>
       *
       * <code>repeated int32 keys_vals = 10 [packed = true];</code>
       * @param value The keysVals to add.
       * @return This builder for chaining.
       */
      public Builder addKeysVals(int value) {
        copyOnWrite();
        instance.addKeysVals(value);
        return this;
      }
      /**
       * <pre>
       * Special packing of keys and vals into one array. May be empty if all nodes in this block are tagless.
       * </pre>
       *
       * <code>repeated int32 keys_vals = 10 [packed = true];</code>
       * @param values The keysVals to add.
       * @return This builder for chaining.
       */
      public Builder addAllKeysVals(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllKeysVals(values);
        return this;
      }
      /**
       * <pre>
       * Special packing of keys and vals into one array. May be empty if all nodes in this block are tagless.
       * </pre>
       *
       * <code>repeated int32 keys_vals = 10 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearKeysVals() {
        copyOnWrite();
        instance.clearKeysVals();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OSMPBF.DenseNodes)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "id_",
              "denseinfo_",
              "lat_",
              "lon_",
              "keysVals_",
            };
            java.lang.String info =
                "\u0001\u0005\u0000\u0001\u0001\n\u0005\u0000\u0004\u0000\u00010\u0005\u1009\u0000" +
                "\b0\t0\n\'";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes> parser = PARSER;
          if (parser == null) {
            synchronized (de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:OSMPBF.DenseNodes)
    private static final de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes DEFAULT_INSTANCE;
    static {
      DenseNodes defaultInstance = new DenseNodes();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        DenseNodes.class, defaultInstance);
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.DenseNodes getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<DenseNodes> PARSER;

    public static com.google.protobuf.Parser<DenseNodes> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface WayOrBuilder extends
      // @@protoc_insertion_point(interface_extends:OSMPBF.Way)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int64 id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <code>required int64 id = 1;</code>
     * @return The id.
     */
    long getId();

    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @return A list containing the keys.
     */
    java.util.List<java.lang.Integer> getKeysList();
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @return The count of keys.
     */
    int getKeysCount();
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    int getKeys(int index);

    /**
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @return A list containing the vals.
     */
    java.util.List<java.lang.Integer> getValsList();
    /**
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @return The count of vals.
     */
    int getValsCount();
    /**
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The vals at the given index.
     */
    int getVals(int index);

    /**
     * <code>optional .OSMPBF.Info info = 4;</code>
     * @return Whether the info field is set.
     */
    boolean hasInfo();
    /**
     * <code>optional .OSMPBF.Info info = 4;</code>
     * @return The info.
     */
    de.topobyte.osm4j.pbf.protobuf.Osmformat.Info getInfo();

    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 refs = 8 [packed = true];</code>
     * @return A list containing the refs.
     */
    java.util.List<java.lang.Long> getRefsList();
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 refs = 8 [packed = true];</code>
     * @return The count of refs.
     */
    int getRefsCount();
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 refs = 8 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The refs at the given index.
     */
    long getRefs(int index);
  }
  /**
   * Protobuf type {@code OSMPBF.Way}
   */
  public  static final class Way extends
      com.google.protobuf.GeneratedMessageLite<
          Way, Way.Builder> implements
      // @@protoc_insertion_point(message_implements:OSMPBF.Way)
      WayOrBuilder {
    private Way() {
      keys_ = emptyIntList();
      vals_ = emptyIntList();
      refs_ = emptyLongList();
    }
    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required int64 id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int64 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public long getId() {
      return id_;
    }
    /**
     * <code>required int64 id = 1;</code>
     * @param value The id to set.
     */
    private void setId(long value) {
      bitField0_ |= 0x00000001;
      id_ = value;
    }
    /**
     * <code>required int64 id = 1;</code>
     */
    private void clearId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      id_ = 0L;
    }

    public static final int KEYS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList keys_;
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @return A list containing the keys.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getKeysList() {
      return keys_;
    }
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @return The count of keys.
     */
    @java.lang.Override
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    @java.lang.Override
    public int getKeys(int index) {
      return keys_.getInt(index);
    }
    private int keysMemoizedSerializedSize = -1;
    private void ensureKeysIsMutable() {
      com.google.protobuf.Internal.IntList tmp = keys_;
      if (!tmp.isModifiable()) {
        keys_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The keys to set.
     */
    private void setKeys(
        int index, int value) {
      ensureKeysIsMutable();
      keys_.setInt(index, value);
    }
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @param value The keys to add.
     */
    private void addKeys(int value) {
      ensureKeysIsMutable();
      keys_.addInt(value);
    }
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @param values The keys to add.
     */
    private void addAllKeys(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureKeysIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, keys_);
    }
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     */
    private void clearKeys() {
      keys_ = emptyIntList();
    }

    public static final int VALS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList vals_;
    /**
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @return A list containing the vals.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getValsList() {
      return vals_;
    }
    /**
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @return The count of vals.
     */
    @java.lang.Override
    public int getValsCount() {
      return vals_.size();
    }
    /**
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The vals at the given index.
     */
    @java.lang.Override
    public int getVals(int index) {
      return vals_.getInt(index);
    }
    private int valsMemoizedSerializedSize = -1;
    private void ensureValsIsMutable() {
      com.google.protobuf.Internal.IntList tmp = vals_;
      if (!tmp.isModifiable()) {
        vals_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The vals to set.
     */
    private void setVals(
        int index, int value) {
      ensureValsIsMutable();
      vals_.setInt(index, value);
    }
    /**
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @param value The vals to add.
     */
    private void addVals(int value) {
      ensureValsIsMutable();
      vals_.addInt(value);
    }
    /**
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @param values The vals to add.
     */
    private void addAllVals(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureValsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, vals_);
    }
    /**
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     */
    private void clearVals() {
      vals_ = emptyIntList();
    }

    public static final int INFO_FIELD_NUMBER = 4;
    private de.topobyte.osm4j.pbf.protobuf.Osmformat.Info info_;
    /**
     * <code>optional .OSMPBF.Info info = 4;</code>
     */
    @java.lang.Override
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .OSMPBF.Info info = 4;</code>
     */
    @java.lang.Override
    public de.topobyte.osm4j.pbf.protobuf.Osmformat.Info getInfo() {
      return info_ == null ? de.topobyte.osm4j.pbf.protobuf.Osmformat.Info.getDefaultInstance() : info_;
    }
    /**
     * <code>optional .OSMPBF.Info info = 4;</code>
     */
    private void setInfo(de.topobyte.osm4j.pbf.protobuf.Osmformat.Info value) {
      value.getClass();
  info_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>optional .OSMPBF.Info info = 4;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeInfo(de.topobyte.osm4j.pbf.protobuf.Osmformat.Info value) {
      value.getClass();
  if (info_ != null &&
          info_ != de.topobyte.osm4j.pbf.protobuf.Osmformat.Info.getDefaultInstance()) {
        info_ =
          de.topobyte.osm4j.pbf.protobuf.Osmformat.Info.newBuilder(info_).mergeFrom(value).buildPartial();
      } else {
        info_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .OSMPBF.Info info = 4;</code>
     */
    private void clearInfo() {  info_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int REFS_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.LongList refs_;
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 refs = 8 [packed = true];</code>
     * @return A list containing the refs.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getRefsList() {
      return refs_;
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 refs = 8 [packed = true];</code>
     * @return The count of refs.
     */
    @java.lang.Override
    public int getRefsCount() {
      return refs_.size();
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 refs = 8 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The refs at the given index.
     */
    @java.lang.Override
    public long getRefs(int index) {
      return refs_.getLong(index);
    }
    private int refsMemoizedSerializedSize = -1;
    private void ensureRefsIsMutable() {
      com.google.protobuf.Internal.LongList tmp = refs_;
      if (!tmp.isModifiable()) {
        refs_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 refs = 8 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The refs to set.
     */
    private void setRefs(
        int index, long value) {
      ensureRefsIsMutable();
      refs_.setLong(index, value);
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 refs = 8 [packed = true];</code>
     * @param value The refs to add.
     */
    private void addRefs(long value) {
      ensureRefsIsMutable();
      refs_.addLong(value);
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 refs = 8 [packed = true];</code>
     * @param values The refs to add.
     */
    private void addAllRefs(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureRefsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, refs_);
    }
    /**
     * <pre>
     * DELTA coded
     * </pre>
     *
     * <code>repeated sint64 refs = 8 [packed = true];</code>
     */
    private void clearRefs() {
      refs_ = emptyLongList();
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Way parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Way parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Way parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Way parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Way parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Way parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Way parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Way parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Way parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Way parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Way parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Way parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(de.topobyte.osm4j.pbf.protobuf.Osmformat.Way prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code OSMPBF.Way}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.topobyte.osm4j.pbf.protobuf.Osmformat.Way, Builder> implements
        // @@protoc_insertion_point(builder_implements:OSMPBF.Way)
        de.topobyte.osm4j.pbf.protobuf.Osmformat.WayOrBuilder {
      // Construct using de.topobyte.osm4j.pbf.protobuf.Osmformat.Way.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int64 id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return instance.hasId();
      }
      /**
       * <code>required int64 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public long getId() {
        return instance.getId();
      }
      /**
       * <code>required int64 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <code>required int64 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }

      /**
       * <pre>
       * Parallel arrays.
       * </pre>
       *
       * <code>repeated uint32 keys = 2 [packed = true];</code>
       * @return A list containing the keys.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getKeysList() {
        return java.util.Collections.unmodifiableList(
            instance.getKeysList());
      }
      /**
       * <pre>
       * Parallel arrays.
       * </pre>
       *
       * <code>repeated uint32 keys = 2 [packed = true];</code>
       * @return The count of keys.
       */
      @java.lang.Override
      public int getKeysCount() {
        return instance.getKeysCount();
      }
      /**
       * <pre>
       * Parallel arrays.
       * </pre>
       *
       * <code>repeated uint32 keys = 2 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The keys at the given index.
       */
      @java.lang.Override
      public int getKeys(int index) {
        return instance.getKeys(index);
      }
      /**
       * <pre>
       * Parallel arrays.
       * </pre>
       *
       * <code>repeated uint32 keys = 2 [packed = true];</code>
       * @param value The keys to set.
       * @return This builder for chaining.
       */
      public Builder setKeys(
          int index, int value) {
        copyOnWrite();
        instance.setKeys(index, value);
        return this;
      }
      /**
       * <pre>
       * Parallel arrays.
       * </pre>
       *
       * <code>repeated uint32 keys = 2 [packed = true];</code>
       * @param value The keys to add.
       * @return This builder for chaining.
       */
      public Builder addKeys(int value) {
        copyOnWrite();
        instance.addKeys(value);
        return this;
      }
      /**
       * <pre>
       * Parallel arrays.
       * </pre>
       *
       * <code>repeated uint32 keys = 2 [packed = true];</code>
       * @param values The keys to add.
       * @return This builder for chaining.
       */
      public Builder addAllKeys(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllKeys(values);
        return this;
      }
      /**
       * <pre>
       * Parallel arrays.
       * </pre>
       *
       * <code>repeated uint32 keys = 2 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearKeys() {
        copyOnWrite();
        instance.clearKeys();
        return this;
      }

      /**
       * <code>repeated uint32 vals = 3 [packed = true];</code>
       * @return A list containing the vals.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getValsList() {
        return java.util.Collections.unmodifiableList(
            instance.getValsList());
      }
      /**
       * <code>repeated uint32 vals = 3 [packed = true];</code>
       * @return The count of vals.
       */
      @java.lang.Override
      public int getValsCount() {
        return instance.getValsCount();
      }
      /**
       * <code>repeated uint32 vals = 3 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The vals at the given index.
       */
      @java.lang.Override
      public int getVals(int index) {
        return instance.getVals(index);
      }
      /**
       * <code>repeated uint32 vals = 3 [packed = true];</code>
       * @param value The vals to set.
       * @return This builder for chaining.
       */
      public Builder setVals(
          int index, int value) {
        copyOnWrite();
        instance.setVals(index, value);
        return this;
      }
      /**
       * <code>repeated uint32 vals = 3 [packed = true];</code>
       * @param value The vals to add.
       * @return This builder for chaining.
       */
      public Builder addVals(int value) {
        copyOnWrite();
        instance.addVals(value);
        return this;
      }
      /**
       * <code>repeated uint32 vals = 3 [packed = true];</code>
       * @param values The vals to add.
       * @return This builder for chaining.
       */
      public Builder addAllVals(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllVals(values);
        return this;
      }
      /**
       * <code>repeated uint32 vals = 3 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearVals() {
        copyOnWrite();
        instance.clearVals();
        return this;
      }

      /**
       * <code>optional .OSMPBF.Info info = 4;</code>
       */
      @java.lang.Override
      public boolean hasInfo() {
        return instance.hasInfo();
      }
      /**
       * <code>optional .OSMPBF.Info info = 4;</code>
       */
      @java.lang.Override
      public de.topobyte.osm4j.pbf.protobuf.Osmformat.Info getInfo() {
        return instance.getInfo();
      }
      /**
       * <code>optional .OSMPBF.Info info = 4;</code>
       */
      public Builder setInfo(de.topobyte.osm4j.pbf.protobuf.Osmformat.Info value) {
        copyOnWrite();
        instance.setInfo(value);
        return this;
        }
      /**
       * <code>optional .OSMPBF.Info info = 4;</code>
       */
      public Builder setInfo(
          de.topobyte.osm4j.pbf.protobuf.Osmformat.Info.Builder builderForValue) {
        copyOnWrite();
        instance.setInfo(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .OSMPBF.Info info = 4;</code>
       */
      public Builder mergeInfo(de.topobyte.osm4j.pbf.protobuf.Osmformat.Info value) {
        copyOnWrite();
        instance.mergeInfo(value);
        return this;
      }
      /**
       * <code>optional .OSMPBF.Info info = 4;</code>
       */
      public Builder clearInfo() {  copyOnWrite();
        instance.clearInfo();
        return this;
      }

      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 refs = 8 [packed = true];</code>
       * @return A list containing the refs.
       */
      @java.lang.Override
      public java.util.List<java.lang.Long>
          getRefsList() {
        return java.util.Collections.unmodifiableList(
            instance.getRefsList());
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 refs = 8 [packed = true];</code>
       * @return The count of refs.
       */
      @java.lang.Override
      public int getRefsCount() {
        return instance.getRefsCount();
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 refs = 8 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The refs at the given index.
       */
      @java.lang.Override
      public long getRefs(int index) {
        return instance.getRefs(index);
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 refs = 8 [packed = true];</code>
       * @param value The refs to set.
       * @return This builder for chaining.
       */
      public Builder setRefs(
          int index, long value) {
        copyOnWrite();
        instance.setRefs(index, value);
        return this;
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 refs = 8 [packed = true];</code>
       * @param value The refs to add.
       * @return This builder for chaining.
       */
      public Builder addRefs(long value) {
        copyOnWrite();
        instance.addRefs(value);
        return this;
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 refs = 8 [packed = true];</code>
       * @param values The refs to add.
       * @return This builder for chaining.
       */
      public Builder addAllRefs(
          java.lang.Iterable<? extends java.lang.Long> values) {
        copyOnWrite();
        instance.addAllRefs(values);
        return this;
      }
      /**
       * <pre>
       * DELTA coded
       * </pre>
       *
       * <code>repeated sint64 refs = 8 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearRefs() {
        copyOnWrite();
        instance.clearRefs();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OSMPBF.Way)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.topobyte.osm4j.pbf.protobuf.Osmformat.Way();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "id_",
              "keys_",
              "vals_",
              "info_",
              "refs_",
            };
            java.lang.String info =
                "\u0001\u0005\u0000\u0001\u0001\b\u0005\u0000\u0003\u0001\u0001\u1502\u0000\u0002" +
                "+\u0003+\u0004\u1009\u0001\b0";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<de.topobyte.osm4j.pbf.protobuf.Osmformat.Way> parser = PARSER;
          if (parser == null) {
            synchronized (de.topobyte.osm4j.pbf.protobuf.Osmformat.Way.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<de.topobyte.osm4j.pbf.protobuf.Osmformat.Way>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:OSMPBF.Way)
    private static final de.topobyte.osm4j.pbf.protobuf.Osmformat.Way DEFAULT_INSTANCE;
    static {
      Way defaultInstance = new Way();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Way.class, defaultInstance);
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Way getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Way> PARSER;

    public static com.google.protobuf.Parser<Way> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface RelationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:OSMPBF.Relation)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required int64 id = 1;</code>
     * @return Whether the id field is set.
     */
    boolean hasId();
    /**
     * <code>required int64 id = 1;</code>
     * @return The id.
     */
    long getId();

    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @return A list containing the keys.
     */
    java.util.List<java.lang.Integer> getKeysList();
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @return The count of keys.
     */
    int getKeysCount();
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    int getKeys(int index);

    /**
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @return A list containing the vals.
     */
    java.util.List<java.lang.Integer> getValsList();
    /**
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @return The count of vals.
     */
    int getValsCount();
    /**
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The vals at the given index.
     */
    int getVals(int index);

    /**
     * <code>optional .OSMPBF.Info info = 4;</code>
     * @return Whether the info field is set.
     */
    boolean hasInfo();
    /**
     * <code>optional .OSMPBF.Info info = 4;</code>
     * @return The info.
     */
    de.topobyte.osm4j.pbf.protobuf.Osmformat.Info getInfo();

    /**
     * <pre>
     * Parallel arrays
     * </pre>
     *
     * <code>repeated int32 roles_sid = 8 [packed = true];</code>
     * @return A list containing the rolesSid.
     */
    java.util.List<java.lang.Integer> getRolesSidList();
    /**
     * <pre>
     * Parallel arrays
     * </pre>
     *
     * <code>repeated int32 roles_sid = 8 [packed = true];</code>
     * @return The count of rolesSid.
     */
    int getRolesSidCount();
    /**
     * <pre>
     * Parallel arrays
     * </pre>
     *
     * <code>repeated int32 roles_sid = 8 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The rolesSid at the given index.
     */
    int getRolesSid(int index);

    /**
     * <pre>
     * DELTA encoded
     * </pre>
     *
     * <code>repeated sint64 memids = 9 [packed = true];</code>
     * @return A list containing the memids.
     */
    java.util.List<java.lang.Long> getMemidsList();
    /**
     * <pre>
     * DELTA encoded
     * </pre>
     *
     * <code>repeated sint64 memids = 9 [packed = true];</code>
     * @return The count of memids.
     */
    int getMemidsCount();
    /**
     * <pre>
     * DELTA encoded
     * </pre>
     *
     * <code>repeated sint64 memids = 9 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The memids at the given index.
     */
    long getMemids(int index);

    /**
     * <code>repeated .OSMPBF.Relation.MemberType types = 10 [packed = true];</code>
     * @return A list containing the types.
     */
    java.util.List<de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType> getTypesList();
    /**
     * <code>repeated .OSMPBF.Relation.MemberType types = 10 [packed = true];</code>
     * @return The count of types.
     */
    int getTypesCount();
    /**
     * <code>repeated .OSMPBF.Relation.MemberType types = 10 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The types at the given index.
     */
    de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType getTypes(int index);
  }
  /**
   * Protobuf type {@code OSMPBF.Relation}
   */
  public  static final class Relation extends
      com.google.protobuf.GeneratedMessageLite<
          Relation, Relation.Builder> implements
      // @@protoc_insertion_point(message_implements:OSMPBF.Relation)
      RelationOrBuilder {
    private Relation() {
      keys_ = emptyIntList();
      vals_ = emptyIntList();
      rolesSid_ = emptyIntList();
      memids_ = emptyLongList();
      types_ = emptyIntList();
    }
    /**
     * Protobuf enum {@code OSMPBF.Relation.MemberType}
     */
    public enum MemberType
        implements com.google.protobuf.Internal.EnumLite {
      /**
       * <code>NODE = 0;</code>
       */
      NODE(0),
      /**
       * <code>WAY = 1;</code>
       */
      WAY(1),
      /**
       * <code>RELATION = 2;</code>
       */
      RELATION(2),
      ;

      /**
       * <code>NODE = 0;</code>
       */
      public static final int NODE_VALUE = 0;
      /**
       * <code>WAY = 1;</code>
       */
      public static final int WAY_VALUE = 1;
      /**
       * <code>RELATION = 2;</code>
       */
      public static final int RELATION_VALUE = 2;


      @java.lang.Override
      public final int getNumber() {
        return value;
      }

      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MemberType valueOf(int value) {
        return forNumber(value);
      }

      public static MemberType forNumber(int value) {
        switch (value) {
          case 0: return NODE;
          case 1: return WAY;
          case 2: return RELATION;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MemberType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          MemberType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MemberType>() {
              @java.lang.Override
              public MemberType findValueByNumber(int number) {
                return MemberType.forNumber(number);
              }
            };

      public static com.google.protobuf.Internal.EnumVerifier 
          internalGetVerifier() {
        return MemberTypeVerifier.INSTANCE;
      }

      private static final class MemberTypeVerifier implements 
           com.google.protobuf.Internal.EnumVerifier { 
              static final com.google.protobuf.Internal.EnumVerifier           INSTANCE = new MemberTypeVerifier();
              @java.lang.Override
              public boolean isInRange(int number) {
                return MemberType.forNumber(number) != null;
              }
            };

      private final int value;

      private MemberType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:OSMPBF.Relation.MemberType)
    }

    private int bitField0_;
    public static final int ID_FIELD_NUMBER = 1;
    private long id_;
    /**
     * <code>required int64 id = 1;</code>
     * @return Whether the id field is set.
     */
    @java.lang.Override
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required int64 id = 1;</code>
     * @return The id.
     */
    @java.lang.Override
    public long getId() {
      return id_;
    }
    /**
     * <code>required int64 id = 1;</code>
     * @param value The id to set.
     */
    private void setId(long value) {
      bitField0_ |= 0x00000001;
      id_ = value;
    }
    /**
     * <code>required int64 id = 1;</code>
     */
    private void clearId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      id_ = 0L;
    }

    public static final int KEYS_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList keys_;
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @return A list containing the keys.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getKeysList() {
      return keys_;
    }
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @return The count of keys.
     */
    @java.lang.Override
    public int getKeysCount() {
      return keys_.size();
    }
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The keys at the given index.
     */
    @java.lang.Override
    public int getKeys(int index) {
      return keys_.getInt(index);
    }
    private int keysMemoizedSerializedSize = -1;
    private void ensureKeysIsMutable() {
      com.google.protobuf.Internal.IntList tmp = keys_;
      if (!tmp.isModifiable()) {
        keys_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The keys to set.
     */
    private void setKeys(
        int index, int value) {
      ensureKeysIsMutable();
      keys_.setInt(index, value);
    }
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @param value The keys to add.
     */
    private void addKeys(int value) {
      ensureKeysIsMutable();
      keys_.addInt(value);
    }
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     * @param values The keys to add.
     */
    private void addAllKeys(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureKeysIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, keys_);
    }
    /**
     * <pre>
     * Parallel arrays.
     * </pre>
     *
     * <code>repeated uint32 keys = 2 [packed = true];</code>
     */
    private void clearKeys() {
      keys_ = emptyIntList();
    }

    public static final int VALS_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList vals_;
    /**
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @return A list containing the vals.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getValsList() {
      return vals_;
    }
    /**
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @return The count of vals.
     */
    @java.lang.Override
    public int getValsCount() {
      return vals_.size();
    }
    /**
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The vals at the given index.
     */
    @java.lang.Override
    public int getVals(int index) {
      return vals_.getInt(index);
    }
    private int valsMemoizedSerializedSize = -1;
    private void ensureValsIsMutable() {
      com.google.protobuf.Internal.IntList tmp = vals_;
      if (!tmp.isModifiable()) {
        vals_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The vals to set.
     */
    private void setVals(
        int index, int value) {
      ensureValsIsMutable();
      vals_.setInt(index, value);
    }
    /**
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @param value The vals to add.
     */
    private void addVals(int value) {
      ensureValsIsMutable();
      vals_.addInt(value);
    }
    /**
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     * @param values The vals to add.
     */
    private void addAllVals(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureValsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, vals_);
    }
    /**
     * <code>repeated uint32 vals = 3 [packed = true];</code>
     */
    private void clearVals() {
      vals_ = emptyIntList();
    }

    public static final int INFO_FIELD_NUMBER = 4;
    private de.topobyte.osm4j.pbf.protobuf.Osmformat.Info info_;
    /**
     * <code>optional .OSMPBF.Info info = 4;</code>
     */
    @java.lang.Override
    public boolean hasInfo() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .OSMPBF.Info info = 4;</code>
     */
    @java.lang.Override
    public de.topobyte.osm4j.pbf.protobuf.Osmformat.Info getInfo() {
      return info_ == null ? de.topobyte.osm4j.pbf.protobuf.Osmformat.Info.getDefaultInstance() : info_;
    }
    /**
     * <code>optional .OSMPBF.Info info = 4;</code>
     */
    private void setInfo(de.topobyte.osm4j.pbf.protobuf.Osmformat.Info value) {
      value.getClass();
  info_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>optional .OSMPBF.Info info = 4;</code>
     */
    @java.lang.SuppressWarnings({"ReferenceEquality"})
    private void mergeInfo(de.topobyte.osm4j.pbf.protobuf.Osmformat.Info value) {
      value.getClass();
  if (info_ != null &&
          info_ != de.topobyte.osm4j.pbf.protobuf.Osmformat.Info.getDefaultInstance()) {
        info_ =
          de.topobyte.osm4j.pbf.protobuf.Osmformat.Info.newBuilder(info_).mergeFrom(value).buildPartial();
      } else {
        info_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>optional .OSMPBF.Info info = 4;</code>
     */
    private void clearInfo() {  info_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int ROLES_SID_FIELD_NUMBER = 8;
    private com.google.protobuf.Internal.IntList rolesSid_;
    /**
     * <pre>
     * Parallel arrays
     * </pre>
     *
     * <code>repeated int32 roles_sid = 8 [packed = true];</code>
     * @return A list containing the rolesSid.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getRolesSidList() {
      return rolesSid_;
    }
    /**
     * <pre>
     * Parallel arrays
     * </pre>
     *
     * <code>repeated int32 roles_sid = 8 [packed = true];</code>
     * @return The count of rolesSid.
     */
    @java.lang.Override
    public int getRolesSidCount() {
      return rolesSid_.size();
    }
    /**
     * <pre>
     * Parallel arrays
     * </pre>
     *
     * <code>repeated int32 roles_sid = 8 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The rolesSid at the given index.
     */
    @java.lang.Override
    public int getRolesSid(int index) {
      return rolesSid_.getInt(index);
    }
    private int rolesSidMemoizedSerializedSize = -1;
    private void ensureRolesSidIsMutable() {
      com.google.protobuf.Internal.IntList tmp = rolesSid_;
      if (!tmp.isModifiable()) {
        rolesSid_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * Parallel arrays
     * </pre>
     *
     * <code>repeated int32 roles_sid = 8 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The rolesSid to set.
     */
    private void setRolesSid(
        int index, int value) {
      ensureRolesSidIsMutable();
      rolesSid_.setInt(index, value);
    }
    /**
     * <pre>
     * Parallel arrays
     * </pre>
     *
     * <code>repeated int32 roles_sid = 8 [packed = true];</code>
     * @param value The rolesSid to add.
     */
    private void addRolesSid(int value) {
      ensureRolesSidIsMutable();
      rolesSid_.addInt(value);
    }
    /**
     * <pre>
     * Parallel arrays
     * </pre>
     *
     * <code>repeated int32 roles_sid = 8 [packed = true];</code>
     * @param values The rolesSid to add.
     */
    private void addAllRolesSid(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensureRolesSidIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, rolesSid_);
    }
    /**
     * <pre>
     * Parallel arrays
     * </pre>
     *
     * <code>repeated int32 roles_sid = 8 [packed = true];</code>
     */
    private void clearRolesSid() {
      rolesSid_ = emptyIntList();
    }

    public static final int MEMIDS_FIELD_NUMBER = 9;
    private com.google.protobuf.Internal.LongList memids_;
    /**
     * <pre>
     * DELTA encoded
     * </pre>
     *
     * <code>repeated sint64 memids = 9 [packed = true];</code>
     * @return A list containing the memids.
     */
    @java.lang.Override
    public java.util.List<java.lang.Long>
        getMemidsList() {
      return memids_;
    }
    /**
     * <pre>
     * DELTA encoded
     * </pre>
     *
     * <code>repeated sint64 memids = 9 [packed = true];</code>
     * @return The count of memids.
     */
    @java.lang.Override
    public int getMemidsCount() {
      return memids_.size();
    }
    /**
     * <pre>
     * DELTA encoded
     * </pre>
     *
     * <code>repeated sint64 memids = 9 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The memids at the given index.
     */
    @java.lang.Override
    public long getMemids(int index) {
      return memids_.getLong(index);
    }
    private int memidsMemoizedSerializedSize = -1;
    private void ensureMemidsIsMutable() {
      com.google.protobuf.Internal.LongList tmp = memids_;
      if (!tmp.isModifiable()) {
        memids_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
       }
    }
    /**
     * <pre>
     * DELTA encoded
     * </pre>
     *
     * <code>repeated sint64 memids = 9 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The memids to set.
     */
    private void setMemids(
        int index, long value) {
      ensureMemidsIsMutable();
      memids_.setLong(index, value);
    }
    /**
     * <pre>
     * DELTA encoded
     * </pre>
     *
     * <code>repeated sint64 memids = 9 [packed = true];</code>
     * @param value The memids to add.
     */
    private void addMemids(long value) {
      ensureMemidsIsMutable();
      memids_.addLong(value);
    }
    /**
     * <pre>
     * DELTA encoded
     * </pre>
     *
     * <code>repeated sint64 memids = 9 [packed = true];</code>
     * @param values The memids to add.
     */
    private void addAllMemids(
        java.lang.Iterable<? extends java.lang.Long> values) {
      ensureMemidsIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, memids_);
    }
    /**
     * <pre>
     * DELTA encoded
     * </pre>
     *
     * <code>repeated sint64 memids = 9 [packed = true];</code>
     */
    private void clearMemids() {
      memids_ = emptyLongList();
    }

    public static final int TYPES_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.IntList types_;
    private static final com.google.protobuf.Internal.ListAdapter.Converter<
        java.lang.Integer, de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType> types_converter_ =
            new com.google.protobuf.Internal.ListAdapter.Converter<
                java.lang.Integer, de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType>() {
              @java.lang.Override
              public de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType convert(java.lang.Integer from) {
                de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType result = de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType.forNumber(from);
                return result == null ? de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType.NODE : result;
              }
            };
    /**
     * <code>repeated .OSMPBF.Relation.MemberType types = 10 [packed = true];</code>
     * @return A list containing the types.
     */
    @java.lang.Override
    public java.util.List<de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType> getTypesList() {
      return new com.google.protobuf.Internal.ListAdapter<
          java.lang.Integer, de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType>(types_, types_converter_);
    }
    /**
     * <code>repeated .OSMPBF.Relation.MemberType types = 10 [packed = true];</code>
     * @return The count of types.
     */
    @java.lang.Override
    public int getTypesCount() {
      return types_.size();
    }
    /**
     * <code>repeated .OSMPBF.Relation.MemberType types = 10 [packed = true];</code>
     * @param index The index of the element to return.
     * @return The types at the given index.
     */
    @java.lang.Override
    public de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType getTypes(int index) {
      de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType result = de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType.forNumber(types_.getInt(index));
      return result == null ? de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType.NODE : result;
    }
    private int typesMemoizedSerializedSize;
    private void ensureTypesIsMutable() {
      com.google.protobuf.Internal.IntList tmp = types_;
      if (!tmp.isModifiable()) {
        types_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(tmp);
      }
    }
    /**
     * <code>repeated .OSMPBF.Relation.MemberType types = 10 [packed = true];</code>
     * @param index The index to set the value at.
     * @param value The types to set.
     */
    private void setTypes(
        int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType value) {
      value.getClass();
  ensureTypesIsMutable();
      types_.setInt(index, value.getNumber());
    }
    /**
     * <code>repeated .OSMPBF.Relation.MemberType types = 10 [packed = true];</code>
     * @param value The types to add.
     */
    private void addTypes(de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType value) {
      value.getClass();
  ensureTypesIsMutable();
      types_.addInt(value.getNumber());
    }
    /**
     * <code>repeated .OSMPBF.Relation.MemberType types = 10 [packed = true];</code>
     * @param values The types to add.
     */
    private void addAllTypes(
        java.lang.Iterable<? extends de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType> values) {
      ensureTypesIsMutable();
      for (de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType value : values) {
        types_.addInt(value.getNumber());
      }
    }
    /**
     * <code>repeated .OSMPBF.Relation.MemberType types = 10 [packed = true];</code>
     */
    private void clearTypes() {
      types_ = emptyIntList();
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code OSMPBF.Relation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation, Builder> implements
        // @@protoc_insertion_point(builder_implements:OSMPBF.Relation)
        de.topobyte.osm4j.pbf.protobuf.Osmformat.RelationOrBuilder {
      // Construct using de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required int64 id = 1;</code>
       * @return Whether the id field is set.
       */
      @java.lang.Override
      public boolean hasId() {
        return instance.hasId();
      }
      /**
       * <code>required int64 id = 1;</code>
       * @return The id.
       */
      @java.lang.Override
      public long getId() {
        return instance.getId();
      }
      /**
       * <code>required int64 id = 1;</code>
       * @param value The id to set.
       * @return This builder for chaining.
       */
      public Builder setId(long value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <code>required int64 id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }

      /**
       * <pre>
       * Parallel arrays.
       * </pre>
       *
       * <code>repeated uint32 keys = 2 [packed = true];</code>
       * @return A list containing the keys.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getKeysList() {
        return java.util.Collections.unmodifiableList(
            instance.getKeysList());
      }
      /**
       * <pre>
       * Parallel arrays.
       * </pre>
       *
       * <code>repeated uint32 keys = 2 [packed = true];</code>
       * @return The count of keys.
       */
      @java.lang.Override
      public int getKeysCount() {
        return instance.getKeysCount();
      }
      /**
       * <pre>
       * Parallel arrays.
       * </pre>
       *
       * <code>repeated uint32 keys = 2 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The keys at the given index.
       */
      @java.lang.Override
      public int getKeys(int index) {
        return instance.getKeys(index);
      }
      /**
       * <pre>
       * Parallel arrays.
       * </pre>
       *
       * <code>repeated uint32 keys = 2 [packed = true];</code>
       * @param value The keys to set.
       * @return This builder for chaining.
       */
      public Builder setKeys(
          int index, int value) {
        copyOnWrite();
        instance.setKeys(index, value);
        return this;
      }
      /**
       * <pre>
       * Parallel arrays.
       * </pre>
       *
       * <code>repeated uint32 keys = 2 [packed = true];</code>
       * @param value The keys to add.
       * @return This builder for chaining.
       */
      public Builder addKeys(int value) {
        copyOnWrite();
        instance.addKeys(value);
        return this;
      }
      /**
       * <pre>
       * Parallel arrays.
       * </pre>
       *
       * <code>repeated uint32 keys = 2 [packed = true];</code>
       * @param values The keys to add.
       * @return This builder for chaining.
       */
      public Builder addAllKeys(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllKeys(values);
        return this;
      }
      /**
       * <pre>
       * Parallel arrays.
       * </pre>
       *
       * <code>repeated uint32 keys = 2 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearKeys() {
        copyOnWrite();
        instance.clearKeys();
        return this;
      }

      /**
       * <code>repeated uint32 vals = 3 [packed = true];</code>
       * @return A list containing the vals.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getValsList() {
        return java.util.Collections.unmodifiableList(
            instance.getValsList());
      }
      /**
       * <code>repeated uint32 vals = 3 [packed = true];</code>
       * @return The count of vals.
       */
      @java.lang.Override
      public int getValsCount() {
        return instance.getValsCount();
      }
      /**
       * <code>repeated uint32 vals = 3 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The vals at the given index.
       */
      @java.lang.Override
      public int getVals(int index) {
        return instance.getVals(index);
      }
      /**
       * <code>repeated uint32 vals = 3 [packed = true];</code>
       * @param value The vals to set.
       * @return This builder for chaining.
       */
      public Builder setVals(
          int index, int value) {
        copyOnWrite();
        instance.setVals(index, value);
        return this;
      }
      /**
       * <code>repeated uint32 vals = 3 [packed = true];</code>
       * @param value The vals to add.
       * @return This builder for chaining.
       */
      public Builder addVals(int value) {
        copyOnWrite();
        instance.addVals(value);
        return this;
      }
      /**
       * <code>repeated uint32 vals = 3 [packed = true];</code>
       * @param values The vals to add.
       * @return This builder for chaining.
       */
      public Builder addAllVals(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllVals(values);
        return this;
      }
      /**
       * <code>repeated uint32 vals = 3 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearVals() {
        copyOnWrite();
        instance.clearVals();
        return this;
      }

      /**
       * <code>optional .OSMPBF.Info info = 4;</code>
       */
      @java.lang.Override
      public boolean hasInfo() {
        return instance.hasInfo();
      }
      /**
       * <code>optional .OSMPBF.Info info = 4;</code>
       */
      @java.lang.Override
      public de.topobyte.osm4j.pbf.protobuf.Osmformat.Info getInfo() {
        return instance.getInfo();
      }
      /**
       * <code>optional .OSMPBF.Info info = 4;</code>
       */
      public Builder setInfo(de.topobyte.osm4j.pbf.protobuf.Osmformat.Info value) {
        copyOnWrite();
        instance.setInfo(value);
        return this;
        }
      /**
       * <code>optional .OSMPBF.Info info = 4;</code>
       */
      public Builder setInfo(
          de.topobyte.osm4j.pbf.protobuf.Osmformat.Info.Builder builderForValue) {
        copyOnWrite();
        instance.setInfo(builderForValue.build());
        return this;
      }
      /**
       * <code>optional .OSMPBF.Info info = 4;</code>
       */
      public Builder mergeInfo(de.topobyte.osm4j.pbf.protobuf.Osmformat.Info value) {
        copyOnWrite();
        instance.mergeInfo(value);
        return this;
      }
      /**
       * <code>optional .OSMPBF.Info info = 4;</code>
       */
      public Builder clearInfo() {  copyOnWrite();
        instance.clearInfo();
        return this;
      }

      /**
       * <pre>
       * Parallel arrays
       * </pre>
       *
       * <code>repeated int32 roles_sid = 8 [packed = true];</code>
       * @return A list containing the rolesSid.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getRolesSidList() {
        return java.util.Collections.unmodifiableList(
            instance.getRolesSidList());
      }
      /**
       * <pre>
       * Parallel arrays
       * </pre>
       *
       * <code>repeated int32 roles_sid = 8 [packed = true];</code>
       * @return The count of rolesSid.
       */
      @java.lang.Override
      public int getRolesSidCount() {
        return instance.getRolesSidCount();
      }
      /**
       * <pre>
       * Parallel arrays
       * </pre>
       *
       * <code>repeated int32 roles_sid = 8 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The rolesSid at the given index.
       */
      @java.lang.Override
      public int getRolesSid(int index) {
        return instance.getRolesSid(index);
      }
      /**
       * <pre>
       * Parallel arrays
       * </pre>
       *
       * <code>repeated int32 roles_sid = 8 [packed = true];</code>
       * @param value The rolesSid to set.
       * @return This builder for chaining.
       */
      public Builder setRolesSid(
          int index, int value) {
        copyOnWrite();
        instance.setRolesSid(index, value);
        return this;
      }
      /**
       * <pre>
       * Parallel arrays
       * </pre>
       *
       * <code>repeated int32 roles_sid = 8 [packed = true];</code>
       * @param value The rolesSid to add.
       * @return This builder for chaining.
       */
      public Builder addRolesSid(int value) {
        copyOnWrite();
        instance.addRolesSid(value);
        return this;
      }
      /**
       * <pre>
       * Parallel arrays
       * </pre>
       *
       * <code>repeated int32 roles_sid = 8 [packed = true];</code>
       * @param values The rolesSid to add.
       * @return This builder for chaining.
       */
      public Builder addAllRolesSid(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        copyOnWrite();
        instance.addAllRolesSid(values);
        return this;
      }
      /**
       * <pre>
       * Parallel arrays
       * </pre>
       *
       * <code>repeated int32 roles_sid = 8 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearRolesSid() {
        copyOnWrite();
        instance.clearRolesSid();
        return this;
      }

      /**
       * <pre>
       * DELTA encoded
       * </pre>
       *
       * <code>repeated sint64 memids = 9 [packed = true];</code>
       * @return A list containing the memids.
       */
      @java.lang.Override
      public java.util.List<java.lang.Long>
          getMemidsList() {
        return java.util.Collections.unmodifiableList(
            instance.getMemidsList());
      }
      /**
       * <pre>
       * DELTA encoded
       * </pre>
       *
       * <code>repeated sint64 memids = 9 [packed = true];</code>
       * @return The count of memids.
       */
      @java.lang.Override
      public int getMemidsCount() {
        return instance.getMemidsCount();
      }
      /**
       * <pre>
       * DELTA encoded
       * </pre>
       *
       * <code>repeated sint64 memids = 9 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The memids at the given index.
       */
      @java.lang.Override
      public long getMemids(int index) {
        return instance.getMemids(index);
      }
      /**
       * <pre>
       * DELTA encoded
       * </pre>
       *
       * <code>repeated sint64 memids = 9 [packed = true];</code>
       * @param value The memids to set.
       * @return This builder for chaining.
       */
      public Builder setMemids(
          int index, long value) {
        copyOnWrite();
        instance.setMemids(index, value);
        return this;
      }
      /**
       * <pre>
       * DELTA encoded
       * </pre>
       *
       * <code>repeated sint64 memids = 9 [packed = true];</code>
       * @param value The memids to add.
       * @return This builder for chaining.
       */
      public Builder addMemids(long value) {
        copyOnWrite();
        instance.addMemids(value);
        return this;
      }
      /**
       * <pre>
       * DELTA encoded
       * </pre>
       *
       * <code>repeated sint64 memids = 9 [packed = true];</code>
       * @param values The memids to add.
       * @return This builder for chaining.
       */
      public Builder addAllMemids(
          java.lang.Iterable<? extends java.lang.Long> values) {
        copyOnWrite();
        instance.addAllMemids(values);
        return this;
      }
      /**
       * <pre>
       * DELTA encoded
       * </pre>
       *
       * <code>repeated sint64 memids = 9 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearMemids() {
        copyOnWrite();
        instance.clearMemids();
        return this;
      }

      /**
       * <code>repeated .OSMPBF.Relation.MemberType types = 10 [packed = true];</code>
       * @return A list containing the types.
       */
      @java.lang.Override
      public java.util.List<de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType> getTypesList() {
        return instance.getTypesList();
      }
      /**
       * <code>repeated .OSMPBF.Relation.MemberType types = 10 [packed = true];</code>
       * @return The count of types.
       */
      @java.lang.Override
      public int getTypesCount() {
        return instance.getTypesCount();
      }
      /**
       * <code>repeated .OSMPBF.Relation.MemberType types = 10 [packed = true];</code>
       * @param index The index of the element to return.
       * @return The types at the given index.
       */
      @java.lang.Override
      public de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType getTypes(int index) {
        return instance.getTypes(index);
      }
      /**
       * <code>repeated .OSMPBF.Relation.MemberType types = 10 [packed = true];</code>
       * @param index The index to set the value at.
       * @param value The types to set.
       * @return This builder for chaining.
       */
      public Builder setTypes(
          int index, de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType value) {
        copyOnWrite();
        instance.setTypes(index, value);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Relation.MemberType types = 10 [packed = true];</code>
       * @param value The types to add.
       * @return This builder for chaining.
       */
      public Builder addTypes(de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType value) {
        copyOnWrite();
        instance.addTypes(value);
        return this;
      }
      /**
       * <code>repeated .OSMPBF.Relation.MemberType types = 10 [packed = true];</code>
       * @param values The types to add.
       * @return This builder for chaining.
       */
      public Builder addAllTypes(
          java.lang.Iterable<? extends de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType> values) {
        copyOnWrite();
        instance.addAllTypes(values);  return this;
      }
      /**
       * <code>repeated .OSMPBF.Relation.MemberType types = 10 [packed = true];</code>
       * @return This builder for chaining.
       */
      public Builder clearTypes() {
        copyOnWrite();
        instance.clearTypes();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:OSMPBF.Relation)
    }
    private byte memoizedIsInitialized = 2;
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "bitField0_",
              "id_",
              "keys_",
              "vals_",
              "info_",
              "rolesSid_",
              "memids_",
              "types_",
              de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.MemberType.internalGetVerifier(),
            };
            java.lang.String info =
                "\u0001\u0007\u0000\u0001\u0001\n\u0007\u0000\u0005\u0001\u0001\u1502\u0000\u0002" +
                "+\u0003+\u0004\u1009\u0001\b\'\t0\n,";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation> parser = PARSER;
          if (parser == null) {
            synchronized (de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return memoizedIsInitialized;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        memoizedIsInitialized = (byte) (arg0 == null ? 0 : 1);
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:OSMPBF.Relation)
    private static final de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation DEFAULT_INSTANCE;
    static {
      Relation defaultInstance = new Relation();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        Relation.class, defaultInstance);
    }

    public static de.topobyte.osm4j.pbf.protobuf.Osmformat.Relation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Relation> PARSER;

    public static com.google.protobuf.Parser<Relation> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
